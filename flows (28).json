[
    {
        "id": "ec18869e055325e2",
        "type": "tab-ritikkasotiya",
        "label": "IOT-PLC CONFIG",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "14317b546ddc61f9",
        "type": "tab",
        "label": "Haiport",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b74f4a1fb6e12656",
        "type": "tab",
        "label": "config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "618178b2a7cb292b",
        "type": "tab",
        "label": "in towards PLC",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b65463e5fd9488ee",
        "type": "tab",
        "label": "Out From PLC",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f6a696e993b16c48",
        "type": "tab",
        "label": "hearbeat + api",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b1ddcc6619ec652e",
        "type": "tab",
        "label": "Bottom Layer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6f284bd392ced08a",
        "type": "tab",
        "label": "ADD TOTE / DELETE TOTE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c03b9138cbeb5616",
        "type": "tab",
        "label": "system file delete",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d737dc293dcb5a37",
        "type": "subflow",
        "name": "filter and log",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "ada4db294e10f49a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 360,
                "wires": [
                    {
                        "id": "c4972d8cdbbe4b6c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f22858c864c5c430",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.200.220",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "500",
        "timeout": "2000",
        "name": "HaiPort Unload Integrate",
        "vartable": [
            {
                "addr": "DB268,X48.1",
                "name": "Init HaiPort Fetch"
            },
            {
                "addr": "DB268,S6.40",
                "name": "Barcode_value"
            },
            {
                "addr": "DB268,X2.2",
                "name": "Step2 sensor"
            },
            {
                "addr": "DB268,X0.3",
                "name": "Scanner Trig Failed"
            },
            {
                "addr": "DB268,X0.2",
                "name": "Scanner NoRead"
            },
            {
                "addr": "DB268,X0.0",
                "name": "HaiPort TimerOut"
            },
            {
                "addr": "DB268,X0.1",
                "name": "Infeed_sensor_Failed"
            },
            {
                "addr": "DB268,X0.4",
                "name": "Tote_Stuck"
            },
            {
                "addr": "DB268,X48.0",
                "name": "Fetched_Success"
            },
            {
                "addr": "DB268,X48.2",
                "name": "Reset Errors Fetched"
            }
        ]
    },
    {
        "id": "519a9c297613d180",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "192.168.200.220",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "500",
        "timeout": "2000",
        "name": "current plc pps22",
        "vartable": [
            {
                "addr": "M0.5",
                "name": "Clock_1s"
            },
            {
                "addr": "M1.2",
                "name": "Always_On_PLC_Bit"
            },
            {
                "addr": "DB48,S50.210",
                "name": "HMI tenant id"
            },
            {
                "addr": "M1.2",
                "name": "ALWAYS TRUE PLC"
            },
            {
                "addr": "DB48,X574.1",
                "name": "SET IP BROKER"
            },
            {
                "addr": "DB48,X574.0",
                "name": "SET TOPIC"
            },
            {
                "addr": "DB48,INT576",
                "name": "CONV_ID_INT"
            },
            {
                "addr": "DB33,X1850.1",
                "name": "STEP1_SENSOR"
            },
            {
                "addr": "DB33,X2204.1",
                "name": "Exit_sensor_Outfeed"
            },
            {
                "addr": "DB33,X354.5",
                "name": "PICK1 RELEASE"
            },
            {
                "addr": "DB33,X728.5",
                "name": "PICK2 RELEASE"
            },
            {
                "addr": "DB33,X1102.5",
                "name": "PICK3 RELEASE"
            },
            {
                "addr": "DB33,X1476.5",
                "name": "PICK4 RELEASE"
            },
            {
                "addr": "DB33,X2562.1",
                "name": "STOP BIT"
            },
            {
                "addr": "DB33,X2562.2",
                "name": "RESUME BIT"
            },
            {
                "addr": "M116.6",
                "name": "CYCLE RUN"
            },
            {
                "addr": "DB33,X2204.0",
                "name": "CONT EXIT READY"
            },
            {
                "addr": "DB33,X2564.0",
                "name": "PICK1 MOVED"
            },
            {
                "addr": "DB33,X2564.1",
                "name": "PICK2 MOVED"
            },
            {
                "addr": "DB33,X2564.2",
                "name": "PICK3 MOVED"
            },
            {
                "addr": "DB33,X2564.3",
                "name": "PICK4 MOVED"
            },
            {
                "addr": "DB33,X2566.0",
                "name": "RELEASE 30"
            },
            {
                "addr": "DB33,X2566.1",
                "name": "RELEASE 31"
            },
            {
                "addr": "DB33,X2566.2",
                "name": "RELEASE 32"
            },
            {
                "addr": "DB33,X2566.3",
                "name": "RELEASE 33"
            },
            {
                "addr": "DB33,X2566.4",
                "name": "RELEASE 34"
            },
            {
                "addr": "DB33,X2566.5",
                "name": "RELEASE 35"
            },
            {
                "addr": "DB33,X2568.0",
                "name": "MOVED 30"
            },
            {
                "addr": "DB33,X2568.1",
                "name": "MOVED 31"
            },
            {
                "addr": "DB33,X2568.2",
                "name": "MOVED 32"
            },
            {
                "addr": "DB33,X2568.3",
                "name": "MOVED 33"
            },
            {
                "addr": "DB33,X2568.4",
                "name": "MOVED 34"
            },
            {
                "addr": "DB33,X2568.5",
                "name": "MOVED 35"
            },
            {
                "addr": "DB33,S2574.40",
                "name": "Add tote task id"
            },
            {
                "addr": "DB33,S2616.40",
                "name": "Add tote cont id"
            },
            {
                "addr": "DB33,S2658.210",
                "name": "Add tote data"
            },
            {
                "addr": "DB33,INT2926",
                "name": "Add Tote step id"
            },
            {
                "addr": "DB33,X354.1",
                "name": "pick point1 sensor"
            },
            {
                "addr": "DB33,X728.1",
                "name": "pick point2 sensor"
            },
            {
                "addr": "DB33,X1102.1",
                "name": "pick point3 sensor"
            },
            {
                "addr": "DB33,X1476.1",
                "name": "pick point4 sensor"
            },
            {
                "addr": "DB23,X9666.0",
                "name": "ORDER CONV SENSOR1"
            },
            {
                "addr": "DB23,X9686.0",
                "name": "ORDER CONV SENSOR2"
            },
            {
                "addr": "DB23,X9706.0",
                "name": "ORDER CONV SENSOR3"
            },
            {
                "addr": "DB23,X9726.0",
                "name": "ORDER CONV SENSOR4"
            },
            {
                "addr": "DB23,X9746.0",
                "name": "ORDER CONV SENSOR5"
            },
            {
                "addr": "DB23,X9766.0",
                "name": "ORDER CONV SENSOR6"
            },
            {
                "addr": "DB33,X2558.0",
                "name": "Lifted Bit"
            },
            {
                "addr": "DB33,S2.40",
                "name": "REACH pick1 TASK_ID"
            },
            {
                "addr": "DB33,S44.40",
                "name": "REACH pick1 CONT_ID"
            },
            {
                "addr": "DB33,S86.210",
                "name": "REACH pick1 DATA"
            },
            {
                "addr": "DB33,X354.0",
                "name": "REACH Pick1 BIT"
            },
            {
                "addr": "DB33,S376.40",
                "name": "REACH pick2 TASK_ID"
            },
            {
                "addr": "DB33,S418.40",
                "name": "REACH pick2 CONT_ID"
            },
            {
                "addr": "DB33,S460.210",
                "name": "REACH pick2 DATA"
            },
            {
                "addr": "DB33,X728.0",
                "name": "REACH PICK2 BIT"
            },
            {
                "addr": "DB33,S750.40",
                "name": "REACH pick3 TASK_ID"
            },
            {
                "addr": "DB33,S792.40",
                "name": "REACH pick3 CONT_ID"
            },
            {
                "addr": "DB33,S834.210",
                "name": "REACH pick3 DATA"
            },
            {
                "addr": "DB33,X1102.0",
                "name": "REACH PICK3 BIT"
            },
            {
                "addr": "DB33,S1124.40",
                "name": "REACH pick4 TASK_ID"
            },
            {
                "addr": "DB33,S1166.40",
                "name": "REACH pick4 CONT_ID"
            },
            {
                "addr": "DB33,S1208.210",
                "name": "REACH pick4 DATA"
            },
            {
                "addr": "DB33,X1476.0",
                "name": "REACH PICK4 BIT"
            },
            {
                "addr": "DB33,S1852.40",
                "name": "EXIT READY TASK ID"
            },
            {
                "addr": "DB33,S1894.40",
                "name": "EXIT READY CONT ID"
            },
            {
                "addr": "DB33,S1936.210",
                "name": "EXIT READY DATA"
            },
            {
                "addr": "DB33,S2914.10",
                "name": "Add Tote Destination Id"
            },
            {
                "addr": "DB33,X3326.0",
                "name": "Add Tote Sucess Resp PLC"
            },
            {
                "addr": "DB33,X3326.2",
                "name": "Add Tote Fail Resp PLC"
            },
            {
                "addr": "DB33,X3326.5",
                "name": "ReDeploy Push"
            },
            {
                "addr": "DB33,S2970.40",
                "name": "Delete Cont ID"
            },
            {
                "addr": "DB33,INT3280",
                "name": "Deleted STEP"
            },
            {
                "addr": "DB33,X3332.0",
                "name": "Delete msg pushed"
            },
            {
                "addr": "DB33,X3332.1",
                "name": "null msg push"
            },
            {
                "addr": "DB33,INT3334",
                "name": "Delete process status"
            },
            {
                "addr": "DB33,X3339.0",
                "name": "Retry Release1"
            },
            {
                "addr": "DB33,X3339.1",
                "name": "Retry Release2"
            },
            {
                "addr": "DB33,X3339.2",
                "name": "Retry Release3"
            },
            {
                "addr": "DB33,X3339.3",
                "name": "Retry Release4"
            },
            {
                "addr": "DB2,S1330.210",
                "name": "STEP1_STEP4 HB"
            },
            {
                "addr": "DB2,S1586.210",
                "name": "STEP5_STEP8 HB"
            },
            {
                "addr": "DB2,S1842.210",
                "name": "STEP9_STEP12 HB"
            },
            {
                "addr": "DB2,S2098.210",
                "name": "STEP13_STEP16 HB"
            },
            {
                "addr": "DB2,S2354.210",
                "name": "STEP17_STEP20 HB"
            },
            {
                "addr": "DB2,S2610.210",
                "name": "STEP21_STEP24 HB"
            },
            {
                "addr": "DB48,S440.132",
                "name": "IP BROKER STRING"
            },
            {
                "addr": "DB48,INT592",
                "name": "TENANT ID LENGTH"
            },
            {
                "addr": "DB33,X3640.3",
                "name": "IOT HB"
            },
            {
                "addr": "DB23,S10440.40",
                "name": "Shared_horz_hop-in@task"
            },
            {
                "addr": "DB23,S10482.40",
                "name": "Shared_horz_hop-in@cont"
            },
            {
                "addr": "DB23,S10524.40",
                "name": "Shared_horz_hop-in@data"
            },
            {
                "addr": "DB23,S10780.40",
                "name": "Shared_horz_hop-in@dest"
            },
            {
                "addr": "DB23,X5050.7",
                "name": "MDR CMD HOP-IN HORZ"
            },
            {
                "addr": "DB23,S10794.40",
                "name": "Shared_hop-int_hop-out@task"
            },
            {
                "addr": "DB23,S10836.40",
                "name": "Shared_hop-int_hop-out@cont"
            },
            {
                "addr": "DB23,S10878.40",
                "name": "Shared_hop-int_hop-out@data"
            },
            {
                "addr": "DB23,S11134.40",
                "name": "Shared_hop-int_hop-out@dest"
            },
            {
                "addr": "DB23,INT11502",
                "name": "RCV STATUS FROM PREVIOUS STATION"
            },
            {
                "addr": "DB33,X2562.0",
                "name": "IOT MQTT STATUS"
            },
            {
                "addr": "DB33,X3636.1",
                "name": "Init Haiport TF"
            },
            {
                "addr": "DB33,X3640.2",
                "name": "Init Cont Transferred"
            },
            {
                "addr": "DB33,X3641.1",
                "name": "Last Sensor_outfeed"
            },
            {
                "addr": "DB33,X3641.2",
                "name": "Infeed_first_sensor"
            },
            {
                "addr": "DB33,X3641.3",
                "name": "Infeed_second_sensor"
            },
            {
                "addr": "DB33,X3641.4",
                "name": "Last Step Data Valid"
            },
            {
                "addr": "DB33,X3641.5",
                "name": "Start_PB_init"
            },
            {
                "addr": "DB33,X3641.6",
                "name": "Stop_PB_init"
            },
            {
                "addr": "DB2,S2866.210",
                "name": "STEP25-STEP26"
            },
            {
                "addr": "DB33,X3339.4",
                "name": "init HaiPort Fetch"
            },
            {
                "addr": "DB33,S3340.40",
                "name": "Barcode"
            },
            {
                "addr": "DB33,X3642.3",
                "name": "Trig Fetched"
            },
            {
                "addr": "DB33,X3636.0",
                "name": "Retry Dropped"
            },
            {
                "addr": "DB33,X3716.4",
                "name": "Failed Fetched Container"
            },
            {
                "addr": "DB33,S342.10",
                "name": "REACH1 DEST"
            },
            {
                "addr": "DB33,S716.10",
                "name": "REACH2 DEST"
            },
            {
                "addr": "DB33,S1090.10",
                "name": "REACH3 DEST"
            },
            {
                "addr": "DB33,S1464.10",
                "name": "REACH4 DEST"
            },
            {
                "addr": "DB33,S1498.40",
                "name": "Dropped Task_id"
            },
            {
                "addr": "DB33,S1540.40",
                "name": "Dropped Cont_id"
            },
            {
                "addr": "DB33,S1582.210",
                "name": "Dropped Data"
            },
            {
                "addr": "DB33,S1838.10",
                "name": "Dropped Dest_id"
            },
            {
                "addr": "DB33,X2204.1",
                "name": "Exit Sensor"
            }
        ]
    },
    {
        "id": "dae8e0f240545747",
        "type": "mqtt-broker",
        "name": "",
        "broker": "30.224.92.20",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "659fd2be2b632454",
        "type": "mqtt-broker",
        "name": "",
        "broker": "30.224.92.20",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ada4db294e10f49a",
        "type": "json",
        "z": "d737dc293dcb5a37",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "f9d68c7623b59061"
            ]
        ]
    },
    {
        "id": "f9d68c7623b59061",
        "type": "function",
        "z": "d737dc293dcb5a37",
        "name": "",
        "func": "if (msg.payload.conveyor_id==global.get(\"conveyor_id_hmi\"))\n{\nglobal.set(\"container_id_log\",msg.payload.container_id)\nglobal.set(\"msg_type_log\",msg.payload.msg_type)\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 280,
        "wires": [
            [
                "c7a361922ea0797d"
            ]
        ]
    },
    {
        "id": "c7a361922ea0797d",
        "type": "json",
        "z": "d737dc293dcb5a37",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 590,
        "y": 280,
        "wires": [
            [
                "c4972d8cdbbe4b6c"
            ]
        ]
    },
    {
        "id": "c4972d8cdbbe4b6c",
        "type": "function",
        "z": "d737dc293dcb5a37",
        "name": "",
        "func": "var a = msg.payload\n\nvar b = global.get(\"container_id_log\")\n\nvar c = new Date()\n\nvar f = global.get(\"msg_type_log\")\n\nvar d = JSON.stringify(c)\n\n\nvar e = d + \" \" + f + \" for \" + b + \" \" + a\n\nmsg.payload = e;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "4b9bdc51357cad5a",
        "type": "comment",
        "z": "14317b546ddc61f9",
        "name": "safe+resp+fetch+ack+fetched+dropped+ack",
        "info": "",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "325b4bb432e2bb90",
        "type": "json",
        "z": "14317b546ddc61f9",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 480,
        "wires": [
            [
                "6707db10563bac13"
            ]
        ]
    },
    {
        "id": "6707db10563bac13",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "fetch cont and ack",
        "func": "var fetch_container_ack = {};\n\nvar a = global.get(\"st1_pps_id\");\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload.msg_type==\"fetch_container\" && msg.payload.step_id==\"1\" && msg.payload.conveyor_id==a)\n{\n fetch_container_ack.task_id =   msg.payload.task_id;\n fetch_container_ack.step_id =   msg.payload.step_id; \n fetch_container_ack.timestamp = JSON.stringify(time); \n fetch_container_ack.msg_type = \"fetch_container_ack\";\n fetch_container_ack.data = msg.payload.data;\n fetch_container_ack.conveyor_id = global.get(\"st1_pps_id\");\n \n \n if (global.get(\"st1.step1_sensor\")==false)\n{ \n fetch_container_ack.status = \"success\"\n fetch_container_ack.errorCode = \"\"\n fetch_container_ack.errorMessage = \"\"\n}\n\nelse if (global.get(\"st1.step1_sensor\")==true)\n{\n fetch_container_ack.status = \"failed\"\n fetch_container_ack.errorCode = \"ERR901\"\n fetch_container_ack.errorMessage = \"TOTE ALREADY PRESENT\" \n}\nglobal.set(\"fetch_container_ack\",fetch_container_ack);\nmsg.topic = global.get(\"without_ppsid_send_event_topic\");\nmsg.payload = fetch_container_ack\nreturn msg;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n// \"{\n//   \"task_id\":\"task001\",\n//   \"timestamp\":\"1635402778670\",\n//   \"conveyor_id\":\"1\",\n//   \"step_id\":\"10\",\n//   \"msg_type\":\"fetch_container\",\n//   \"data\":{  \"originating_service\":\"GMC\"  }\n// }\"\n\n// \"{ \n//   \"task_id\":\"task001\", \n//   \"timestamp\":\"1635402778670\", \n//   \"status\":\"success/failed\", \n//   \"errorCode\":\"ER001\", \n//   \"errorMessage\":\"errorreason\", \n//   \"conveyor_id\":\"1\", \n//   \"step_id\":\"\", \n//   \"msg_type\":\"fetch_container_ack\", \n//   \"container_id\":\"tote001\", \n//   \"data\":{  \"originating_service\":\"GMC\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 460,
        "wires": [
            [
                "9ced3296c8953815",
                "77569df345dd69c8",
                "a6e0ece287b34fa9"
            ]
        ]
    },
    {
        "id": "07b13d3acf079963",
        "type": "mqtt out",
        "z": "14317b546ddc61f9",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "659fd2be2b632454",
        "x": 1230,
        "y": 460,
        "wires": []
    },
    {
        "id": "206322f31aadb4c3",
        "type": "link in",
        "z": "14317b546ddc61f9",
        "name": "",
        "links": [
            "17bd724713632bdf"
        ],
        "x": 355,
        "y": 480,
        "wires": [
            [
                "325b4bb432e2bb90"
            ]
        ]
    },
    {
        "id": "88f18e0130aefdab",
        "type": "s7 out",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "variable": "Init HaiPort Fetch",
        "name": "",
        "x": 1230,
        "y": 540,
        "wires": []
    },
    {
        "id": "9ced3296c8953815",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "if (msg.payload.status=='success')\n{\nmsg.payload=true\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 520,
        "wires": [
            [
                "88f18e0130aefdab"
            ]
        ]
    },
    {
        "id": "b0d412bbf9b0d423",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "Barcode_value",
        "diff": false,
        "name": "",
        "x": 380,
        "y": 640,
        "wires": [
            [
                "a026e5bd3b018d7d"
            ]
        ]
    },
    {
        "id": "d17ae3f449365bc2",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "Fetched_Success",
        "diff": false,
        "name": "",
        "x": 370,
        "y": 760,
        "wires": [
            [
                "c952b646e1f31434"
            ]
        ]
    },
    {
        "id": "c952b646e1f31434",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "fetched msg",
        "func": "var fetched = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload==true && global.get(\"fetch_container_ack.task_id\")!=\"\" )\n{\n    \n\nfetched.task_id=global.get(\"fetch_container_ack.task_id\")\nfetched.timestamp = JSON.stringify(time)\n\nfetched.conveyor_id = global.get(\"st1_pps_id\");\nfetched.step_id = \"1\"\nfetched.msg_type = \"container_fetched\";\nfetched.container_id = global.get(\"barcode\");\nfetched.data = {};\n\n\nfetched.status = \"success\"\nfetched.errorCode=\"\"\nfetched.errorMessage=\"\"\n\n\nmsg.topic = global.get(\"without_ppsid_send_event_topic\");\nmsg.payload = fetched;\n\nreturn msg;\n}\n\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"1\"\", \n//   \"\"msg_type\"\":\"\"container_fetched\"\", \n//   \"\"container_id\"\":\"\"\"\", \n//   \"\"data\"\":{}\n// }\"\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 760,
        "wires": [
            [
                "633d1e737548119f"
            ]
        ]
    },
    {
        "id": "d4b5e685e69b01a8",
        "type": "mqtt out",
        "z": "14317b546ddc61f9",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "659fd2be2b632454",
        "x": 1150,
        "y": 760,
        "wires": []
    },
    {
        "id": "d482b5adbee2a197",
        "type": "link in",
        "z": "14317b546ddc61f9",
        "name": "send events mqtt (link_in) for publish",
        "links": [
            "937cce842b747007"
        ],
        "x": 1045,
        "y": 400,
        "wires": [
            [
                "07b13d3acf079963"
            ]
        ]
    },
    {
        "id": "54bad4e05bbc85fc",
        "type": "link in",
        "z": "14317b546ddc61f9",
        "name": "send events mqtt (link_in) for publish",
        "links": [
            "937cce842b747007"
        ],
        "x": 1065,
        "y": 720,
        "wires": [
            [
                "d4b5e685e69b01a8"
            ]
        ]
    },
    {
        "id": "a026e5bd3b018d7d",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "global.set(\"barcode\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 640,
        "wires": [
            [
                "53ee1f145dd82abd"
            ]
        ]
    },
    {
        "id": "77569df345dd69c8",
        "type": "debug",
        "z": "14317b546ddc61f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 360,
        "wires": []
    },
    {
        "id": "f0b60d1b87ad8201",
        "type": "debug",
        "z": "14317b546ddc61f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 660,
        "wires": []
    },
    {
        "id": "9297e6dd46461c2f",
        "type": "inject",
        "z": "14317b546ddc61f9",
        "name": "manual push success",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 400,
        "y": 720,
        "wires": [
            [
                "c952b646e1f31434"
            ]
        ]
    },
    {
        "id": "1cbdcc6bec70586f",
        "type": "debug",
        "z": "14317b546ddc61f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 640,
        "wires": []
    },
    {
        "id": "54ad5ec8ccf8c3c9",
        "type": "delay",
        "z": "14317b546ddc61f9",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 950,
        "y": 760,
        "wires": [
            [
                "d4b5e685e69b01a8",
                "f0b60d1b87ad8201",
                "48a17033f1db6175"
            ]
        ]
    },
    {
        "id": "a6e0ece287b34fa9",
        "type": "delay",
        "z": "14317b546ddc61f9",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 970,
        "y": 460,
        "wires": [
            [
                "07b13d3acf079963"
            ]
        ]
    },
    {
        "id": "ea1b9d2735413341",
        "type": "inject",
        "z": "14317b546ddc61f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "without_ppsid_send_event_topic",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"34933b8b-e9c1-4dbd-8474-13ef9095b516\",\"timestamp\":\"1635402778670\",\"status\":\"success\",\"errorCode\":\"\",\"errorMessage\":\"\",\"conveyor_id\":\"14\",\"step_id\":\"1\",\"msg_type\":\"fetch_container_ack\",\"container_id\":\"\",\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 850,
        "y": 380,
        "wires": [
            [
                "07b13d3acf079963",
                "77569df345dd69c8"
            ]
        ]
    },
    {
        "id": "736a014d03ce67ab",
        "type": "inject",
        "z": "14317b546ddc61f9",
        "name": "fetched",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "without_ppsid_send_event_topic",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"9e21f87e-082d-4072-bc1a-367de665ff65\",\"timestamp\":\"1711518559524\",\"conveyor_id\":\"14\",\"step_id\":\"1\",\"msg_type\":\"fetch_container_ack\",\"data\":{},\"status\":\"success\",\"errorCode\":\"\",\"errorMessage\":\"\"}",
        "payloadType": "json",
        "x": 1110,
        "y": 300,
        "wires": [
            [
                "07b13d3acf079963"
            ]
        ]
    },
    {
        "id": "6ab4aab1cf745056",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "Step2 sensor",
        "diff": false,
        "name": "",
        "x": 370,
        "y": 580,
        "wires": [
            [
                "5b7969e01e0f741a"
            ]
        ]
    },
    {
        "id": "5b7969e01e0f741a",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "global.set(\"st1.step2_sensor\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "53ee1f145dd82abd",
        "type": "rbe",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 640,
        "wires": [
            [
                "1cbdcc6bec70586f"
            ]
        ]
    },
    {
        "id": "3673bd074fb80b09",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "if (msg.payload.status=='success')\n{\nmsg.payload=false\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 820,
        "wires": [
            [
                "310b1431baad1391"
            ]
        ]
    },
    {
        "id": "310b1431baad1391",
        "type": "s7 out",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "variable": "Fetched_Success",
        "name": "",
        "x": 1290,
        "y": 820,
        "wires": []
    },
    {
        "id": "a95d9ccb66c3110b",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "Tote_Stuck",
        "diff": false,
        "name": "",
        "x": 360,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "fe401b417cb19223",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "tote stuck fetch failed-901",
        "func": "var fetched = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload==true && global.get(\"fetch_container_ack.task_id\")!=\"\" && global.get(\"barcode\")!=\"\" && global.get(\"barcode\")!='NoRead')\n{\n    \n\nfetched.task_id=global.get(\"fetch_container_ack.task_id\")\nfetched.timestamp = JSON.stringify(time)\n\nfetched.conveyor_id = global.get(\"st1_pps_id\");\nfetched.step_id = \"1\"\nfetched.msg_type = \"container_fetched\";\nfetched.container_id = '';\nfetched.data = {};\n\n\nfetched.status = \"failed\"\nfetched.errorCode=\"ERR901\"\nfetched.errorMessage=\"Tote Stuck\"\n\nmsg.topic = global.get(\"without_ppsid_send_event_topic\");\nmsg.payload = fetched;\n\nreturn msg;\n}\n\n\n\n\n\n\n// var container_transferred = {}\n\n// var d = new Date()\n// var time = d.getTime()\n\n// if (msg.payload==true)\n// {\n    \n\n// container_transferred.task_id=global.get(\"fetch_container_ack.task_id\")\n// container_transferred.timestamp = JSON.stringify(time)\n\n// container_transferred.conveyor_id = global.get(\"st1_pps_id\");\n// container_transferred.step_id = \"1\"\n// container_transferred.msg_type = \"container_fetched\";\n// container_transferred.container_id = global.get(\"ppsid2_C20.container_id\");\n// container_transferred.data = {};\n\n\n// container_transferred.status = \"failed\"\n// container_transferred.errorCode=\"ERR904\"\n// container_transferred.errorMessage=\"RTA HaiPort TimeOut\"\n// msg.topic = global.get(\"without_ppsid_send_event_topic\");\n// msg.payload = container_transferred;\n// return msg;\n// }\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"\"\", \n//   \"\"msg_type\"\":\"\"container_transferred\"\", \n//   \"\"container_id\"\":\"\"tote001\"\", \n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"\n\n\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"1\"\", \n//   \"\"msg_type\"\":\"\"container_fetched\"\", \n//   \"\"container_id\"\":\"\"\"\", \n//   \"\"data\"\":{}\n// }\"\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 860,
        "wires": [
            [
                "633d1e737548119f"
            ]
        ]
    },
    {
        "id": "1ea3103adab411bc",
        "type": "s7 out",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "variable": "HaiPort TimerOut",
        "name": "",
        "x": 1290,
        "y": 900,
        "wires": []
    },
    {
        "id": "48a17033f1db6175",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "\nmsg.payload=false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 900,
        "wires": [
            [
                "1ea3103adab411bc"
            ]
        ]
    },
    {
        "id": "4bcdefc041a3ece0",
        "type": "inject",
        "z": "14317b546ddc61f9",
        "name": "write task id",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "123456789",
        "payloadType": "str",
        "x": 390,
        "y": 540,
        "wires": [
            [
                "5fb707d2a319275a"
            ]
        ]
    },
    {
        "id": "5fb707d2a319275a",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "global.set(\"fetch_container_ack.task_id\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "dc3829f4d80746a5",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "Infeed_sensor_Failed",
        "diff": false,
        "name": "",
        "x": 380,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ed238816a3c1e915",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "HaiPort TimerOut",
        "diff": false,
        "name": "",
        "x": 380,
        "y": 980,
        "wires": [
            [
                "0fdacc0e2fbd8eb0"
            ]
        ]
    },
    {
        "id": "1483e47f8ec0d39f",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "Scanner NoRead",
        "diff": false,
        "name": "",
        "x": 380,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "f1fab72b58f7a33c",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "Scanner Trig Failed",
        "diff": false,
        "name": "",
        "x": 390,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "601b42d2848a512f",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "infeed sensor failed-902",
        "func": "var fetched = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload==true && global.get(\"fetch_container_ack.task_id\")!=\"\")\n{\n    \n\nfetched.task_id=global.get(\"fetch_container_ack.task_id\")\nfetched.timestamp = JSON.stringify(time)\n\nfetched.conveyor_id = global.get(\"st1_pps_id\");\nfetched.step_id = \"1\"\nfetched.msg_type = \"container_fetched\";\nfetched.container_id = '';\nfetched.data = {};\n\n\nfetched.status = \"failed\"\nfetched.errorCode=\"ERR902\"\nfetched.errorMessage=\"Infeed Sensor Failed\"\n\nmsg.topic = global.get(\"without_ppsid_send_event_topic\");\nmsg.payload = fetched;\n\nreturn msg;\n}\n\n\n\n\n\n\n// var container_transferred = {}\n\n// var d = new Date()\n// var time = d.getTime()\n\n// if (msg.payload==true)\n// {\n    \n\n// container_transferred.task_id=global.get(\"fetch_container_ack.task_id\")\n// container_transferred.timestamp = JSON.stringify(time)\n\n// container_transferred.conveyor_id = global.get(\"st1_pps_id\");\n// container_transferred.step_id = \"1\"\n// container_transferred.msg_type = \"container_fetched\";\n// container_transferred.container_id = global.get(\"ppsid2_C20.container_id\");\n// container_transferred.data = {};\n\n\n// container_transferred.status = \"failed\"\n// container_transferred.errorCode=\"ERR904\"\n// container_transferred.errorMessage=\"RTA HaiPort TimeOut\"\n// msg.topic = global.get(\"without_ppsid_send_event_topic\");\n// msg.payload = container_transferred;\n// return msg;\n// }\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"\"\", \n//   \"\"msg_type\"\":\"\"container_transferred\"\", \n//   \"\"container_id\"\":\"\"tote001\"\", \n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"\n\n\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"1\"\", \n//   \"\"msg_type\"\":\"\"container_fetched\"\", \n//   \"\"container_id\"\":\"\"\"\", \n//   \"\"data\"\":{}\n// }\"\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 920,
        "wires": [
            [
                "633d1e737548119f"
            ]
        ]
    },
    {
        "id": "0fdacc0e2fbd8eb0",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "HaiPort RTS timeout -903",
        "func": "var fetched = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload==true && global.get(\"fetch_container_ack.task_id\")!=\"\")\n{\n    \n\nfetched.task_id=global.get(\"fetch_container_ack.task_id\")\nfetched.timestamp = JSON.stringify(time)\n\nfetched.conveyor_id = global.get(\"st1_pps_id\");\nfetched.step_id = \"1\"\nfetched.msg_type = \"container_fetched\";\nfetched.container_id = '';\nfetched.data = {};\n\n\nfetched.status = \"failed\"\nfetched.errorCode=\"ERR903\"\nfetched.errorMessage=\"HaiPort RTS TimeOut\"\n\nmsg.topic = global.get(\"without_ppsid_send_event_topic\");\nmsg.payload = fetched;\n\nreturn msg;\n}\n\n\n\n\n\n\n// var container_transferred = {}\n\n// var d = new Date()\n// var time = d.getTime()\n\n// if (msg.payload==true)\n// {\n    \n\n// container_transferred.task_id=global.get(\"fetch_container_ack.task_id\")\n// container_transferred.timestamp = JSON.stringify(time)\n\n// container_transferred.conveyor_id = global.get(\"st1_pps_id\");\n// container_transferred.step_id = \"1\"\n// container_transferred.msg_type = \"container_fetched\";\n// container_transferred.container_id = global.get(\"ppsid2_C20.container_id\");\n// container_transferred.data = {};\n\n\n// container_transferred.status = \"failed\"\n// container_transferred.errorCode=\"ERR904\"\n// container_transferred.errorMessage=\"RTA HaiPort TimeOut\"\n// msg.topic = global.get(\"without_ppsid_send_event_topic\");\n// msg.payload = container_transferred;\n// return msg;\n// }\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"\"\", \n//   \"\"msg_type\"\":\"\"container_transferred\"\", \n//   \"\"container_id\"\":\"\"tote001\"\", \n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"\n\n\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"1\"\", \n//   \"\"msg_type\"\":\"\"container_fetched\"\", \n//   \"\"container_id\"\":\"\"\"\", \n//   \"\"data\"\":{}\n// }\"\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 980,
        "wires": [
            [
                "633d1e737548119f"
            ]
        ]
    },
    {
        "id": "7234b735cd92bc68",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "scanner NoRead -904",
        "func": "var fetched = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload==true && global.get(\"fetch_container_ack.task_id\")!=\"\")\n{\n    \n\nfetched.task_id=global.get(\"fetch_container_ack.task_id\")\nfetched.timestamp = JSON.stringify(time)\n\nfetched.conveyor_id = global.get(\"st1_pps_id\");\nfetched.step_id = \"1\"\nfetched.msg_type = \"container_fetched\";\nfetched.container_id = 'NoRead';\nfetched.data = {};\n\n\nfetched.status = \"failed\"\nfetched.errorCode=\"ERR904\"\nfetched.errorMessage=\"Scanner Read Failed\"\n\nmsg.topic = global.get(\"without_ppsid_send_event_topic\");\nmsg.payload = fetched;\n\nreturn msg;\n}\n\n\n\n\n\n\n// var container_transferred = {}\n\n// var d = new Date()\n// var time = d.getTime()\n\n// if (msg.payload==true)\n// {\n    \n\n// container_transferred.task_id=global.get(\"fetch_container_ack.task_id\")\n// container_transferred.timestamp = JSON.stringify(time)\n\n// container_transferred.conveyor_id = global.get(\"st1_pps_id\");\n// container_transferred.step_id = \"1\"\n// container_transferred.msg_type = \"container_fetched\";\n// container_transferred.container_id = global.get(\"ppsid2_C20.container_id\");\n// container_transferred.data = {};\n\n\n// container_transferred.status = \"failed\"\n// container_transferred.errorCode=\"ERR904\"\n// container_transferred.errorMessage=\"RTA HaiPort TimeOut\"\n// msg.topic = global.get(\"without_ppsid_send_event_topic\");\n// msg.payload = container_transferred;\n// return msg;\n// }\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"\"\", \n//   \"\"msg_type\"\":\"\"container_transferred\"\", \n//   \"\"container_id\"\":\"\"tote001\"\", \n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"\n\n\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"1\"\", \n//   \"\"msg_type\"\":\"\"container_fetched\"\", \n//   \"\"container_id\"\":\"\"\"\", \n//   \"\"data\"\":{}\n// }\"\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1040,
        "wires": [
            [
                "633d1e737548119f"
            ]
        ]
    },
    {
        "id": "20f7d538301e5d10",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "scanner trigger failed-905",
        "func": "var fetched = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload==true && global.get(\"fetch_container_ack.task_id\")!=\"\")\n{\n    \n\nfetched.task_id=global.get(\"fetch_container_ack.task_id\")\nfetched.timestamp = JSON.stringify(time)\n\nfetched.conveyor_id = global.get(\"st1_pps_id\");\nfetched.step_id = \"1\"\nfetched.msg_type = \"container_fetched\";\nfetched.container_id = '';\nfetched.data = {};\n\n\nfetched.status = \"failed\"\nfetched.errorCode=\"ERR905\"\nfetched.errorMessage=\"Scanner Trigger Failed\"\n\nmsg.topic = global.get(\"without_ppsid_send_event_topic\");\nmsg.payload = fetched;\n\nreturn msg;\n}\n\n\n\n\n\n\n// var container_transferred = {}\n\n// var d = new Date()\n// var time = d.getTime()\n\n// if (msg.payload==true)\n// {\n    \n\n// container_transferred.task_id=global.get(\"fetch_container_ack.task_id\")\n// container_transferred.timestamp = JSON.stringify(time)\n\n// container_transferred.conveyor_id = global.get(\"st1_pps_id\");\n// container_transferred.step_id = \"1\"\n// container_transferred.msg_type = \"container_fetched\";\n// container_transferred.container_id = global.get(\"ppsid2_C20.container_id\");\n// container_transferred.data = {};\n\n\n// container_transferred.status = \"failed\"\n// container_transferred.errorCode=\"ERR904\"\n// container_transferred.errorMessage=\"RTA HaiPort TimeOut\"\n// msg.topic = global.get(\"without_ppsid_send_event_topic\");\n// msg.payload = container_transferred;\n// return msg;\n// }\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"\"\", \n//   \"\"msg_type\"\":\"\"container_transferred\"\", \n//   \"\"container_id\"\":\"\"tote001\"\", \n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"\n\n\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"1\"\", \n//   \"\"msg_type\"\":\"\"container_fetched\"\", \n//   \"\"container_id\"\":\"\"\"\", \n//   \"\"data\"\":{}\n// }\"\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1100,
        "wires": [
            [
                "633d1e737548119f"
            ]
        ]
    },
    {
        "id": "e7f4ab009fc7dd71",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b32bc9e0c07f8b5b",
        "type": "inject",
        "z": "14317b546ddc61f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "633d1e737548119f",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 760,
        "wires": [
            [
                "54ad5ec8ccf8c3c9",
                "3673bd074fb80b09"
            ]
        ]
    },
    {
        "id": "542320cc11804221",
        "type": "s7 in",
        "z": "14317b546ddc61f9",
        "endpoint": "f22858c864c5c430",
        "mode": "single",
        "variable": "Step2 sensor",
        "diff": false,
        "name": "",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "2950fcdb726d2916"
            ]
        ]
    },
    {
        "id": "2950fcdb726d2916",
        "type": "function",
        "z": "14317b546ddc61f9",
        "name": "",
        "func": "global.set(\"st1.step2_sensor\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8c06acf8fbfbe24a",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "cont release",
        "props": [
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task1002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"76\",\"step_id\":\"6\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"1\",\"step_id\":\"10\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "str",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "0d7432bc0027711a",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "cont lifted",
        "props": [
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task001\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"76\",\"step_id\":\"\",\"msg_type\":\"container_lifted\",\"container_id\":\"tote001\",\"data\":{}}",
        "payloadType": "str",
        "x": 120,
        "y": 220,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "19513b3a93a920d2",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "safe to drop",
        "props": [
            {
                "p": "topic",
                "v": "receive_topic_safe_to_drop",
                "vt": "global"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task0001\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"76\",\"step_id\":\"1\",\"msg_type\":\"safe_to_drop\",\"data\":{\"execution_id\":\"exec-1000\"}}",
        "payloadType": "str",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "7406ac7b36570f84",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "conv stop",
        "props": [
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task001\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"76\",\"msg_type\":\"conveyor_stop\",\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "str",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "9a6f214073f82248",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "conv resume",
        "props": [
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"76\",\"msg_type\":\"conveyor_resume\",\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "str",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "88c17a1b05aad6fd",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "cont dropped",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"76\",\"step_id\":\"1\",\"msg_type\":\"container_dropped\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"1\",\"step_id\":\"10\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "str",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "1f0df9e2afbfe192",
        "type": "status",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "scope": [
            "3a2daf9f6513bedd"
        ],
        "x": 600,
        "y": 1260,
        "wires": [
            [
                "1c16533ebfad5efc",
                "2e35f08afd0f7f2f"
            ]
        ]
    },
    {
        "id": "1c16533ebfad5efc",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "status.text",
        "targetType": "msg",
        "statusVal": "text",
        "statusType": "msg",
        "x": 850,
        "y": 1260,
        "wires": []
    },
    {
        "id": "30552b3cedba788f",
        "type": "catch",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "scope": [
            "1c16533ebfad5efc"
        ],
        "uncaught": false,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "63117a56458bf652"
            ]
        ]
    },
    {
        "id": "63117a56458bf652",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 200,
        "wires": []
    },
    {
        "id": "50c9ea9ee29e2274",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Always_On_PLC_Bit",
        "diff": false,
        "name": "",
        "x": 110,
        "y": 1260,
        "wires": [
            [
                "8c44856e207da926"
            ]
        ]
    },
    {
        "id": "8c44856e207da926",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "var tenant_id = global.get(\"tenant_id\")\n\nvar a = global.get(\"conveyor_id_hmi\");\n\nvar next_station_id = global.get(\"next_station_id\");\nvar previous_station_id = global.get(\"previous_station_id\");\n\n\n\nvar b = '.' + a ;\n\n// msg topic to be received by conveyor//\nvar suffix_rcv1 =b + \".conveyor-container-receive.requests\"\nvar suffix_rcv2 =b + \".safe-to-drop-conveyor.requests\"\n\n\n\nvar topic_rcv1 = tenant_id+suffix_rcv1\nvar topic_rcv2 = tenant_id+suffix_rcv2\n\nglobal.set(\"receive_topic\",topic_rcv1)\nglobal.set(\"receive_topic_safe_to_drop\",topic_rcv2)\n\n\n//msg topic to be sent by conveyor\n\nvar suffix_sent1 =\".conveyor-container-send.events\"\nvar suffix_sent2 = \".safe-to-drop-conveyor.events\"\nvar suffix_sent3 = \".conveyor-exceptions.events\"\nvar suffix_sent4 = \".conveyor-system.events\"\n\nvar topic_sent1 = tenant_id + suffix_sent1\nvar topic_sent2 = tenant_id + suffix_sent2\nvar topic_sent3 = tenant_id + suffix_sent3\nvar topic_sent4 = tenant_id + suffix_sent4\n\n\nglobal.set(\"send_event_topic\",topic_sent1)\nglobal.set(\"safe_to_drop_event_topic\",topic_sent2)\nglobal.set(\"exception_topic\",topic_sent3)\nglobal.set(\"system_topic\",topic_sent4)\n\nmsg.payload=global.get(\"receive_topic\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "db009028dd57ebbb",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "\n\n\nglobal.set(\"broker_ip_set_status\",msg.payload) // capture set ip from hmi\n\n\nvar c={}\n\n\n\n\nvar d = global.get(\"ip_broker_string\") // from HMI\n\n\n\n\n\nvar e = '{\"broker\":\"'+ d + '\",\"port\":\"1883\"}'\n\nc.broker= JSON.parse(e)\n\nif (msg.payload==true)\n{\nc.action = \"connect\"\nmsg = c\nreturn msg;\n}\n\nif (msg.payload==false)\n{\nc.action = 'disconnect'\nmsg = c\nreturn msg;\n}\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1340,
        "wires": [
            [
                "24190d98f7ff4a0a",
                "937cce842b747007"
            ]
        ]
    },
    {
        "id": "d2be8c1aa5b4994e",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "SET IP BROKER",
        "diff": true,
        "name": "",
        "x": 100,
        "y": 1340,
        "wires": [
            [
                "db009028dd57ebbb"
            ]
        ]
    },
    {
        "id": "24190d98f7ff4a0a",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1320,
        "wires": []
    },
    {
        "id": "84144d6f2a3b9561",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "SET TOPIC",
        "diff": true,
        "name": "",
        "x": 90,
        "y": 1440,
        "wires": [
            [
                "d5f9f8ae2f22966d"
            ]
        ]
    },
    {
        "id": "08d3d135e36e6414",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "if broker status ok then subsribe (receive.requests)",
        "func": "\nvar c={}\n\nc.action = 'subscribe'\n\nc.topic = global.get(\"receive_topic\")\n\n\nvar d = global.get(\"broker_ip_set_status\")\n\nif (msg.payload==true && d ==true)\n{\nmsg = c\n\n\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1560,
        "wires": [
            [
                "7c31153a3925a38c"
            ]
        ]
    },
    {
        "id": "7c31153a3925a38c",
        "type": "json",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 570,
        "y": 1560,
        "wires": [
            [
                "1e3e1b9aa45e4d2b",
                "c6cca3757f81b709",
                "903a9a5597df95ab"
            ]
        ]
    },
    {
        "id": "cae2d13c7aa79c8f",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2420,
        "wires": []
    },
    {
        "id": "e34c8a4b894d9a5d",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "var a = global.get(\"broker_ip_octet1\")\nvar b = global.get(\"broker_ip_octet2\")\nvar c = global.get(\"broker_ip_octet3\")\nvar d = global.get(\"broker_ip_octet4\")\n\nvar e =\".\"\n\nvar f = a+e+b+e+c+e+d\n\nmsg.payload= global.get(\"ip_broker_string\")\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2420,
        "wires": [
            [
                "4ffb0da8c2797d56"
            ]
        ]
    },
    {
        "id": "b2824fd556a1f6fa",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Always_On_PLC_Bit",
        "diff": false,
        "name": "",
        "x": 210,
        "y": 2420,
        "wires": [
            [
                "e34c8a4b894d9a5d"
            ]
        ]
    },
    {
        "id": "768e912541b9dc75",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "\nglobal.set(\"broker_ip\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 2420,
        "wires": [
            [
                "cae2d13c7aa79c8f"
            ]
        ]
    },
    {
        "id": "4ffb0da8c2797d56",
        "type": "rbe",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 550,
        "y": 2420,
        "wires": [
            [
                "768e912541b9dc75"
            ]
        ]
    },
    {
        "id": "f0578452c1f6100d",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "ip address mqtt broker",
        "info": "",
        "x": 220,
        "y": 2380,
        "wires": []
    },
    {
        "id": "399c3bdd81867ec3",
        "type": "mqtt in",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "0",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 790,
        "y": 1680,
        "wires": [
            [
                "5245c4d192cdb717",
                "b73996c20daf2df2"
            ]
        ]
    },
    {
        "id": "5245c4d192cdb717",
        "type": "link out",
        "z": "b74f4a1fb6e12656",
        "name": "safe to drop mqtt (link out)",
        "mode": "link",
        "links": [
            "1b5e38f71a967017",
            "65b5d5b901bb54a3"
        ],
        "x": 905,
        "y": 1720,
        "wires": []
    },
    {
        "id": "48f3cb1938d1f471",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "safe to drop resp mqtt (link in)",
        "links": [
            "eedf0bd3be81e455"
        ],
        "x": 175,
        "y": 2120,
        "wires": [
            [
                "5cefbef2e547a4e6",
                "9c0a2f4923e4b9e2"
            ]
        ]
    },
    {
        "id": "213aa263409cc61f",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "safe to drop mock",
        "props": [
            {
                "p": "topic",
                "v": "receive_topic_safe_to_drop",
                "vt": "global"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task0001\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"9\",\"step_id\":\"1\",\"msg_type\":\"safe_to_drop\",\"data\":{\"execution_id\":\"exec-1000\"}}",
        "payloadType": "str",
        "x": 660,
        "y": 2120,
        "wires": [
            [
                "3a2daf9f6513bedd"
            ]
        ]
    },
    {
        "id": "3a2daf9f6513bedd",
        "type": "mqtt out",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 820,
        "y": 2080,
        "wires": []
    },
    {
        "id": "c02d716586513d0c",
        "type": "mqtt out",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 320,
        "y": 2240,
        "wires": []
    },
    {
        "id": "75e57fdc392bc5d4",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "send events mqtt (link_in)",
        "links": [
            "51ed3c8a911d0fdb",
            "486d76fe53d4180f",
            "9cad5a5e31082604",
            "037e30dbae158e0f",
            "80471de355bdff34",
            "29049ba5b5efd63d",
            "8d172ce9a3efb7d3",
            "fdf3a6f1e3d732a0"
        ],
        "x": 175,
        "y": 2200,
        "wires": [
            [
                "c02d716586513d0c",
                "e2fc126fccb4e1ce"
            ]
        ]
    },
    {
        "id": "bdd878d703918a64",
        "type": "mqtt in",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "1",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 790,
        "y": 1800,
        "wires": [
            [
                "a9da899e9781f31f"
            ]
        ]
    },
    {
        "id": "9bb875dc31e86133",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "if broker status ok then subsribe (safe to drop req)",
        "func": "\nvar c={}\n\nc.action = 'subscribe'\n\nc.topic = global.get(\"receive_topic_safe_to_drop\")\n\n\nvar d = global.get(\"broker_ip_set_status\")\n\nif (msg.payload==true && d ==true)\n{\nmsg = c\n\n\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1680,
        "wires": [
            [
                "acd46ff04919afb8"
            ]
        ]
    },
    {
        "id": "92d761b5d0f96d4d",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "all topics global name",
        "info": "",
        "x": 180,
        "y": 1220,
        "wires": []
    },
    {
        "id": "85c08a2573888738",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "if broker status ok then subsribe (send event)",
        "func": "\nvar c={}\n\nc.action = \"subscribe\"\n\nc.topic = global.get(\"send_event_topic\")\n\n\nvar d = global.get(\"broker_ip_set_status\")\n\nif (msg.payload==true && d ==true)\n{\nmsg = c\n\n\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1800,
        "wires": [
            [
                "9378bbe951291c96"
            ]
        ]
    },
    {
        "id": "5cefbef2e547a4e6",
        "type": "mqtt out",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 300,
        "y": 2080,
        "wires": []
    },
    {
        "id": "9378bbe951291c96",
        "type": "json",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 530,
        "y": 1800,
        "wires": [
            [
                "bdd878d703918a64"
            ]
        ]
    },
    {
        "id": "fde43c3cef2514f1",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "safe to drop event",
        "info": "",
        "x": 270,
        "y": 2040,
        "wires": []
    },
    {
        "id": "89c1d0f52ed94f89",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "send event",
        "info": "",
        "x": 270,
        "y": 2160,
        "wires": []
    },
    {
        "id": "e2fc126fccb4e1ce",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 2200,
        "wires": []
    },
    {
        "id": "a9da899e9781f31f",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1800,
        "wires": []
    },
    {
        "id": "9c0a2f4923e4b9e2",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 2120,
        "wires": []
    },
    {
        "id": "2e35f08afd0f7f2f",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "if (msg.status.text==\"node-red:common.status.connected\")\n{\n    msg.payload=true\n}\nelse\n{\n    msg.payload=false\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1320,
        "wires": [
            [
                "e7c34a3e8f8900fa"
            ]
        ]
    },
    {
        "id": "e7c34a3e8f8900fa",
        "type": "s7 out",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "variable": "IOT MQTT STATUS",
        "name": "",
        "x": 990,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7094b8907d993af2",
        "type": "mqtt out",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 430,
        "y": 420,
        "wires": []
    },
    {
        "id": "e39c4feed067c4f7",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "safe to drop mock",
        "props": [
            {
                "p": "topic",
                "v": "receive_topic_safe_to_drop",
                "vt": "global"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task0011\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"76\",\"step_id\":\"1\",\"msg_type\":\"safe_to_drop\",\"data\":{\"execution_id\":\"exec-1000\"}}",
        "payloadType": "str",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "b73996c20daf2df2",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 930,
        "y": 1680,
        "wires": []
    },
    {
        "id": "77ef40ac87c2c3ea",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 930,
        "y": 1560,
        "wires": []
    },
    {
        "id": "502c8aa6e7bd9420",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "IP BROKER STRING",
        "diff": true,
        "name": "",
        "x": 220,
        "y": 2480,
        "wires": [
            [
                "9bede32dfd06892a"
            ]
        ]
    },
    {
        "id": "9bede32dfd06892a",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "global.set(\"ip_broker_string\",msg.payload)\n\nmsg.payload = global.get(\"ip_broker_string\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2480,
        "wires": [
            [
                "cf3d4f4d204c83f7"
            ]
        ]
    },
    {
        "id": "cf3d4f4d204c83f7",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 2480,
        "wires": []
    },
    {
        "id": "c450851a68dce002",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3545129d95763e29",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "HMI tenant id",
        "diff": false,
        "name": "",
        "x": 90,
        "y": 980,
        "wires": [
            [
                "9474a23a1ba9eef1"
            ]
        ]
    },
    {
        "id": "4ff79f324da1923b",
        "type": "s7 out",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "variable": "IOT HB",
        "name": "IOT HB",
        "x": 280,
        "y": 1120,
        "wires": []
    },
    {
        "id": "81cba6f5457debde",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Clock_1s",
        "diff": true,
        "name": "",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "4ff79f324da1923b"
            ]
        ]
    },
    {
        "id": "9474a23a1ba9eef1",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "var a=msg.payload\nvar c = global.get(\"tenant_id_length\")\n\nb=a.substring(0,c)\nmsg.payload = b\nglobal.set(\"tenant_id\",a)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 980,
        "wires": [
            [
                "0c77b27bfd83f432"
            ]
        ]
    },
    {
        "id": "3c8b952cddd71f02",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "TENANT ID LENGTH",
        "diff": false,
        "name": "",
        "x": 120,
        "y": 1040,
        "wires": [
            [
                "48f7df1d973f2828"
            ]
        ]
    },
    {
        "id": "48f7df1d973f2828",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "\nglobal.set(\"tenant_id_length\",msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "0c77b27bfd83f432",
        "type": "rbe",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 370,
        "y": 980,
        "wires": [
            [
                "c450851a68dce002"
            ]
        ]
    },
    {
        "id": "417709fb309b9b20",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "CONV_ID_INT",
        "diff": true,
        "name": "",
        "x": 640,
        "y": 980,
        "wires": [
            [
                "411397a245c97222"
            ]
        ]
    },
    {
        "id": "411397a245c97222",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "var a = msg.payload\n\nvar c = a-1\n\nvar e = a+1\n\nvar b = JSON.stringify(a)\n\nvar d = JSON.stringify(c)\n\n\nglobal.set(\"conveyor_id_hmi\",b)\nglobal.set(\"next_station_id\",d)\n\n\nif (e>0)\n{\n  var f = JSON.stringify(e)\n  global.set(\"previous_station_id\",f)\n    \n}\nelse\n{\n  global.set(\"previous_station_id\",'')  \n}\n\n\n\n\nmsg.payload = global.get(\"conveyor_id_hmi\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 980,
        "wires": [
            [
                "5afa7ccb880a4dad"
            ]
        ]
    },
    {
        "id": "5afa7ccb880a4dad",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 980,
        "wires": []
    },
    {
        "id": "937cce842b747007",
        "type": "link out",
        "z": "b74f4a1fb6e12656",
        "name": "out broker connect setting",
        "mode": "link",
        "links": [
            "6057e241c134837f",
            "2474bf8bcb7a7190",
            "d19d48fe69c6bb0c",
            "ecd65cc6ceda5ccf",
            "1bf0a0e3efb33a7d",
            "57e16d9e0f4a75a9",
            "f604fbbd526a8459",
            "024bb49ada6e5632",
            "ea57d3ed1422b76f",
            "0a4a4d45a8d79ef1",
            "574459f6746dd6a7",
            "1c2de813cdf4b711",
            "9e2653dd6338ecdb",
            "9b0997cb0dff81c9",
            "0ed6a9b23171ecd2",
            "edb99957976b3a76",
            "fb6f7fc23e0d3b22",
            "f039691b8ef8d195",
            "7d5990b147b2e862",
            "20c4829f24bec9b2",
            "d1f2247b06f5347e",
            "848418041fb55141",
            "6e90a34c43d8de87",
            "1a2d741b27a8f5dd",
            "0e7a14306161410d",
            "b9a48a9dc7d201df",
            "1660207e3bf1387f",
            "10089cc4711b76ed",
            "5ede2477fddb6d11",
            "77b1e970a1bb0e81",
            "c6b75049a04dba65",
            "b373782ce4f5b41e",
            "fce6546ac217ae0a",
            "a0199bb39a49c983",
            "93d0a81ec043af40",
            "9f13f79df9b1b051",
            "27492a05047d3353",
            "8b1711e33cee453e",
            "d1a50910393833ac",
            "04b2d98eead24143",
            "bb1e299a256f3fcf",
            "5b6e80b0828486ec",
            "3d2ddedcc3b6d63a",
            "a442f53b1995c885",
            "6d23d1d1d602254a",
            "54bad4e05bbc85fc",
            "6788cb3e4c9d68ab",
            "e7af82c93b0ca81b",
            "50ddb8c38f08eaa1",
            "73bccc412795afe1",
            "bdf8c4a7ad017a04",
            "3f18e05e6ce64319",
            "343e259ca568ea64",
            "f2b37e5a0635c59f",
            "e63d65ae3fa27eae",
            "5097a018b046bad7",
            "b4281e9497fb3f9e",
            "3de46f3ccb85cf58",
            "1290832004e6eb68",
            "165f996d54289c7c",
            "012f94cfd059ce0a",
            "d482b5adbee2a197"
        ],
        "x": 375,
        "y": 1360,
        "wires": []
    },
    {
        "id": "a442f53b1995c885",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 695,
        "y": 1520,
        "wires": [
            [
                "1e3e1b9aa45e4d2b"
            ]
        ]
    },
    {
        "id": "0e7a14306161410d",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 325,
        "y": 540,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "2474bf8bcb7a7190",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 695,
        "y": 1660,
        "wires": [
            [
                "399c3bdd81867ec3"
            ]
        ]
    },
    {
        "id": "8b1711e33cee453e",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 695,
        "y": 1780,
        "wires": [
            [
                "bdd878d703918a64"
            ]
        ]
    },
    {
        "id": "9f13f79df9b1b051",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 175,
        "y": 2080,
        "wires": [
            [
                "5cefbef2e547a4e6"
            ]
        ]
    },
    {
        "id": "93d0a81ec043af40",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 175,
        "y": 2280,
        "wires": [
            [
                "c02d716586513d0c"
            ]
        ]
    },
    {
        "id": "7d5990b147b2e862",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 565,
        "y": 2080,
        "wires": [
            [
                "3a2daf9f6513bedd"
            ]
        ]
    },
    {
        "id": "2a95e320db5dab7e",
        "type": "mqtt out",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 410,
        "y": 340,
        "wires": []
    },
    {
        "id": "1e3e1b9aa45e4d2b",
        "type": "mqtt in",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 790,
        "y": 1560,
        "wires": [
            [
                "77ef40ac87c2c3ea",
                "17bd724713632bdf"
            ]
        ]
    },
    {
        "id": "d5f9f8ae2f22966d",
        "type": "link out",
        "z": "b74f4a1fb6e12656",
        "name": "TOPIC TRIG",
        "mode": "link",
        "links": [
            "5db247b62d9da6b0",
            "83c47848d7a647c7",
            "feb9bed34b822231",
            "23c3b4e2abf93c5b"
        ],
        "x": 215,
        "y": 1440,
        "wires": []
    },
    {
        "id": "feb9bed34b822231",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "TOPIC 1 TRIG",
        "links": [
            "d5f9f8ae2f22966d"
        ],
        "x": 75,
        "y": 1560,
        "wires": [
            [
                "08d3d135e36e6414"
            ]
        ]
    },
    {
        "id": "83c47848d7a647c7",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "TOPIC 2 TRIG",
        "links": [
            "d5f9f8ae2f22966d"
        ],
        "x": 75,
        "y": 1680,
        "wires": [
            [
                "9bb875dc31e86133"
            ]
        ]
    },
    {
        "id": "5db247b62d9da6b0",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "TOPIC 3 TRIG",
        "links": [
            "d5f9f8ae2f22966d"
        ],
        "x": 65,
        "y": 1800,
        "wires": [
            [
                "85c08a2573888738"
            ]
        ]
    },
    {
        "id": "ea55fad7afd8ca4a",
        "type": "mqtt out",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 640,
        "y": 2260,
        "wires": []
    },
    {
        "id": "761bfab071de6ed6",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "send events mqtt (link_in)",
        "links": [
            "556386385558415e"
        ],
        "x": 545,
        "y": 2220,
        "wires": [
            [
                "ea55fad7afd8ca4a",
                "43243058cd33c75b"
            ]
        ]
    },
    {
        "id": "13daa302c8d81c7c",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "HEARBEAT",
        "info": "",
        "x": 650,
        "y": 2180,
        "wires": []
    },
    {
        "id": "a0199bb39a49c983",
        "type": "link in",
        "z": "b74f4a1fb6e12656",
        "name": "in broker setting",
        "links": [
            "937cce842b747007",
            "f33f3e465e2a21a6"
        ],
        "x": 545,
        "y": 2260,
        "wires": [
            [
                "ea55fad7afd8ca4a"
            ]
        ]
    },
    {
        "id": "c539f8e36edcbefc",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "MOCK SAFE TO DROP",
        "info": "",
        "x": 650,
        "y": 2040,
        "wires": []
    },
    {
        "id": "43243058cd33c75b",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 2220,
        "wires": []
    },
    {
        "id": "97688f153c09404d",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "subscribe receive.requests",
        "info": "",
        "x": 230,
        "y": 1520,
        "wires": []
    },
    {
        "id": "a5ae08c0411ac129",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "subscribe safe to drop req",
        "info": "",
        "x": 230,
        "y": 1640,
        "wires": []
    },
    {
        "id": "aa253d32261943ba",
        "type": "comment",
        "z": "b74f4a1fb6e12656",
        "name": "subscribe send event",
        "info": "",
        "x": 220,
        "y": 1760,
        "wires": []
    },
    {
        "id": "c6cca3757f81b709",
        "type": "link out",
        "z": "b74f4a1fb6e12656",
        "name": "bottom layer rcv req push",
        "mode": "link",
        "links": [
            "3a925d089cbc0d86"
        ],
        "x": 675,
        "y": 1440,
        "wires": []
    },
    {
        "id": "acd46ff04919afb8",
        "type": "json",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 590,
        "y": 1680,
        "wires": [
            [
                "399c3bdd81867ec3"
            ]
        ]
    },
    {
        "id": "903a9a5597df95ab",
        "type": "link out",
        "z": "b74f4a1fb6e12656",
        "name": "CONT DROPPED rcv req push",
        "mode": "link",
        "links": [
            "153e682c603c0911",
            "86eab3663700ae23",
            "557421cc4e8ba9b9",
            "c028d6431e8b20fc",
            "8facfcfa915727a3",
            "ceb5391ebe822d88",
            "ce2de6b63aacaf5d",
            "995f0885476fa087",
            "c91e8a65d35be463",
            "5776052d66120dab",
            "9537801bf6bafe40",
            "a36137aee6e246d1",
            "4e07d7f09ca10cf1",
            "792ed60d3371d220",
            "b64d36d7cba99b16",
            "f8eb3617b504eb69",
            "378572b62a4cb8a5",
            "fa97867af4c7d3bf",
            "0d732e12b4c87362",
            "792cfde55074fa9d",
            "c86080ef8087c1bf",
            "77a9f6193cf6bb5a",
            "1cc9b803720fdbe1",
            "6ef35da7878f5d6c"
        ],
        "x": 675,
        "y": 1480,
        "wires": []
    },
    {
        "id": "c4089819ee4cdc33",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "cont release BOTTOM LAYER",
        "props": [
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"4a1f6bef-c6ac-4345-a56a-9ca31b861f70\",\"timestamp\":\"1708418619485\",\"conveyor_id\":\"4\",\"step_id\":\"31\",\"msg_type\":\"container_released\",\"container_id\":\"HAGER2023036793\",\"destination_ids\":[{\"conveyor_id\":\"4\",\"step_id\":\"30\"}],\"data\":{\"originating_service\":\"gmc\"}}",
        "payloadType": "json",
        "x": 160,
        "y": 680,
        "wires": [
            [
                "7094b8907d993af2"
            ]
        ]
    },
    {
        "id": "c483ce0684f3b470",
        "type": "s7 in",
        "z": "b74f4a1fb6e12656",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STEP1_SENSOR",
        "diff": false,
        "name": "",
        "x": 190,
        "y": 2600,
        "wires": [
            [
                "5e4f05c6f0326594"
            ]
        ]
    },
    {
        "id": "5e4f05c6f0326594",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "\n\n    global.set(\"conveyor.c1_step1_sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "17bd724713632bdf",
        "type": "link out",
        "z": "b74f4a1fb6e12656",
        "name": "MQTT link out receive request",
        "mode": "link",
        "links": [
            "06b3a721a1bbbdf2",
            "206322f31aadb4c3"
        ],
        "x": 895,
        "y": 1620,
        "wires": []
    },
    {
        "id": "cb5d0cda4c9ef3ce",
        "type": "inject",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "str",
        "x": 410,
        "y": 800,
        "wires": [
            [
                "ced706b2446e79ac"
            ]
        ]
    },
    {
        "id": "ced706b2446e79ac",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "global.set(\"pick1.step_id\",\"21\")\nglobal.set(\"pick2.step_id\",\"22\")\nglobal.set(\"pick3.step_id\",\"23\")\nglobal.set(\"pick4.step_id\",\"24\")\nglobal.set(\"exit_ready.step_id\",\"26\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "46a31b4d24ac8853",
        "type": "mqtt in",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "topic": "samsatl.conveyor-heartbeat.events",
        "qos": "1",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 900,
        "y": 2200,
        "wires": [
            [
                "5b29b16392a79ee5"
            ]
        ]
    },
    {
        "id": "5b29b16392a79ee5",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 2160,
        "wires": []
    },
    {
        "id": "a00aad890e4ad4fa",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.data.conveyors[0].conveyor_id == a)\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "689df8f4a4e34009",
        "type": "debug",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 2120,
        "wires": []
    },
    {
        "id": "7ab02c9a8a19eb50",
        "type": "function",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "ae15024d7ea05b29",
        "type": "json",
        "z": "b74f4a1fb6e12656",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1290,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "567d06c1f92e6d5f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "task_id",
        "func": "if (msg.payload.msg_type=='container_lifted')\n{\n\nmsg.payload=msg.payload.task_id;\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 4080,
        "wires": [
            []
        ]
    },
    {
        "id": "342101b9eff218b4",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "lifted_bit_set",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar b = global.get(\"exit_step.sensor\")\n\n\nif (msg.payload.msg_type=='container_lifted' && msg.payload.conveyor_id==a)\n{\n    \n global.set(\"c12.task_id\",msg.payload.task_id) \n global.set(\"c12.container_id\",msg.payload.container_id)\n global.set(\"c12.data\",msg.payload.data)\n    \n    \nmsg.payload=true\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 4020,
        "wires": [
            [
                "c9e810a4e3ac067c"
            ]
        ]
    },
    {
        "id": "7530408fada03f5c",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "container_id",
        "func": "if (msg.payload.msg_type=='container_lifted')\n{\n\nmsg.payload=msg.payload.container_id;\nreturn msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 4120,
        "wires": [
            []
        ]
    },
    {
        "id": "4474d9ce55afef79",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "dest_id",
        "func": "\nif (msg.payload.msg_type=='container_lifted')\n{\n\nmsg.payload=msg.payload.destination_ids;\nreturn msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 4200,
        "wires": [
            [
                "11177e1acf813230"
            ]
        ]
    },
    {
        "id": "d0b87d79b6363215",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "DATA",
        "func": "if (msg.payload.msg_type=='container_lifted')\n \n{\n\nmsg.payload=msg.payload.data;\nreturn msg;\n}\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 4300,
        "wires": [
            [
                "ee3e39df57505543"
            ]
        ]
    },
    {
        "id": "d0debfcb495d9119",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "lifted ack",
        "func": "var a= global.get(\"conveyor_id_hmi\")\n\n\n\nif (msg.payload.msg_type=='container_lifted' && msg.payload.conveyor_id==a)\n{\n\nvar container_lifted_ack = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\ncontainer_lifted_ack.task_id = msg.payload.task_id; //global.get(\"c16.task_id\")\ncontainer_lifted_ack.timestamp = JSON.stringify(time)\ncontainer_lifted_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncontainer_lifted_ack.step_id = global.get(\"exit_ready.step_id\") //PLC Valye, although fixed\ncontainer_lifted_ack.msg_type = \"container_lifted_ack\" //Fix Value\ncontainer_lifted_ack.container_id = msg.payload.container_id; //global.get(\"c16.container_id\") //PLC Value\n\nvar data1 = global.get(\"c16.data\")\n\ncontainer_lifted_ack.data = msg.payload.data; //JSON.parse(data1) //PLC Value or safe to drop Value\n\nif ( global.get(\"exit_step.sensor\")==false)     \n{\ncontainer_lifted_ack.status = \"success\" //PLC Value\ncontainer_lifted_ack.errorCode = \"\" //PLC Value\ncontainer_lifted_ack.errorMessage = \"\" //PLC Value\n//container_lifted_ack.available = \"False\" //PLC Value\n}\nelse\n{\ncontainer_lifted_ack.status = \"failed\" //PLC Value\ncontainer_lifted_ack.errorCode = \"ERR001\" //PLC Value\ncontainer_lifted_ack.errorMessage = \"TOTE Present\" //PLC Value\n//container_lifted_ack.available = \"True\" //PLC Value  \n}\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_lifted_ack\nreturn msg;\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 3980,
        "wires": [
            [
                "774996c46b4b78ed"
            ]
        ]
    },
    {
        "id": "c51ab734a5bddd0d",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "timestamp",
        "func": "if (msg.payload.msg_type=='container_lifted')\n{\n\nmsg.payload=msg.payload.timestamp;\nglobal.set(\"Rcvd_timestamp\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 4160,
        "wires": [
            []
        ]
    },
    {
        "id": "5d1d2d1cc578aa0a",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "step_id",
        "func": "if (msg.payload.msg_type=='container_lifted')\n{\n\nmsg.payload=msg.payload.step_id;\nglobal.set(\"Rcvd_step_id\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 4260,
        "wires": [
            []
        ]
    },
    {
        "id": "11177e1acf813230",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "dataList=msg.payload;\nvar conveyor_id_list=[];\nfor (var i in dataList)\n{\n   conveyor_id_list.push(dataList[i].conveyor_id);\n   \n}\n\nmsg.payload=conveyor_id_list.toString();\n\n//console.log(conveyor_id_list);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 4200,
        "wires": [
            []
        ]
    },
    {
        "id": "ca654596b87c6b19",
        "type": "comment",
        "z": "618178b2a7cb292b",
        "name": "container lifted",
        "info": "",
        "x": 760,
        "y": 3940,
        "wires": []
    },
    {
        "id": "ee3e39df57505543",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 890,
        "y": 4300,
        "wires": [
            [
                "92297ef86f0b41d3"
            ]
        ]
    },
    {
        "id": "92297ef86f0b41d3",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = msg.payload.substring(0,210)\nmsg.payload =a ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "08344a8533f589a1",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "Lifted Bit",
        "name": "lift bit set",
        "x": 1400,
        "y": 4020,
        "wires": []
    },
    {
        "id": "a1f7881e5c86c56d",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_lifted' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"exit_ready.step_id\"))\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 4020,
        "wires": [
            [
                "342101b9eff218b4"
            ]
        ]
    },
    {
        "id": "c9e810a4e3ac067c",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1170,
        "y": 4020,
        "wires": [
            [
                "08344a8533f589a1"
            ]
        ]
    },
    {
        "id": "ee84551a364ae81d",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 730,
        "y": 3980,
        "wires": [
            [
                "d0debfcb495d9119"
            ]
        ]
    },
    {
        "id": "774996c46b4b78ed",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1030,
        "y": 3980,
        "wires": [
            [
                "55b005fafecba1ed",
                "081c63aee98ed796"
            ]
        ]
    },
    {
        "id": "b25560a92138e7fc",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Exit Sensor",
        "diff": false,
        "name": "",
        "x": 930,
        "y": 4080,
        "wires": [
            [
                "c35546f601893ea4"
            ]
        ]
    },
    {
        "id": "c35546f601893ea4",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "global.set(\"exit_step.sensor\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 4080,
        "wires": [
            []
        ]
    },
    {
        "id": "051fc9687dd5efe4",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "stop message",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar data = {};\nif (msg.payload.msg_type=='conveyor_stop' && msg.payload.conveyor_id==a)\n{\nglobal.set(\"stop_msg_rcvd\",msg.payload);\nglobal.set(\"delete_tote_status\",1);\n\ndata.payload = true\nreturn data;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 4680,
        "wires": [
            [
                "de5bebf9fd7491be",
                "7ae489dcd1fc6101"
            ]
        ]
    },
    {
        "id": "de5bebf9fd7491be",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "STOP BIT",
        "name": "",
        "x": 900,
        "y": 4640,
        "wires": []
    },
    {
        "id": "c931b91e620b6151",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "RESUME message",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar data = {};\nif (msg.payload.msg_type=='conveyor_resume' && msg.payload.conveyor_id==a)\n{\nglobal.set(\"resume_msg_rcvd\",msg.payload);\n\ndata.payload = true\nreturn data;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 4800,
        "wires": [
            [
                "27216c1075da7ade",
                "fcd6067d68355d7e"
            ]
        ]
    },
    {
        "id": "27216c1075da7ade",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "RESUME BIT",
        "name": "",
        "x": 940,
        "y": 4800,
        "wires": []
    },
    {
        "id": "491de1ff4135363b",
        "type": "comment",
        "z": "618178b2a7cb292b",
        "name": "stop / resume messages",
        "info": "",
        "x": 290,
        "y": 4480,
        "wires": []
    },
    {
        "id": "7ae489dcd1fc6101",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 900,
        "y": 4720,
        "wires": [
            [
                "90e1b9de18f22626"
            ]
        ]
    },
    {
        "id": "fcd6067d68355d7e",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 920,
        "y": 4860,
        "wires": [
            [
                "fe634c6ca3536c6b"
            ]
        ]
    },
    {
        "id": "90e1b9de18f22626",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var stopped_data = {};\n\nvar b = global.get(\"stop_msg_rcvd\");\n\n\n\nvar d = new Date()\nvar time = d.getTime()\nvar time_string = JSON.stringify(time);\n\n\nif (msg.payload == true)\n{\nstopped_data.task_id = b.task_id;\nstopped_data.timestamp = time_string;\n\nif (global.get(\"cycle_run\")==false)\n{\n\nstopped_data.status = 'success'\nstopped_data.errorCode = ''\nstopped_data.errorMessage ='' \n}\n\nif (global.get(\"cycle_run\")==true)\n{\n\nstopped_data.status = 'failed'\nstopped_data.errorCode = 'ERROR001'\nstopped_data.errorMessage ='release_on / reach on' \n}\n\nstopped_data.conveyor_id =global.get(\"conveyor_id_hmi\")\nstopped_data.msg_type = 'conveyor_stopped'\nstopped_data.data = b.data\n\nmsg.topic = global.get(\"send_event_topic\");\nmsg.payload = stopped_data;\nreturn msg;\n}\n\n//global.set(\"stop_msg_rcvd\",msg.payload);\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"status\"\":\"\"success/failed\"\",\n//   \"\"errorCode\"\":\"\"ER001\"\",\n//   \"\"errorMessage\"\":\"\"errorreason\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"msg_type\"\":\"\"conveyor_stopped\"\",\n//   \"\"data\"\":{ \"\"originating_service\"\":\"\"GMC\"\"   }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 4720,
        "wires": [
            [
                "34104fae2208f159",
                "4507d490efd9afde"
            ]
        ]
    },
    {
        "id": "46b918f29cf1828a",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "CYCLE RUN",
        "diff": false,
        "name": "",
        "x": 250,
        "y": 4540,
        "wires": [
            [
                "f0e3d9eb7f352f60"
            ]
        ]
    },
    {
        "id": "f0e3d9eb7f352f60",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "global.set(\"cycle_run\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4540,
        "wires": [
            []
        ]
    },
    {
        "id": "fe634c6ca3536c6b",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var resume_data = {};\n\nvar b = global.get(\"resume_msg_rcvd\");\n\n\n\nvar d = new Date()\nvar time = d.getTime()\nvar time_string = JSON.stringify(time);\n\n\nif (msg.payload == true)\n{\nresume_data.task_id = b.task_id;\nresume_data.timestamp = time_string;\n\nif (global.get(\"cycle_run\")==true)\n{\n\nresume_data.status = 'success'\nresume_data.errorCode = ''\nresume_data.errorMessage ='' \n}\n\nif (global.get(\"cycle_run\")==false)\n{\n\nresume_data.status = 'failed'\nresume_data.errorCode = 'ERROR001'\nresume_data.errorMessage ='release_on / reach on' \n}\n\nresume_data.conveyor_id =global.get(\"conveyor_id_hmi\")\nresume_data.msg_type = 'conveyor_resumed'\nresume_data.data = b.data\n\nmsg.topic = global.get(\"send_event_topic\");\nmsg.payload = resume_data;\nreturn msg;\n}\n\n//global.set(\"stop_msg_rcvd\",msg.payload);\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"status\"\":\"\"success/failed\"\",\n//   \"\"errorCode\"\":\"\"ER001\"\",\n//   \"\"errorMessage\"\":\"\"errorreason\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"msg_type\"\":\"\"conveyor_resume\"\",\n//   \"\"data\"\":{ \"\"originating_service\"\":\"\"GMC\"\"   }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 4860,
        "wires": [
            [
                "34104fae2208f159",
                "4507d490efd9afde"
            ]
        ]
    },
    {
        "id": "34104fae2208f159",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 4720,
        "wires": []
    },
    {
        "id": "d29d991266f91743",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "mock stop conv 23",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task001\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"13\",\"msg_type\":\"conveyor_stop\",\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 430,
        "y": 4680,
        "wires": [
            [
                "051fc9687dd5efe4"
            ]
        ]
    },
    {
        "id": "b363a63b9a3538e8",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "mock resume connv 23",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task001\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"13\",\"msg_type\":\"conveyor_resume\",\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 440,
        "y": 4820,
        "wires": [
            [
                "c931b91e620b6151"
            ]
        ]
    },
    {
        "id": "bb982ae402edfca4",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Stop_PB_init",
        "diff": true,
        "name": "",
        "x": 250,
        "y": 4740,
        "wires": [
            [
                "aa428e56896378d9"
            ]
        ]
    },
    {
        "id": "aa428e56896378d9",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var d = new Date()\nvar time = d.getTime()\nvar time_string = JSON.stringify(time);\n\n\nif (msg.payload == true) \n{\n    msg.payload = {}\nmsg.payload.data ={};\n\n//msg.payload.task_id ='';\nmsg.payload.timestamp = time_string;\nmsg.payload.conveyor_id = global.get(\"conveyor_id_hmi\")\nmsg.payload.msg_type = 'conveyor_stop';\n\nmsg.payload.data.originating_service = 'conveyor';\n\n\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 4740,
        "wires": [
            [
                "051fc9687dd5efe4"
            ]
        ]
    },
    {
        "id": "fdd4c1e896b61ae7",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Start_PB_init",
        "diff": true,
        "name": "",
        "x": 250,
        "y": 4860,
        "wires": [
            [
                "2f32c3af2dc9f169"
            ]
        ]
    },
    {
        "id": "2f32c3af2dc9f169",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "\n\n\n\nvar d = new Date()\nvar time = d.getTime()\nvar time_string = JSON.stringify(time);\n\n\nif (msg.payload == true) \n{\nmsg.payload = {}\nmsg.payload.data ={};\n\n//msg.payload.task_id ='';\nmsg.payload.timestamp = time_string;\nmsg.payload.conveyor_id = global.get(\"conveyor_id_hmi\")\nmsg.payload.msg_type = 'conveyor_resume';\n\nmsg.payload.data.originating_service = 'conveyor';\n\n\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 4860,
        "wires": [
            [
                "c931b91e620b6151"
            ]
        ]
    },
    {
        "id": "d6fe70844ce55aa6",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 250,
        "y": 4800,
        "wires": [
            [
                "aa428e56896378d9"
            ]
        ]
    },
    {
        "id": "02dda8a3b46343bc",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 250,
        "y": 4940,
        "wires": [
            [
                "2f32c3af2dc9f169"
            ]
        ]
    },
    {
        "id": "4507d490efd9afde",
        "type": "mqtt out",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1290,
        "y": 4860,
        "wires": []
    },
    {
        "id": "012f94cfd059ce0a",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting for stop / resume msg",
        "links": [
            "937cce842b747007"
        ],
        "x": 1175,
        "y": 4920,
        "wires": [
            [
                "4507d490efd9afde"
            ]
        ]
    },
    {
        "id": "3212f32950243ffe",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 490,
        "y": 4000,
        "wires": [
            [
                "ee84551a364ae81d",
                "a1f7881e5c86c56d",
                "567d06c1f92e6d5f",
                "7530408fada03f5c",
                "c51ab734a5bddd0d",
                "4474d9ce55afef79",
                "5d1d2d1cc578aa0a",
                "d0b87d79b6363215"
            ]
        ]
    },
    {
        "id": "1cc9b803720fdbe1",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 255,
        "y": 4060,
        "wires": [
            [
                "f95efc5db7c6d1d0"
            ]
        ]
    },
    {
        "id": "f95efc5db7c6d1d0",
        "type": "mqtt in",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 370,
        "y": 4000,
        "wires": [
            [
                "3212f32950243ffe"
            ]
        ]
    },
    {
        "id": "1290832004e6eb68",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "937cce842b747007"
        ],
        "x": 255,
        "y": 4000,
        "wires": [
            [
                "f95efc5db7c6d1d0"
            ]
        ]
    },
    {
        "id": "0ee5b31c68c532aa",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 450,
        "y": 4620,
        "wires": [
            [
                "051fc9687dd5efe4",
                "c931b91e620b6151"
            ]
        ]
    },
    {
        "id": "6ef35da7878f5d6c",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 205,
        "y": 4680,
        "wires": [
            [
                "8f0a6973342c6035"
            ]
        ]
    },
    {
        "id": "8f0a6973342c6035",
        "type": "mqtt in",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 330,
        "y": 4620,
        "wires": [
            [
                "0ee5b31c68c532aa"
            ]
        ]
    },
    {
        "id": "165f996d54289c7c",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "937cce842b747007"
        ],
        "x": 205,
        "y": 4620,
        "wires": [
            [
                "8f0a6973342c6035"
            ]
        ]
    },
    {
        "id": "55b005fafecba1ed",
        "type": "mqtt out",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1570,
        "y": 3980,
        "wires": []
    },
    {
        "id": "3de46f3ccb85cf58",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 1435,
        "y": 3960,
        "wires": [
            [
                "55b005fafecba1ed"
            ]
        ]
    },
    {
        "id": "081c63aee98ed796",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 3960,
        "wires": []
    },
    {
        "id": "440ad8db1d85a002",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "task_id",
        "func": "\nvar a = global.get(\"conveyor_id_hmi\")\n\nvar b = global.get(\"conveyor.c1_step1_sensor\")\n\nif (msg.payload.msg_type=='container_dropped_ack' && msg.payload.conveyor_id==a )\n{\nmsg.payload=msg.payload.task_id;\nglobal.set(\"dropped_c1.task_id\",msg.payload)\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 420,
        "wires": [
            [
                "56240740cf0503a1"
            ]
        ]
    },
    {
        "id": "051020f584b7013b",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "conveyor_drop_ack",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar cont_drop_ack = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload.msg_type=='container_dropped' && msg.payload.conveyor_id==a)\n{\n\n\ncont_drop_ack.task_id = msg.payload.task_id\ncont_drop_ack.timestamp = JSON.stringify(time)\ncont_drop_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncont_drop_ack.step_id = \"1\" //PLC Valye, although fixed\ncont_drop_ack.msg_type = \"container_dropped_ack\" //Fix Value\ncont_drop_ack.container_id = msg.payload.container_id;//global.get(\"c1.container_id\") //PLC Value\ncont_drop_ack.data = msg.payload.data //PLC Value or safe to drop Value\ncont_drop_ack.destination_ids = msg.payload.destination_ids;\n\nif (global.get(\"conveyor.c1_step1_sensor\")==true ) //&& global.get(\"c1.container_id\")!=\"\" )     \n{\ncont_drop_ack.status = \"success\" //PLC Value\ncont_drop_ack.errorCode = \"\" //PLC Value\ncont_drop_ack.errorMessage = \"\" //PLC Value\n//cont_drop_ack.available = \"False\" //PLC Value\n}\nelse\n{\ncont_drop_ack.status = \"failed\" //PLC Value\ncont_drop_ack.errorCode = \"ERR001\" //PLC Value\ncont_drop_ack.errorMessage = \"NO TOTE Present\" //PLC Value\n//cont_drop_ack.available = \"True\" //PLC Value  \n}\n\nglobal.set(\"dropped_c1\",cont_drop_ack);\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=cont_drop_ack\nreturn msg;\n}\n\n////// CONBVEYOR ID NOT MATCHING ERROR\nif (msg.payload.msg_type=='container_dropped' && msg.payload.conveyor_id !=a)\n{\n\ncont_drop_ack.task_id = msg.payload.task_id\ncont_drop_ack.timestamp = JSON.stringify(time)\ncont_drop_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncont_drop_ack.step_id = \"1\" //PLC Valye, although fixed\ncont_drop_ack.msg_type = \"container_dropped_ack\" //Fix Value\ncont_drop_ack.container_id = global.get(\"c1.container_id\") //PLC Value\ncont_drop_ack.data = msg.payload.data //PLC Value or safe to drop Value\ncont_drop_ack.destination_id = msg.payload.destination_ids;\n\ncont_drop_ack.status = \"failed\" //PLC Value\ncont_drop_ack.errorCode = \"ERR002\" //PLC Value\ncont_drop_ack.errorMessage = \"WRONG CONVEYOR ID IN PAYLOAD\" //PLC Value\n//cont_drop_ack.available = \"True\" //PLC Value  \n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=cont_drop_ack\nglobal.set(\"dropped_c1\",cont_drop_ack);\nreturn msg;\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 720,
        "wires": [
            [
                "97d454cfe1d9862a",
                "039ace25dfb9cecf"
            ]
        ]
    },
    {
        "id": "fc814fd17100d51f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "container_id",
        "func": "\nvar a = global.get(\"conveyor_id_hmi\")\n\nvar b = global.get(\"conveyor.c1_step1_sensor\")\n\n\nif (msg.payload.msg_type=='container_dropped_ack' && msg.payload.conveyor_id==a )\n{\nmsg.payload=msg.payload.container_id;\nglobal.set(\"dropped_c1.container_id\",msg.payload)\nreturn msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 460,
        "wires": [
            [
                "d7c4e589add191e5"
            ]
        ]
    },
    {
        "id": "bb0eddbac8e5112b",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "dest_id",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\n\nvar b = global.get(\"conveyor.c1_step1_sensor\")\n\nif (msg.payload.msg_type=='container_dropped_ack' && msg.payload.conveyor_id== a)\n{\nmsg.payload=msg.payload.destination_ids;\nglobal.set(\"dropped_c1.destination_id\",msg.payload)\nreturn msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 540,
        "wires": [
            [
                "6cea177ebbf0e1a4"
            ]
        ]
    },
    {
        "id": "4656d6aa7a4cd30e",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "DATA",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\n\nvar b = global.get(\"conveyor.c1_step1_sensor\")\n\n\nif (msg.payload.msg_type=='container_dropped_ack' && msg.payload.conveyor_id==a)\n{\nmsg.payload=msg.payload.data;\nglobal.set(\"dropped_c1.data\",msg.payload)\nreturn msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 500,
        "wires": [
            [
                "04f80137e9353ddd"
            ]
        ]
    },
    {
        "id": "04f80137e9353ddd",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1190,
        "y": 500,
        "wires": [
            [
                "d3decd89e8f9e014"
            ]
        ]
    },
    {
        "id": "560466f810fe2ff7",
        "type": "comment",
        "z": "618178b2a7cb292b",
        "name": "container release",
        "info": "",
        "x": 820,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d3decd89e8f9e014",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = msg.payload.substring(0,210)\nmsg.payload =a ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 500,
        "wires": [
            [
                "7ec047eacc4bac24"
            ]
        ]
    },
    {
        "id": "5195b347075b26c8",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1910,
        "y": 240,
        "wires": [
            [
                "436fb9b27e318bc0"
            ]
        ]
    },
    {
        "id": "3b0c984fae79cb6a",
        "type": "comment",
        "z": "618178b2a7cb292b",
        "name": "safe to drop",
        "info": "",
        "x": 1640,
        "y": 200,
        "wires": []
    },
    {
        "id": "65b5d5b901bb54a3",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "safe to drop request link in",
        "links": [
            "5245c4d192cdb717"
        ],
        "x": 1705,
        "y": 240,
        "wires": [
            [
                "5195b347075b26c8"
            ]
        ]
    },
    {
        "id": "436fb9b27e318bc0",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "safe to drop resp",
        "func": "var conv_id = msg.payload.conveyor_id\n\nvar data = {}\ndata = msg.payload.data\n\n//var task_id = msg.payload.task_id\n//var data = msg.payload.data\n\nmsg.topic=global.get(\"safe_to_drop_event_topic\")\n\nvar b=global.get(\"conveyor_id_hmi\")\n\nvar safe_to_drop_resp = {}\n//global.set(\"data\",\"where_is_the_data\")\n//a.message = global.get(\"data\");\n\n\nvar d = new Date()\nvar time = d.getTime()\n\n\n// conveyor 1\n\nif (conv_id==b)\n{\n\nsafe_to_drop_resp.task_id = msg.payload.task_id\nsafe_to_drop_resp.timestamp = JSON.stringify(time)\nsafe_to_drop_resp.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\nsafe_to_drop_resp.step_id = \"1\" //PLC Valye, although fixed\nsafe_to_drop_resp.msg_type = \"safe_to_drop_resp\" //Fix Value\nsafe_to_drop_resp.container_id = global.get(\"c1.container_id\") //PLC Value\nsafe_to_drop_resp.data = data //PLC Value or safe to drop Value\n\n\n\nif (global.get(\"conveyor.c1_step1_sensor\")==true )//|| global.get(\"c1.container_id\")!=\"\" )     \n{\nsafe_to_drop_resp.status = \"failed\" //PLC Value\nsafe_to_drop_resp.errorCode = \"100\" //PLC Value\nsafe_to_drop_resp.errorMessage = \"No Space\" //PLC Value\nsafe_to_drop_resp.available = \"False\" //PLC Value\n}\n\nelse if (global.get(\"cycle_run\")==false )\n\n{\nsafe_to_drop_resp.status = \"failed\" //PLC Value\nsafe_to_drop_resp.errorCode = \"101\" //PLC Value\nsafe_to_drop_resp.errorMessage = \"Conveyor Stop Mode\" //PLC Value\nsafe_to_drop_resp.available = \"False\" //PLC Value \n}\nelse\n{\nsafe_to_drop_resp.status = \"success\" //PLC Value\nsafe_to_drop_resp.errorCode = \"\" //PLC Value\nsafe_to_drop_resp.errorMessage = \"\" //PLC Value\nsafe_to_drop_resp.available = \"True\" //PLC Value  \n}\nmsg.topic=global.get(\"safe_to_drop_event_topic\")\nmsg.payload=safe_to_drop_resp\nreturn msg\n}\n\n\n\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 240,
        "wires": [
            [
                "eedf0bd3be81e455",
                "6858529114e4f64a"
            ]
        ]
    },
    {
        "id": "eedf0bd3be81e455",
        "type": "link out",
        "z": "618178b2a7cb292b",
        "name": "safe to drop resp",
        "mode": "link",
        "links": [
            "50fdf5020bdf53d8",
            "48f3cb1938d1f471"
        ],
        "x": 2275,
        "y": 300,
        "wires": []
    },
    {
        "id": "6858529114e4f64a",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2290,
        "y": 240,
        "wires": []
    },
    {
        "id": "e05767a55152f5be",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 690,
        "y": 720,
        "wires": [
            [
                "051020f584b7013b"
            ]
        ]
    },
    {
        "id": "d3d0062fc98ce34a",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = [];\n\na = msg.payload;\n\n\nvar b = a[0].conveyor_id;\n\nvar c = a[0].step_id;\n\n\n\nvar d =global.get(\"exit_ready.step_id\")\n\nif (c==d ) \n{\n    msg.payload = \"out\" + b;\n    return msg;\n}\nelse\n{\n  msg.payload = \"in\" + b;  \n  return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 540,
        "wires": [
            [
                "ab0511c353dc1224",
                "762e174abaaefec4"
            ]
        ]
    },
    {
        "id": "73bccc412795afe1",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting for drop ack",
        "links": [
            "937cce842b747007"
        ],
        "x": 1015,
        "y": 660,
        "wires": [
            [
                "97d454cfe1d9862a"
            ]
        ]
    },
    {
        "id": "97d454cfe1d9862a",
        "type": "mqtt out",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1090,
        "y": 720,
        "wires": []
    },
    {
        "id": "ab0511c353dc1224",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 620,
        "wires": []
    },
    {
        "id": "6cea177ebbf0e1a4",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1150,
        "y": 540,
        "wires": [
            [
                "d3d0062fc98ce34a"
            ]
        ]
    },
    {
        "id": "844bdbd8ada754cd",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 750,
        "y": 340,
        "wires": [
            [
                "e05767a55152f5be"
            ]
        ]
    },
    {
        "id": "0d732e12b4c87362",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 515,
        "y": 400,
        "wires": [
            [
                "affc57ad9fdf707c"
            ]
        ]
    },
    {
        "id": "affc57ad9fdf707c",
        "type": "mqtt in",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "844bdbd8ada754cd"
            ]
        ]
    },
    {
        "id": "6788cb3e4c9d68ab",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "937cce842b747007"
        ],
        "x": 515,
        "y": 340,
        "wires": [
            [
                "affc57ad9fdf707c"
            ]
        ]
    },
    {
        "id": "dbd01352a219a8c7",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2270,
        "y": 440,
        "wires": []
    },
    {
        "id": "8d4cde9ebc3f99f1",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "global.set(\"step1_retry_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a62885e5b60ef4f9",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Retry Dropped",
        "diff": true,
        "name": "",
        "x": 820,
        "y": 220,
        "wires": [
            [
                "21e4ea3be75d927d",
                "ad18e994f86f46fc",
                "bf12bfc0648ac7ae",
                "3c88693306e61d88",
                "8d4cde9ebc3f99f1"
            ]
        ]
    },
    {
        "id": "21e4ea3be75d927d",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push task id",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"dropped_c1.task_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 180,
        "wires": [
            [
                "56240740cf0503a1"
            ]
        ]
    },
    {
        "id": "ad18e994f86f46fc",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push cont id",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"dropped_c1.container_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 220,
        "wires": [
            [
                "d7c4e589add191e5"
            ]
        ]
    },
    {
        "id": "bf12bfc0648ac7ae",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push data",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"dropped_c1.data\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 300,
        "wires": [
            [
                "04f80137e9353ddd"
            ]
        ]
    },
    {
        "id": "3c88693306e61d88",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push dest",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"dropped_c1.destination_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 260,
        "wires": [
            [
                "d3d0062fc98ce34a"
            ]
        ]
    },
    {
        "id": "e917bab721dcb08f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "task_id for step9",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick1.step_id\")&& msg.payload.status=='success')\n{\n\nmsg.payload=msg.payload.task_id;\n \nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1460,
        "wires": [
            [
                "cd5c200d75163175"
            ]
        ]
    },
    {
        "id": "0eeabc2e9f3f01b4",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "release bit 9",
        "func": "var a  = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.step_id ==global.get(\"pick1.step_id\") && msg.payload.conveyor_id==a  && msg.payload.status=='success')\n{\nmsg.payload=true;\n//global.set(\"conveyor_id\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1640,
        "wires": [
            [
                "20b355af31d1c273"
            ]
        ]
    },
    {
        "id": "b1494f0f09254202",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "container_id release for step9",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick1.step_id\")  && msg.payload.status=='success')\n\n{\n\nmsg.payload=msg.payload.container_id;\n \nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1500,
        "wires": [
            [
                "cb45e8d57a8d6356"
            ]
        ]
    },
    {
        "id": "ea99721cec05c9fd",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "dest_id step9",
        "func": "\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.step_id ==global.get(\"pick1.step_id\")  && msg.payload.status=='success')\n\n{\n\nmsg.payload=msg.payload.destination_ids;\n\nreturn msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1580,
        "wires": [
            [
                "49ea3650adc86bbd"
            ]
        ]
    },
    {
        "id": "d9a3fd3774b7967f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "DATA release for step9",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick1.step_id\")  && msg.payload.status=='success')\n{\n\nmsg.payload=msg.payload.data;\n \nreturn msg;\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1540,
        "wires": [
            [
                "b8a20419ad0d027e"
            ]
        ]
    },
    {
        "id": "b8a20419ad0d027e",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1790,
        "y": 1540,
        "wires": [
            [
                "6b11bd7e8bb2fbb0",
                "3c5f5db3b7aee814"
            ]
        ]
    },
    {
        "id": "6b11bd7e8bb2fbb0",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = msg.payload.substring(0,210)\nmsg.payload =a ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 1540,
        "wires": [
            [
                "96e51ad46e8a1f8f"
            ]
        ]
    },
    {
        "id": "4fde24619ea809cf",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "PICK1 RELEASE",
        "name": "",
        "x": 2570,
        "y": 1680,
        "wires": []
    },
    {
        "id": "3db6b06cbd852684",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "conveyor_release_ack",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\n// var step15_16_status = global.get(\"step15_step16_engage\");\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a && global.get(\"cycle_run\")== false )\n{\nvar d = new Date()\nvar time = d.getTime()\n\ncontainer_released_ack.task_id = msg.payload.task_id; //global.get(\"released_c9.task_id\")\ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")\ncontainer_released_ack.step_id = msg.payload.step_id \ncontainer_released_ack.msg_type = \"container_released_ack\" \ncontainer_released_ack.container_id = msg.payload.container_id; //global.get(\"released_c9.container_id\") \nvar data1 = global.get(\"released_c9.data\")\ncontainer_released_ack.data = msg.payload.data; //global.get(\"released_c9.data\")//JSON.parse(data1) ? data1 : '{\"originating_service\":\"GMC\"}';\ncontainer_released_ack.destination_id = msg.payload.destination_ids;\n\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR004\" \ncontainer_released_ack.errorMessage = \"CONVEYOR IN STOP MODE\" \nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 1000,
        "wires": [
            [
                "1d7ddd97538edf8c",
                "4810f49863a4c336"
            ]
        ]
    },
    {
        "id": "4690842e017f92cc",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "release bit 10",
        "func": "var a  = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.step_id ==global.get(\"pick2.step_id\") && msg.payload.conveyor_id==a && msg.payload.status=='success')\n{\nmsg.payload=true;\n//global.set(\"conveyor_id\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 2080,
        "wires": [
            [
                "413a9f6f0d9613b8"
            ]
        ]
    },
    {
        "id": "f2b91fdefe0e9c14",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "release bit 12",
        "func": "var a  = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.step_id ==global.get(\"pick4.step_id\") && msg.payload.conveyor_id==a && msg.payload.status=='success')\n{\nmsg.payload=true;\n//global.set(\"conveyor_id\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 3660,
        "wires": [
            [
                "3a6c1ecd6ab7ca26"
            ]
        ]
    },
    {
        "id": "62ffc76c3e60151e",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "release bit 11",
        "func": "var a  = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.step_id ==global.get(\"pick3.step_id\") && msg.payload.conveyor_id==a && msg.payload.status=='success')\n{\nmsg.payload=true;\n//global.set(\"conveyor_id\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 3060,
        "wires": [
            [
                "47805acdac1863eb"
            ]
        ]
    },
    {
        "id": "e2bebc9a7a51ae65",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "PICK2 RELEASE",
        "name": "",
        "x": 2370,
        "y": 1980,
        "wires": []
    },
    {
        "id": "941dd48e1e3b9374",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "PICK3 RELEASE",
        "name": "",
        "x": 2010,
        "y": 3060,
        "wires": []
    },
    {
        "id": "a9ddedd5919883e1",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "PICK4 RELEASE",
        "name": "",
        "x": 2010,
        "y": 3660,
        "wires": []
    },
    {
        "id": "596cd986b7d8642d",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "task_id for step10",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick2.step_id\") && msg.payload.status=='success')\n{\n\nmsg.payload=msg.payload.task_id;\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 2140,
        "wires": [
            [
                "8f8c9ab4fdcff30f"
            ]
        ]
    },
    {
        "id": "22098cc352afa59b",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "container_id release for step10",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick2.step_id\") && msg.payload.status=='success')\n\n{\n\nmsg.payload=msg.payload.container_id;\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 2180,
        "wires": [
            [
                "0bd3356e1901cdd9"
            ]
        ]
    },
    {
        "id": "2ad3fccd69c18d9c",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "DATA release for step10",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick2.step_id\") && msg.payload.status=='success')\n{\n\nmsg.payload=msg.payload.data;\nreturn msg;\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2220,
        "wires": [
            [
                "a7985972a5d4839d"
            ]
        ]
    },
    {
        "id": "a7985972a5d4839d",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1830,
        "y": 2220,
        "wires": [
            [
                "05bf0b6bf521e8b0"
            ]
        ]
    },
    {
        "id": "05bf0b6bf521e8b0",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = msg.payload.substring(0,210)\nmsg.payload =a ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 2220,
        "wires": [
            [
                "d6f558f5f816a9af"
            ]
        ]
    },
    {
        "id": "cfe882f4fcedb37f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "task_id for step11",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick3.step_id\") && msg.payload.status=='success')\n{\n\nmsg.payload=msg.payload.task_id;\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2860,
        "wires": [
            [
                "6805f4283ac63656"
            ]
        ]
    },
    {
        "id": "446547e79938e83a",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "container_id release for step11",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick3.step_id\") && msg.payload.status=='success')\n\n{\n\nmsg.payload=msg.payload.container_id;\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 2900,
        "wires": [
            [
                "cd6818b7f3b8b7f2"
            ]
        ]
    },
    {
        "id": "c5e4cb1f73af7898",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "DATA release for step11",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick3.step_id\") && msg.payload.status=='success')\n{\n\nmsg.payload=msg.payload.data;\nreturn msg;\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 2940,
        "wires": [
            [
                "e29abe7741734d96"
            ]
        ]
    },
    {
        "id": "e29abe7741734d96",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1850,
        "y": 2940,
        "wires": [
            [
                "221de9d7d5610ba3"
            ]
        ]
    },
    {
        "id": "221de9d7d5610ba3",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = msg.payload.substring(0,210)\nmsg.payload =a ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 2940,
        "wires": [
            [
                "a01372244eac584f"
            ]
        ]
    },
    {
        "id": "254a700b0df66b56",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "task_id for step12",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick4.step_id\") && msg.payload.status=='success')\n{\n\nmsg.payload=msg.payload.task_id;\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 3500,
        "wires": [
            [
                "d800f86862a421b1"
            ]
        ]
    },
    {
        "id": "23cab60c6a982cfe",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "container_id release for step12",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick4.step_id\") && msg.payload.status=='success')\n\n{\n\nmsg.payload=msg.payload.container_id;\nreturn msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 3540,
        "wires": [
            [
                "c613dc045fc32a89"
            ]
        ]
    },
    {
        "id": "47d7ab9b33915bde",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "DATA release for step12",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.conveyor_id==a && msg.payload.step_id==global.get(\"pick4.step_id\") && msg.payload.status=='success')\n{\n\nmsg.payload=msg.payload.data;\nreturn msg;\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 3580,
        "wires": [
            [
                "5314072584e705f7"
            ]
        ]
    },
    {
        "id": "5314072584e705f7",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1870,
        "y": 3580,
        "wires": [
            [
                "3b478b8050d47293"
            ]
        ]
    },
    {
        "id": "3b478b8050d47293",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = msg.payload.substring(0,210)\nmsg.payload =a ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 3580,
        "wires": [
            [
                "328692c1ff9ab008"
            ]
        ]
    },
    {
        "id": "4810f49863a4c336",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1d7ddd97538edf8c",
        "type": "mqtt out",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1970,
        "y": 980,
        "wires": []
    },
    {
        "id": "3f18e05e6ce64319",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 1745,
        "y": 940,
        "wires": [
            [
                "1d7ddd97538edf8c"
            ]
        ]
    },
    {
        "id": "05d11a7ac1260248",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = [];\n\na = msg.payload;\n\n\nvar b = a[0].conveyor_id;\n\nvar c = a[0].step_id;\n\n\nvar d =global.get(\"exit_ready.step_id\")\n\nif (c==d ) \n{\n    msg.payload = \"out\" + b;\n    return msg;\n}\n\n\n\nelse\n{\n  msg.payload = \"in\" + b;  \n  return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 1580,
        "wires": [
            [
                "2d0dac6e9d8139ec",
                "c21b62d68b3ac42c"
            ]
        ]
    },
    {
        "id": "2d0dac6e9d8139ec",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1640,
        "wires": []
    },
    {
        "id": "49ea3650adc86bbd",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1730,
        "y": 1580,
        "wires": [
            [
                "05d11a7ac1260248"
            ]
        ]
    },
    {
        "id": "c511cd933a176d4f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "dest_id step10",
        "func": "\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.step_id ==global.get(\"pick2.step_id\") && msg.payload.status=='success')\n\n{\n\nmsg.payload=msg.payload.destination_ids;\nreturn msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 2260,
        "wires": [
            [
                "2de5e5403aa1f64a"
            ]
        ]
    },
    {
        "id": "305631d13407fc15",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = [];\n\na = msg.payload;\n\n\nvar b = a[0].conveyor_id;\n\nvar c = a[0].step_id;\n\nvar d =global.get(\"exit_ready.step_id\")\n\nif (c==d ) \n{\n    msg.payload = \"out\" + b;\n    return msg;\n}\n\n\n\nelse\n{\n  msg.payload = \"in\" + b;  \n  return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 2260,
        "wires": [
            [
                "14c9e83d6514ffc4",
                "93daf40fef6e2837"
            ]
        ]
    },
    {
        "id": "14c9e83d6514ffc4",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 2340,
        "wires": []
    },
    {
        "id": "2de5e5403aa1f64a",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1830,
        "y": 2260,
        "wires": [
            [
                "305631d13407fc15"
            ]
        ]
    },
    {
        "id": "8d3c4093ef7fca97",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "dest_id step11",
        "func": "\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.step_id ==global.get(\"pick3.step_id\") && msg.payload.status=='success')\n\n{\n\nmsg.payload=msg.payload.destination_ids;\nreturn msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 3000,
        "wires": [
            [
                "51e4bb58bfafb6f7"
            ]
        ]
    },
    {
        "id": "9e9782181b23302a",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = [];\n\na = msg.payload;\n\n\nvar b = a[0].conveyor_id;\n\nvar c = a[0].step_id;\n\n\n\n\nvar d =global.get(\"exit_ready.step_id\")\n\nif (c==d ) \n{\n    msg.payload = \"out\" + b;\n    return msg;\n}\n\nelse\n{\n  msg.payload = \"in\" + b;  \n  return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 3000,
        "wires": [
            [
                "f5057503e8e1e9ae"
            ]
        ]
    },
    {
        "id": "51e4bb58bfafb6f7",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1830,
        "y": 3000,
        "wires": [
            [
                "9e9782181b23302a"
            ]
        ]
    },
    {
        "id": "55895f433c8993dc",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "dest_id step12",
        "func": "\nif (msg.payload.msg_type=='container_released_ack' && msg.payload.step_id ==global.get(\"pick4.step_id\") && msg.payload.status=='success')\n\n{\n\nmsg.payload=msg.payload.destination_ids;\nreturn msg;\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 3620,
        "wires": [
            [
                "469a2b5fb822e094"
            ]
        ]
    },
    {
        "id": "bafb47d446401217",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "var a = [];\n\na = msg.payload;\n\n\nvar b = a[0].conveyor_id;\n\nvar c = a[0].step_id;\n\n\n\nvar d =global.get(\"exit_ready.step_id\")\n\nif (c==d ) \n{\n    msg.payload = \"out\" + b;\n    return msg;\n}\n\nelse\n{\n  msg.payload = \"in\" + b;  \n  return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 3620,
        "wires": [
            [
                "a8412d7400d45463",
                "ff8a31603b24066b"
            ]
        ]
    },
    {
        "id": "a8412d7400d45463",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 3680,
        "wires": []
    },
    {
        "id": "469a2b5fb822e094",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1870,
        "y": 3620,
        "wires": [
            [
                "bafb47d446401217"
            ]
        ]
    },
    {
        "id": "734ccacb0b28622f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "step_id",
        "func": "if (msg.payload.msg_type=='container_released')\n{\n\nmsg.payload=msg.payload.step_id;\nglobal.set(\"Rcvd_step_id\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "ed0707881c1664fc",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1130,
        "y": 1000,
        "wires": [
            [
                "55e8380828d86ca0"
            ]
        ]
    },
    {
        "id": "792cfde55074fa9d",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 915,
        "y": 1060,
        "wires": [
            [
                "0b723d25990b5050"
            ]
        ]
    },
    {
        "id": "0b723d25990b5050",
        "type": "mqtt in",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 1010,
        "y": 1000,
        "wires": [
            [
                "ed0707881c1664fc"
            ]
        ]
    },
    {
        "id": "bdf8c4a7ad017a04",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "937cce842b747007"
        ],
        "x": 915,
        "y": 1000,
        "wires": [
            [
                "0b723d25990b5050"
            ]
        ]
    },
    {
        "id": "fb625d1ecafd7208",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 930,
        "y": 1580,
        "wires": [
            [
                "f2db213346157bcd"
            ]
        ]
    },
    {
        "id": "378572b62a4cb8a5",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 675,
        "y": 1640,
        "wires": [
            [
                "9e6e9209cd7a16e9"
            ]
        ]
    },
    {
        "id": "9e6e9209cd7a16e9",
        "type": "mqtt in",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 770,
        "y": 1580,
        "wires": [
            [
                "fb625d1ecafd7208"
            ]
        ]
    },
    {
        "id": "e7af82c93b0ca81b",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "937cce842b747007"
        ],
        "x": 675,
        "y": 1580,
        "wires": [
            [
                "9e6e9209cd7a16e9"
            ]
        ]
    },
    {
        "id": "93fe6e77ebc9c80f",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 930,
        "y": 2280,
        "wires": [
            [
                "d2763bc226f5ce56"
            ]
        ]
    },
    {
        "id": "fa97867af4c7d3bf",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 715,
        "y": 2340,
        "wires": [
            [
                "2ac8d407ef079955"
            ]
        ]
    },
    {
        "id": "2ac8d407ef079955",
        "type": "mqtt in",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 810,
        "y": 2280,
        "wires": [
            [
                "93fe6e77ebc9c80f"
            ]
        ]
    },
    {
        "id": "50ddb8c38f08eaa1",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "937cce842b747007"
        ],
        "x": 715,
        "y": 2280,
        "wires": [
            [
                "2ac8d407ef079955"
            ]
        ]
    },
    {
        "id": "a718d67447b9e6bf",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 930,
        "y": 2860,
        "wires": [
            [
                "02e9e0141f938f19"
            ]
        ]
    },
    {
        "id": "c86080ef8087c1bf",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 715,
        "y": 2920,
        "wires": [
            [
                "b445b6d5f990d393"
            ]
        ]
    },
    {
        "id": "b445b6d5f990d393",
        "type": "mqtt in",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 810,
        "y": 2860,
        "wires": [
            [
                "a718d67447b9e6bf"
            ]
        ]
    },
    {
        "id": "7a67d4e58885875f",
        "type": "json",
        "z": "618178b2a7cb292b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 870,
        "y": 3480,
        "wires": [
            [
                "cc64b66eeed287d2"
            ]
        ]
    },
    {
        "id": "77a9f6193cf6bb5a",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 655,
        "y": 3540,
        "wires": [
            [
                "dc76d3c582b19a8c"
            ]
        ]
    },
    {
        "id": "dc76d3c582b19a8c",
        "type": "mqtt in",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 750,
        "y": 3480,
        "wires": [
            [
                "7a67d4e58885875f"
            ]
        ]
    },
    {
        "id": "5097a018b046bad7",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "937cce842b747007"
        ],
        "x": 655,
        "y": 3480,
        "wires": [
            [
                "dc76d3c582b19a8c"
            ]
        ]
    },
    {
        "id": "6961585652f3a1e7",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "dummy push",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"24\",\"step_id\":\"21\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"23\",\"step_id\":\"26\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "fb625d1ecafd7208"
            ]
        ]
    },
    {
        "id": "f65bf3fcffa33c2f",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "dummy push",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"4\",\"step_id\":\"10\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"10\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "str",
        "x": 790,
        "y": 2220,
        "wires": [
            [
                "93fe6e77ebc9c80f"
            ]
        ]
    },
    {
        "id": "8c76750dc604efa5",
        "type": "status",
        "z": "618178b2a7cb292b",
        "name": "",
        "scope": [
            "5f423a4450ebd331"
        ],
        "x": 2680,
        "y": 1320,
        "wires": [
            [
                "bd90870aa2c69c00",
                "187466fa831ef757"
            ]
        ]
    },
    {
        "id": "bd90870aa2c69c00",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2830,
        "y": 1360,
        "wires": []
    },
    {
        "id": "187466fa831ef757",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "set status",
        "func": "var a = msg.status.text\n\nif (a==\"nodeId stored\")\n\n{\nglobal.set(\"step9_opc_status\",true)\n}\nelse\n{\nglobal.set(\"step9_opc_status\",true)\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "55e8380828d86ca0",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "check cycle run",
        "func": "if (global.get(\"cycle_run\")==false)\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1000,
        "wires": [
            [
                "734ccacb0b28622f",
                "3db6b06cbd852684"
            ]
        ]
    },
    {
        "id": "66caa5fe8cebeae6",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2810,
        "y": 1500,
        "wires": []
    },
    {
        "id": "20b355af31d1c273",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1680,
        "y": 1640,
        "wires": [
            [
                "4fde24619ea809cf"
            ]
        ]
    },
    {
        "id": "413a9f6f0d9613b8",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1800,
        "y": 2080,
        "wires": [
            [
                "e2bebc9a7a51ae65"
            ]
        ]
    },
    {
        "id": "47805acdac1863eb",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1780,
        "y": 3060,
        "wires": [
            [
                "941dd48e1e3b9374"
            ]
        ]
    },
    {
        "id": "3a6c1ecd6ab7ca26",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1820,
        "y": 3660,
        "wires": [
            [
                "a9ddedd5919883e1"
            ]
        ]
    },
    {
        "id": "329c2b84a3499589",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 1420,
        "wires": [
            [
                "5f763226de88c718"
            ]
        ]
    },
    {
        "id": "693af91abcc4572e",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 2120,
        "wires": [
            [
                "1bdf3f3aefdd8ff9"
            ]
        ]
    },
    {
        "id": "602d574ac1fe779b",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 3000,
        "wires": [
            [
                "971b4495b8071004"
            ]
        ]
    },
    {
        "id": "9d486bee36085072",
        "type": "delay",
        "z": "618178b2a7cb292b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 3520,
        "wires": [
            [
                "40684d618cd3a804"
            ]
        ]
    },
    {
        "id": "8a6815f6e32b915a",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "global.set(\"step9_retry_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "e6a3c3018314e7d1",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Retry Release1",
        "diff": true,
        "name": "",
        "x": 1760,
        "y": 1320,
        "wires": [
            [
                "2d81a786e5636fac",
                "4fddf373f8c322fb",
                "1f0f0a5441f29ab9",
                "aaa90cec9705af5b",
                "8a6815f6e32b915a"
            ]
        ]
    },
    {
        "id": "2d81a786e5636fac",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push task id",
        "func": "if (msg.payload==true && global.get(\"released_c9.task_id\")!='')\n{\nmsg.payload = global.get(\"released_c9.task_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 1260,
        "wires": [
            [
                "cd5c200d75163175"
            ]
        ]
    },
    {
        "id": "4fddf373f8c322fb",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push cont id",
        "func": "if (msg.payload==true && global.get(\"released_c9.container_id\")!='')\n{\nmsg.payload = global.get(\"released_c9.container_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 1300,
        "wires": [
            [
                "cb45e8d57a8d6356"
            ]
        ]
    },
    {
        "id": "1f0f0a5441f29ab9",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push data",
        "func": "if (msg.payload==true && global.get(\"released_c9.data\")!={})\n{\nmsg.payload = global.get(\"released_c9.data\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 1380,
        "wires": [
            [
                "b8a20419ad0d027e",
                "d89f8acc63721c25"
            ]
        ]
    },
    {
        "id": "aaa90cec9705af5b",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push dest",
        "func": "if (msg.payload==true && global.get(\"released_c9.destination_ids\")!= [])\n{\nmsg.payload = global.get(\"released_c9.destination_ids\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 1340,
        "wires": [
            [
                "05d11a7ac1260248",
                "2974a68699e01ea6"
            ]
        ]
    },
    {
        "id": "24e2104f7b331aa9",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "global.set(\"step9_retry_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "bdf2ac3207b90ab7",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Retry Release2",
        "diff": true,
        "name": "",
        "x": 1500,
        "y": 1940,
        "wires": [
            [
                "8d4d792b3239436f",
                "8908232fe5023eb9",
                "03088805067b30bc",
                "e525d817f5370796",
                "24e2104f7b331aa9"
            ]
        ]
    },
    {
        "id": "8d4d792b3239436f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push task id",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c10.task_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 1880,
        "wires": [
            [
                "8f8c9ab4fdcff30f"
            ]
        ]
    },
    {
        "id": "8908232fe5023eb9",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push cont id",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c10.container_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 1920,
        "wires": [
            [
                "0bd3356e1901cdd9"
            ]
        ]
    },
    {
        "id": "03088805067b30bc",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push data",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c10.data\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 2000,
        "wires": [
            [
                "a7985972a5d4839d"
            ]
        ]
    },
    {
        "id": "e525d817f5370796",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push dest",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c10.destination_ids\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1960,
        "wires": [
            [
                "305631d13407fc15"
            ]
        ]
    },
    {
        "id": "05d4b51e8b2c11f4",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "global.set(\"step9_retry_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "3af3696dd550a184",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Retry Release3",
        "diff": true,
        "name": "",
        "x": 1520,
        "y": 2740,
        "wires": [
            [
                "f60dfbe4c933aad7",
                "6e085e638cf05d8f",
                "270e89e749576d7a",
                "b11e9e7f13d36f61",
                "05d4b51e8b2c11f4"
            ]
        ]
    },
    {
        "id": "f60dfbe4c933aad7",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push task id",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c11.task_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 2680,
        "wires": [
            [
                "6805f4283ac63656"
            ]
        ]
    },
    {
        "id": "6e085e638cf05d8f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push cont id",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c11.container_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 2720,
        "wires": [
            [
                "cd6818b7f3b8b7f2"
            ]
        ]
    },
    {
        "id": "270e89e749576d7a",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push data",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c11.data\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 2800,
        "wires": [
            [
                "e29abe7741734d96"
            ]
        ]
    },
    {
        "id": "b11e9e7f13d36f61",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push dest",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c11.destination_ids\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 2760,
        "wires": [
            [
                "9e9782181b23302a"
            ]
        ]
    },
    {
        "id": "b3dacbc4da2ed4a1",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "global.set(\"step9_retry_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "4b8a6597d1909d31",
        "type": "s7 in",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Retry Release4",
        "diff": true,
        "name": "",
        "x": 1100,
        "y": 3280,
        "wires": [
            [
                "98a099ee7c3639ec",
                "e14d7e26d6986eb8",
                "9f4e4d914bec6bb4",
                "c9c2e59ba012abc4",
                "b3dacbc4da2ed4a1"
            ]
        ]
    },
    {
        "id": "98a099ee7c3639ec",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push task id",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c12.task_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "e14d7e26d6986eb8",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push cont id",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c12.container_id\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "9f4e4d914bec6bb4",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push data",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c12.data\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 3340,
        "wires": [
            [
                "5314072584e705f7"
            ]
        ]
    },
    {
        "id": "c9c2e59ba012abc4",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "push dest",
        "func": "if (msg.payload==true)\n{\nmsg.payload = global.get(\"released_c12.destination_ids\");\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 3300,
        "wires": [
            [
                "bafb47d446401217"
            ]
        ]
    },
    {
        "id": "7517661bd706e249",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "pass thru",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2060,
        "wires": [
            [
                "4690842e017f92cc",
                "596cd986b7d8642d",
                "22098cc352afa59b",
                "2ad3fccd69c18d9c",
                "c511cd933a176d4f",
                "e9d2144f6976f206",
                "531532c7a2a23780"
            ]
        ]
    },
    {
        "id": "5f763226de88c718",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "conveyor_release_ack step9",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\n// var step15_16_status = global.get(\"step15_step16_engage\");\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a  )\n{\nvar d = new Date()\nvar time = d.getTime()\n\n\nif (msg.payload.step_id==global.get(\"pick1.step_id\"))\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id\ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")\ncontainer_released_ack.step_id = msg.payload.step_id \ncontainer_released_ack.msg_type = \"container_released_ack\" \ncontainer_released_ack.container_id = msg.payload.container_id \nvar data1 = msg.payload.data\ncontainer_released_ack.data = msg.payload.data//global.get(\"released_c9.data\")//JSON.parse(data1) ? data1 : '{\"originating_service\":\"GMC\"}';\ncontainer_released_ack.destination_ids = msg.payload.destination_ids;\n\n\nif  (global.get(\"c9.container_id\")!= msg.payload.container_id)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR003\" \ncontainer_released_ack.errorMessage = \"TOTE MISMATCH\"  \n}\n\n\n\nelse if ( global.get(\"pick1.sensor\")==true && global.get(\"c9.container_id\")== msg.payload.container_id)    \n{\ncontainer_released_ack.status = \"success\" \ncontainer_released_ack.errorCode = \"\" \ncontainer_released_ack.errorMessage = \"\" \nglobal.set(\"released_c9\",container_released_ack)\n\n}\n\n\nelse if (global.get(\"pick1.sensor\")==false)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR001\" \ncontainer_released_ack.errorMessage = \"NO TOTE Present\" \n\n}\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1420,
        "wires": [
            [
                "e917bab721dcb08f",
                "b1494f0f09254202",
                "d9a3fd3774b7967f",
                "ea99721cec05c9fd",
                "0eeabc2e9f3f01b4",
                "a12b5f09b8cd69ab",
                "1e69574dbe255f30"
            ]
        ]
    },
    {
        "id": "5f9af27cfb28740b",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "release data push FOR STEP9,10,11,12",
        "func": "var a  = global.get(\"conveyor_id_hmi\")\n\n\nif (msg.payload.msg_type=='container_released' & msg.payload.conveyor_id ==a && msg.payload.step_id == \"9\")\n{\n    \nglobal.set(\"released_c9.task_id\",msg.payload.task_id);    \nglobal.set(\"released_c9.container_id\",msg.payload.container_id);  \nglobal.set(\"released_c9.data\",msg.payload.data);  \nglobal.set(\"released_c9.destination_id\",msg.payload.destination_ids);\n    \nreturn msg;\n}\n\nif (msg.payload.msg_type=='container_released' & msg.payload.conveyor_id ==a && msg.payload.step_id == \"10\")\n{\n    \nglobal.set(\"released_c10.task_id\",msg.payload.task_id);    \nglobal.set(\"released_c10.container_id\",msg.payload.container_id);  \nglobal.set(\"released_c10.data\",msg.payload.data);\nglobal.set(\"released_c10.destination_id\",msg.payload.destination_ids);\n    \nreturn msg;\n}\n\n\nif (msg.payload.msg_type=='container_released' & msg.payload.conveyor_id ==a && msg.payload.step_id == \"11\")\n{\n    \nglobal.set(\"released_c11.task_id\",msg.payload.task_id);    \nglobal.set(\"released_c11.container_id\",msg.payload.container_id);  \nglobal.set(\"released_c11.data\",msg.payload.data); \nglobal.set(\"released_c11.destination_id\",msg.payload.destination_ids);\n    \nreturn msg;\n}\n\n\nif (msg.payload.msg_type=='container_released' & msg.payload.conveyor_id ==a && msg.payload.step_id == \"12\")\n{\n    \nglobal.set(\"released_c12.task_id\",msg.payload.task_id);    \nglobal.set(\"released_c12.container_id\",msg.payload.container_id);  \nglobal.set(\"released_c12.data\",msg.payload.data);  \nglobal.set(\"released_c12.destination_id\",msg.payload.destination_ids);\n    \nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "1e69574dbe255f30",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 1380,
        "wires": []
    },
    {
        "id": "a12b5f09b8cd69ab",
        "type": "mqtt out",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1450,
        "y": 1340,
        "wires": []
    },
    {
        "id": "8e749e0e13966047",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 1325,
        "y": 1320,
        "wires": [
            [
                "a12b5f09b8cd69ab"
            ]
        ]
    },
    {
        "id": "e9d2144f6976f206",
        "type": "mqtt out",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1350,
        "y": 1980,
        "wires": []
    },
    {
        "id": "343e259ca568ea64",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 1225,
        "y": 1960,
        "wires": [
            [
                "e9d2144f6976f206"
            ]
        ]
    },
    {
        "id": "22d341c20bde9a5d",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "pass thru",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3000,
        "wires": [
            [
                "b883d6a3522b42cc",
                "8d3c4093ef7fca97",
                "c5e4cb1f73af7898",
                "446547e79938e83a",
                "cfe882f4fcedb37f",
                "62ffc76c3e60151e",
                "5ac59b612a0e671e"
            ]
        ]
    },
    {
        "id": "b883d6a3522b42cc",
        "type": "mqtt out",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1370,
        "y": 3060,
        "wires": []
    },
    {
        "id": "e63d65ae3fa27eae",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 1205,
        "y": 3100,
        "wires": [
            [
                "b883d6a3522b42cc"
            ]
        ]
    },
    {
        "id": "a186442012875bba",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "pass thru",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 3620,
        "wires": [
            [
                "551ee89b82955565",
                "f2b91fdefe0e9c14",
                "254a700b0df66b56",
                "23cab60c6a982cfe",
                "47d7ab9b33915bde",
                "55895f433c8993dc",
                "3fc2be0eabbcf981"
            ]
        ]
    },
    {
        "id": "551ee89b82955565",
        "type": "mqtt out",
        "z": "618178b2a7cb292b",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1450,
        "y": 3720,
        "wires": []
    },
    {
        "id": "b4281e9497fb3f9e",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 1255,
        "y": 3720,
        "wires": [
            [
                "551ee89b82955565"
            ]
        ]
    },
    {
        "id": "531532c7a2a23780",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 2240,
        "wires": []
    },
    {
        "id": "5ac59b612a0e671e",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 2900,
        "wires": []
    },
    {
        "id": "3fc2be0eabbcf981",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 3680,
        "wires": []
    },
    {
        "id": "1bdf3f3aefdd8ff9",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "conveyor_release_ack step-10",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\n// var step15_16_status = global.get(\"step15_step16_engage\");\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a  )\n{\nvar d = new Date()\nvar time = d.getTime()\n\n\nif (msg.payload.step_id==global.get(\"pick2.step_id\"))\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id\ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")\ncontainer_released_ack.step_id = msg.payload.step_id \ncontainer_released_ack.msg_type = \"container_released_ack\" \ncontainer_released_ack.container_id = msg.payload.container_id \nvar data1 = msg.payload.data\ncontainer_released_ack.data = msg.payload.data//global.get(\"released_c10.data\")//JSON.parse(data1) ? data1 : '{\"originating_service\":\"GMC\"}';\ncontainer_released_ack.destination_ids = msg.payload.destination_ids;\n\n\nif  (global.get(\"c10.container_id\")!= msg.payload.container_id)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR003\" \ncontainer_released_ack.errorMessage = \"TOTE MISMATCH\"  \nglobal.set(\"released_c10\",{})\n}\n\n\n\nelse if ( global.get(\"pick2.sensor\")==true && global.get(\"c10.container_id\")== msg.payload.container_id)    \n{\ncontainer_released_ack.status = \"success\" \ncontainer_released_ack.errorCode = \"\" \ncontainer_released_ack.errorMessage = \"\" \nglobal.set(\"released_c10\",container_released_ack)\n\n}\n\n\nelse if (global.get(\"pick2.sensor\")==false)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR001\" \ncontainer_released_ack.errorMessage = \"NO TOTE Present\" \nglobal.set(\"released_c10\",{})\n}\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2060,
        "wires": [
            [
                "7517661bd706e249"
            ]
        ]
    },
    {
        "id": "971b4495b8071004",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "conveyor_release_ack step-11",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\n// var step15_16_status = global.get(\"step15_step16_engage\");\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a  )\n{\nvar d = new Date()\nvar time = d.getTime()\n\n\nif (msg.payload.step_id==global.get(\"pick3.step_id\"))\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id\ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")\ncontainer_released_ack.step_id = msg.payload.step_id \ncontainer_released_ack.msg_type = \"container_released_ack\" \ncontainer_released_ack.container_id = msg.payload.container_id \nvar data1 = msg.payload.data\ncontainer_released_ack.data = msg.payload.data//global.get(\"released_c11.data\")//JSON.parse(data1) ? data1 : '{\"originating_service\":\"GMC\"}';\ncontainer_released_ack.destination_ids = msg.payload.destination_ids;\n\n\nif  (global.get(\"c11.container_id\")!= msg.payload.container_id)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR003\" \ncontainer_released_ack.errorMessage = \"TOTE MISMATCH\"  \nglobal.set(\"released_c11\",{})\n}\n\n\n\nelse if ( global.get(\"pick3.sensor\")==true && global.get(\"c11.container_id\")== msg.payload.container_id)    \n{\ncontainer_released_ack.status = \"success\" \ncontainer_released_ack.errorCode = \"\" \ncontainer_released_ack.errorMessage = \"\" \nglobal.set(\"released_c11\",container_released_ack)\n\n}\n\n\nelse if (global.get(\"pick3.sensor\")==false)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR001\" \ncontainer_released_ack.errorMessage = \"NO TOTE Present\" \nglobal.set(\"released_c11\",{})\n}\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 3000,
        "wires": [
            [
                "22d341c20bde9a5d"
            ]
        ]
    },
    {
        "id": "3d875c593d175f1f",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "conveyor_release_ack step11",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\n// var step15_16_status = global.get(\"step15_step16_engage\");\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a  )\n{\nvar d = new Date()\nvar time = d.getTime()\n\nif(msg.payload.step_id=='11' )\n{\n\ncontainer_released_ack.task_id = global.get(\"released_c11.task_id\")\ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")\ncontainer_released_ack.step_id = msg.payload.step_id \ncontainer_released_ack.msg_type = \"container_released_ack\" \ncontainer_released_ack.container_id = global.get(\"released_c11.container_id\") \nvar data3 = global.get(\"released_c11.data\")\ncontainer_released_ack.data = global.get(\"released_c11.data\")//JSON.parse(data3)? data3 : \"\";\ncontainer_released_ack.destination_ids = msg.payload.destination_ids\n\nif  (global.get(\"c11.container_id\")!= msg.payload.container_id)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR003\" \ncontainer_released_ack.errorMessage = \"TOTE MISMATCH\" \nglobal.set(\"released_c11\",{})\n}\n\n\nelse if ( global.get(\"c11.sensor\")==true && global.get(\"c11.container_id\")!= msg.payload.container_id)     \n{\ncontainer_released_ack.status = \"success\" \ncontainer_released_ack.errorCode = \"\" \ncontainer_released_ack.errorMessage = \"\"\n//container_released_ack.available = \"False\" \nglobal.set(\"released_c11\",container_released_ack)\n}\n\nelse if (global.get(\"c11.sensor\")==false)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR001\" \ncontainer_released_ack.errorMessage = \"NO TOTE Present\" \n//container_released_ack.available = \"True\"  \nglobal.set(\"released_c11\",{})\n}\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "40684d618cd3a804",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "conveyor_release_ack step-12",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\n// var step15_16_status = global.get(\"step15_step16_engage\");\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a  )\n{\nvar d = new Date()\nvar time = d.getTime()\n\n\nif (msg.payload.step_id==global.get(\"pick4.step_id\"))\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id\ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")\ncontainer_released_ack.step_id = msg.payload.step_id \ncontainer_released_ack.msg_type = \"container_released_ack\" \ncontainer_released_ack.container_id = msg.payload.container_id \nvar data1 = msg.payload.data\ncontainer_released_ack.data = msg.payload.data//global.get(\"released_c12.data\")//JSON.parse(data1) ? data1 : '{\"originating_service\":\"GMC\"}';\ncontainer_released_ack.destination_ids = msg.payload.destination_ids;\n\n\nif  (global.get(\"c12.container_id\")!= msg.payload.container_id)// && global.get(\"c12.container_id\")!=\"\")\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR003\" \ncontainer_released_ack.errorMessage = \"TOTE MISMATCH\"  \nglobal.set(\"released_c12\",{})\n}\n\n\n\nelse if ( global.get(\"pick4.sensor\")==true && global.get(\"c12.container_id\")==msg.payload.container_id)   \n{\ncontainer_released_ack.status = \"success\" \ncontainer_released_ack.errorCode = \"\" \ncontainer_released_ack.errorMessage = \"\" \nglobal.set(\"released_c12\",container_released_ack)\n\n}\n\n\nelse if (global.get(\"pick4.sensor\")==false)\n{\ncontainer_released_ack.status = \"failed\" \ncontainer_released_ack.errorCode = \"ERR001\" \ncontainer_released_ack.errorMessage = \"NO TOTE Present\" \nglobal.set(\"released_c12\",{})\n}\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 3620,
        "wires": [
            [
                "a186442012875bba"
            ]
        ]
    },
    {
        "id": "f2db213346157bcd",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "check cycle run",
        "func": "if (global.get(\"cycle_run\")==true)\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1500,
        "wires": [
            [
                "329c2b84a3499589"
            ]
        ]
    },
    {
        "id": "d2763bc226f5ce56",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "check cycle run",
        "func": "if (global.get(\"cycle_run\")==true)\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2220,
        "wires": [
            [
                "693af91abcc4572e"
            ]
        ]
    },
    {
        "id": "02e9e0141f938f19",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "check cycle run",
        "func": "if (global.get(\"cycle_run\")==true)\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2940,
        "wires": [
            [
                "602d574ac1fe779b"
            ]
        ]
    },
    {
        "id": "cc64b66eeed287d2",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "check cycle run",
        "func": "if (global.get(\"cycle_run\")==true)\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3440,
        "wires": [
            [
                "9d486bee36085072"
            ]
        ]
    },
    {
        "id": "039ace25dfb9cecf",
        "type": "function",
        "z": "618178b2a7cb292b",
        "name": "",
        "func": "if (msg.payload.status==\"success\")\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 520,
        "wires": [
            [
                "bb0eddbac8e5112b",
                "4656d6aa7a4cd30e",
                "fc814fd17100d51f",
                "440ad8db1d85a002"
            ]
        ]
    },
    {
        "id": "80ad5790fa4bb1ca",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"24\",\"step_id\":\"23\",\"msg_type\":\"container_released\",\"container_id\":\"A000019021\",\"destination_ids\":[{\"conveyor_id\":\"23\",\"step_id\":\"26\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 690,
        "y": 3620,
        "wires": [
            [
                "7a67d4e58885875f"
            ]
        ]
    },
    {
        "id": "f2b37e5a0635c59f",
        "type": "link in",
        "z": "618178b2a7cb292b",
        "name": "",
        "links": [
            "937cce842b747007"
        ],
        "x": 745,
        "y": 2820,
        "wires": [
            [
                "b445b6d5f990d393"
            ]
        ]
    },
    {
        "id": "9fda01eec4efb1c9",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"24\",\"step_id\":\"23\",\"msg_type\":\"container_released\",\"container_id\":\"tote003\",\"destination_ids\":[{\"conveyor_id\":\"23\",\"step_id\":\"26\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 690,
        "y": 3080,
        "wires": [
            [
                "a718d67447b9e6bf"
            ]
        ]
    },
    {
        "id": "fdab10c0c6dca859",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"24\",\"step_id\":\"22\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"23\",\"step_id\":\"26\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 690,
        "y": 2400,
        "wires": [
            [
                "93fe6e77ebc9c80f"
            ]
        ]
    },
    {
        "id": "2974a68699e01ea6",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2270,
        "y": 1300,
        "wires": []
    },
    {
        "id": "d89f8acc63721c25",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 1380,
        "wires": []
    },
    {
        "id": "3c5f5db3b7aee814",
        "type": "debug",
        "z": "618178b2a7cb292b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 1760,
        "wires": []
    },
    {
        "id": "397738d67f788830",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "release tote001 pick1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"23\",\"step_id\":\"21\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"20\",\"step_id\":\"26\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 1120,
        "y": 1360,
        "wires": [
            [
                "a12b5f09b8cd69ab"
            ]
        ]
    },
    {
        "id": "a702c7cfcb652d0e",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "release tote001 pick2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"23\",\"step_id\":\"22\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"20\",\"step_id\":\"26\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 1000,
        "y": 1940,
        "wires": [
            [
                "e9d2144f6976f206"
            ]
        ]
    },
    {
        "id": "36bf6e56135b3b1e",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "release tote001 pick3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"23\",\"step_id\":\"23\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"20\",\"step_id\":\"26\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 580,
        "y": 3120,
        "wires": [
            [
                "b883d6a3522b42cc"
            ]
        ]
    },
    {
        "id": "602a81c27d3c4c1e",
        "type": "inject",
        "z": "618178b2a7cb292b",
        "name": "release tote001 pick4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "receive_topic",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"23\",\"step_id\":\"24\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"20\",\"step_id\":\"26\"},{\"conveyor_id\":\"2\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 500,
        "y": 3520,
        "wires": [
            [
                "dc76d3c582b19a8c"
            ]
        ]
    },
    {
        "id": "a01372244eac584f",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick3 DATA",
        "name": "",
        "x": 2520,
        "y": 2940,
        "wires": []
    },
    {
        "id": "f5057503e8e1e9ae",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH3 DEST",
        "name": "",
        "x": 2200,
        "y": 3000,
        "wires": []
    },
    {
        "id": "96e51ad46e8a1f8f",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick1 DATA",
        "name": "",
        "x": 2560,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c21b62d68b3ac42c",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH1 DEST",
        "name": "",
        "x": 2540,
        "y": 1600,
        "wires": []
    },
    {
        "id": "328692c1ff9ab008",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick4 DATA",
        "name": "",
        "x": 2240,
        "y": 3580,
        "wires": []
    },
    {
        "id": "ff8a31603b24066b",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH4 DEST",
        "name": "",
        "x": 2420,
        "y": 3620,
        "wires": []
    },
    {
        "id": "56240740cf0503a1",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "Dropped Task_id",
        "name": "",
        "x": 1750,
        "y": 380,
        "wires": []
    },
    {
        "id": "d7c4e589add191e5",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "Dropped Cont_id",
        "name": "",
        "x": 1750,
        "y": 440,
        "wires": []
    },
    {
        "id": "7ec047eacc4bac24",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "Dropped Data",
        "name": "",
        "x": 1740,
        "y": 500,
        "wires": []
    },
    {
        "id": "762e174abaaefec4",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "Dropped Dest_id",
        "name": "",
        "x": 1750,
        "y": 540,
        "wires": []
    },
    {
        "id": "cd5c200d75163175",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick1 TASK_ID",
        "name": "",
        "x": 2370,
        "y": 1440,
        "wires": []
    },
    {
        "id": "cb45e8d57a8d6356",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick1 CONT_ID",
        "name": "",
        "x": 2370,
        "y": 1500,
        "wires": []
    },
    {
        "id": "d6f558f5f816a9af",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick2 DATA",
        "name": "",
        "x": 2360,
        "y": 2220,
        "wires": []
    },
    {
        "id": "93daf40fef6e2837",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH2 DEST",
        "name": "",
        "x": 2340,
        "y": 2280,
        "wires": []
    },
    {
        "id": "8f8c9ab4fdcff30f",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick2 TASK_ID",
        "name": "",
        "x": 2370,
        "y": 2100,
        "wires": []
    },
    {
        "id": "0bd3356e1901cdd9",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick2 CONT_ID",
        "name": "",
        "x": 2370,
        "y": 2160,
        "wires": []
    },
    {
        "id": "6805f4283ac63656",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick3 TASK_ID",
        "name": "",
        "x": 2390,
        "y": 2860,
        "wires": []
    },
    {
        "id": "cd6818b7f3b8b7f2",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick3 CONT_ID",
        "name": "",
        "x": 2190,
        "y": 2900,
        "wires": []
    },
    {
        "id": "d800f86862a421b1",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick4 TASK_ID",
        "name": "",
        "x": 2250,
        "y": 3500,
        "wires": []
    },
    {
        "id": "c613dc045fc32a89",
        "type": "s7 out",
        "z": "618178b2a7cb292b",
        "endpoint": "519a9c297613d180",
        "variable": "REACH pick4 CONT_ID",
        "name": "",
        "x": 2450,
        "y": 3540,
        "wires": []
    },
    {
        "id": "2c8f29148d14ca29",
        "type": "comment",
        "z": "b65463e5fd9488ee",
        "name": "operator reach",
        "info": "",
        "x": 160,
        "y": 20,
        "wires": []
    },
    {
        "id": "010b2307588249e2",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "clear reach step9 bit",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_reached'&& msg.payload.conveyor_id==a)\n{\nmsg.payload=false;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 380,
        "wires": [
            [
                "1185cd7a74edbbbe"
            ]
        ]
    },
    {
        "id": "1185cd7a74edbbbe",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "REACH Pick1 BIT",
        "name": "",
        "x": 1070,
        "y": 380,
        "wires": []
    },
    {
        "id": "10709e9b181bb24e",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH Pick1 BIT",
        "diff": false,
        "name": "",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "aeaa9782d80fbdc3"
            ]
        ]
    },
    {
        "id": "42709db596b0812a",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "CONT EXIT READY",
        "diff": false,
        "name": "",
        "x": 230,
        "y": 1280,
        "wires": [
            [
                "8ae4d9e4bf034cd6"
            ]
        ]
    },
    {
        "id": "175f13c8d8f0eca5",
        "type": "comment",
        "z": "b65463e5fd9488ee",
        "name": "operator exit ready",
        "info": "",
        "x": 230,
        "y": 1060,
        "wires": []
    },
    {
        "id": "64243ddbf16deae5",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "clear exit ready",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_exit_ready' && msg.payload.conveyor_id==a)\n{\nmsg.payload=false;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1160,
        "wires": [
            [
                "8408885f337f89a2"
            ]
        ]
    },
    {
        "id": "aeaa9782d80fbdc3",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\nvar valid_data = global.get(\"step9_valid\");\n\n\nvar container_reached = {}\n\nvar task_id = global.get(\"c9.task_id\");\nvar container_id = global.get(\"c9.container_id\");\nvar data = global.get(\"c9.data\");\n\n\n\nif (msg.payload==true && task_id !=\"\" && container_id != \"\" && data != \"\")\n\n{\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_reached.task_id = global.get(\"c9.task_id\")\ncontainer_reached.timestamp = JSON.stringify(time)\ncontainer_reached.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_reached.step_id = global.get(\"pick1.step_id\") //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_reached.msg_type = \"container_reached\" //Fix Value\ncontainer_reached.container_id = global.get(\"c9.container_id\") //PLC Value\n\nvar data1 = global.get(\"c9.data\");\n\n\ncontainer_reached.data = JSON.parse(data1);//PLC Value or safe to drop Value\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_reached\nreturn msg;\n\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 440,
        "wires": [
            [
                "010b2307588249e2",
                "ca6b8f45f522ee49"
            ]
        ]
    },
    {
        "id": "b3fec6f35b120256",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\nglobal.set(\"c9.task_id\",msg.payload)\nreturn msg;\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f3a4d6aaa11b387f",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick1 TASK_ID",
        "diff": false,
        "name": "",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "b3fec6f35b120256"
            ]
        ]
    },
    {
        "id": "0d1d6960f0e1f8ea",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick1 CONT_ID",
        "diff": false,
        "name": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "144455a7a61365e5"
            ]
        ]
    },
    {
        "id": "86e4b76aa8fd21e9",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick1 DATA",
        "diff": false,
        "name": "",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "d5859bce5a09ecf5"
            ]
        ]
    },
    {
        "id": "0a78e4d542095772",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"exit_step.task_id\",msg.payload)\nreturn msg;\n\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "7ead82633009de30",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "EXIT READY TASK ID",
        "diff": false,
        "name": "",
        "x": 240,
        "y": 1100,
        "wires": [
            [
                "0a78e4d542095772"
            ]
        ]
    },
    {
        "id": "00703d1f1d3d298a",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "EXIT READY CONT ID",
        "diff": false,
        "name": "",
        "x": 240,
        "y": 1160,
        "wires": [
            [
                "bf6bf5e051d76a0b"
            ]
        ]
    },
    {
        "id": "2a3f6892f86c269b",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "EXIT READY DATA",
        "diff": false,
        "name": "",
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "28055921fbc5af10"
            ]
        ]
    },
    {
        "id": "92d1494ffc2870f2",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "var container_exit_ready= {}\n//global.set(\"data\",\"where_is_the_data\")\n//a.message = global.get(\"data\");\n\n//var a = global.get(\"reach_msg\")\nvar c  = global.get(\"exit_step.task_id\")\n\nif (msg.payload==true && c!='') // && msg.topic==\"Reach Bit C1\")// && msg.topic==\"ns=4;i=194\")\n\n{\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_exit_ready.task_id = global.get(\"exit_step.task_id\")\ncontainer_exit_ready.timestamp = JSON.stringify(time)\ncontainer_exit_ready.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_exit_ready.step_id = global.get(\"exit_ready.step_id\") //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_exit_ready.msg_type = \"container_exit_ready\" //Fix Value\ncontainer_exit_ready.container_id = global.get(\"exit_step.container_id\") //PLC Value\n\nvar data1 = global.get(\"exit_step.data\") ;\n\ncontainer_exit_ready.data = JSON.parse(data1);//PLC Value or safe to drop Value\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_exit_ready\nreturn msg;\n\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1280,
        "wires": [
            [
                "41c16364ab55b29c",
                "ba4d271144cefb36",
                "64243ddbf16deae5"
            ]
        ]
    },
    {
        "id": "8408885f337f89a2",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "CONT EXIT READY",
        "name": "",
        "x": 940,
        "y": 1160,
        "wires": []
    },
    {
        "id": "144455a7a61365e5",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\nglobal.set(\"c9.container_id\",msg.payload)\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d5859bce5a09ecf5",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\n\nglobal.set(\"c9.data\",msg.payload)\n\nreturn msg;\n\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "bf6bf5e051d76a0b",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"exit_step.container_id\",msg.payload)\nreturn msg;\n\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "28055921fbc5af10",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"exit_step.data\",msg.payload)\nreturn msg;\n\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "8ae4d9e4bf034cd6",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 1280,
        "wires": [
            [
                "92d1494ffc2870f2"
            ]
        ]
    },
    {
        "id": "41c16364ab55b29c",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 780,
        "y": 1280,
        "wires": [
            [
                "07b870bd555d78fa"
            ]
        ]
    },
    {
        "id": "216ba0bc19a0e032",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\n\nglobal.set(\"c10.task_id\",msg.payload)\nreturn msg;\n\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "94a5be51377e37c9",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick2 TASK_ID",
        "diff": false,
        "name": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "216ba0bc19a0e032"
            ]
        ]
    },
    {
        "id": "5bf7265e8a9e76a9",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick2 CONT_ID",
        "diff": false,
        "name": "",
        "x": 570,
        "y": 120,
        "wires": [
            [
                "466d5848311a2097"
            ]
        ]
    },
    {
        "id": "6ea566ab64744a43",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick2 DATA",
        "diff": false,
        "name": "",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "5e317da35c34e998"
            ]
        ]
    },
    {
        "id": "466d5848311a2097",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\nglobal.set(\"c10.container_id\",msg.payload)\nreturn msg;\n\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5e317da35c34e998",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\n\n\n\nglobal.set(\"c10.data\",msg.payload )\n\nreturn msg;\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3db727bc27a6bb0c",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\nglobal.set(\"c11.task_id\",msg.payload)\nreturn msg;\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "088b1aba21cab6fe",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick3 TASK_ID",
        "diff": false,
        "name": "",
        "x": 1020,
        "y": 60,
        "wires": [
            [
                "3db727bc27a6bb0c"
            ]
        ]
    },
    {
        "id": "df0df298ccf5b108",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick3 CONT_ID",
        "diff": false,
        "name": "",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "402828e69df0071c"
            ]
        ]
    },
    {
        "id": "ddf953bbf040279b",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick3 DATA",
        "diff": false,
        "name": "",
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "43d17bc97b2a5e0e"
            ]
        ]
    },
    {
        "id": "402828e69df0071c",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\n    global.set(\"c11.container_id\",msg.payload)\nreturn msg;\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "43d17bc97b2a5e0e",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\n\nglobal.set(\"c11.data\",msg.payload)\n\nreturn msg;\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb4f0842fa2d9fd",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\nglobal.set(\"c12.task_id\",msg.payload)\nreturn msg;\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "75f4484fd0f44216",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick4 TASK_ID",
        "diff": false,
        "name": "",
        "x": 1440,
        "y": 60,
        "wires": [
            [
                "7eb4f0842fa2d9fd"
            ]
        ]
    },
    {
        "id": "f5e26292944cfc08",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick4 CONT_ID",
        "diff": false,
        "name": "",
        "x": 1450,
        "y": 120,
        "wires": [
            [
                "1e58af2a7c03c7e0"
            ]
        ]
    },
    {
        "id": "feb88d8fe6d2729c",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH pick4 DATA",
        "diff": false,
        "name": "",
        "x": 1450,
        "y": 260,
        "wires": [
            [
                "f3eb23331071dd63"
            ]
        ]
    },
    {
        "id": "1e58af2a7c03c7e0",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\nglobal.set(\"c12.container_id\",msg.payload)\nreturn msg;\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f3eb23331071dd63",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "\n\nglobal.set(\"c12.data\",msg.payload)\n\nreturn msg;\n\n//msg.topic==\"ns=4;i=194\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "989ba8fd9d79c6ed",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH PICK2 BIT",
        "diff": false,
        "name": "",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "3845ef8e2a6638ad"
            ]
        ]
    },
    {
        "id": "3845ef8e2a6638ad",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "var valid_data = global.get(\"step10_valid\");\n\nvar container_reached = {}\nvar d = new Date()\nvar time = d.getTime()\n\n\nvar task_id = global.get(\"c10.task_id\");\nvar container_id = global.get(\"c10.container_id\");\nvar data = global.get(\"c10.data\");\n\n\n\nif (msg.payload==true  && task_id !=\"\" && container_id != \"\" && data != \"\")\n{\n\ncontainer_reached.task_id = global.get(\"c10.task_id\")\ncontainer_reached.timestamp = JSON.stringify(time)\ncontainer_reached.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_reached.step_id = \"22\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_reached.msg_type = \"container_reached\" //Fix Value\ncontainer_reached.container_id = global.get(\"c10.container_id\") //PLC Value\n\n//var data2={}\nvar data1 = global.get(\"c10.data\")\n\n//var data3 =JSON.stringify(value)\n//data2 = JSON.parse(data3)\n//var data2 = JSON.stringify(data1);\n\ncontainer_reached.data = JSON.parse(data1)//PLC Value or safe to drop Value\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_reached\nreturn msg;\n\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 540,
        "wires": [
            [
                "ad05fc7a044b32a0",
                "d68685181de5f3aa",
                "f2715de3050d9870"
            ]
        ]
    },
    {
        "id": "7b039be48513fa77",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH PICK3 BIT",
        "diff": false,
        "name": "",
        "x": 230,
        "y": 640,
        "wires": [
            [
                "80708544fca476c2"
            ]
        ]
    },
    {
        "id": "80708544fca476c2",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "var valid_data = global.get(\"step11_valid\");\n\nvar container_reached = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\n\nvar task_id = global.get(\"c11.task_id\");\nvar container_id = global.get(\"c11.container_id\");\nvar data = global.get(\"c11.data\");\n\n\n\nif (msg.payload==true && task_id !=\"\" && container_id != \"\" && data != \"\")\n{\n\n\n\n\ncontainer_reached.task_id = global.get(\"c11.task_id\")\ncontainer_reached.timestamp = JSON.stringify(time)\ncontainer_reached.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_reached.step_id = \"23\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_reached.msg_type = \"container_reached\" //Fix Value\ncontainer_reached.container_id = global.get(\"c11.container_id\") //PLC Value\n\nvar data1 = global.get(\"c11.data\");\n\n\ncontainer_reached.data = JSON.parse(data1);//PLC Value or safe to drop Value\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_reached\nreturn msg;\n\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 640,
        "wires": [
            [
                "e5fdcb07766654c3",
                "ad4a7bca0886ee88",
                "eda29f651392f111"
            ]
        ]
    },
    {
        "id": "f0f09004900ab554",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "REACH PICK4 BIT",
        "diff": false,
        "name": "",
        "x": 230,
        "y": 740,
        "wires": [
            [
                "88075c76437fabef"
            ]
        ]
    },
    {
        "id": "88075c76437fabef",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "var valid_data = global.get(\"step12_valid\");\n\nvar container_reached = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nvar task_id = global.get(\"c12.task_id\");\nvar container_id = global.get(\"c12.container_id\");\nvar data = global.get(\"c12.data\");\n\n\n\nif (msg.payload==true  && task_id !=\"\" && container_id != \"\" && data != \"\")\n{\n\n\n\n\n\ncontainer_reached.task_id = global.get(\"c12.task_id\")\ncontainer_reached.timestamp = JSON.stringify(time)\ncontainer_reached.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_reached.step_id = \"24\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_reached.msg_type = \"container_reached\" //Fix Value\ncontainer_reached.container_id = global.get(\"c12.container_id\") //PLC Value\n\nvar data1 = global.get(\"c12.data\");\n\n\ncontainer_reached.data = JSON.parse(data1);//PLC Value or safe to drop Value\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_reached\nreturn msg;\n\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 740,
        "wires": [
            [
                "47973720200a4de9",
                "9f0d869cc95fcf86",
                "f68639417226e24c"
            ]
        ]
    },
    {
        "id": "ad05fc7a044b32a0",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "clear reach step10 bit",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_reached'&& msg.payload.conveyor_id==a)\n{\nmsg.payload=false;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "6be99de05c9ece9b"
            ]
        ]
    },
    {
        "id": "6be99de05c9ece9b",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "REACH PICK2 BIT",
        "name": "",
        "x": 1050,
        "y": 500,
        "wires": []
    },
    {
        "id": "e5fdcb07766654c3",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "clear reach step11 bit",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_reached'&& msg.payload.conveyor_id==a)\n{\nmsg.payload=false;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 600,
        "wires": [
            [
                "31ec1d0144ab99ad"
            ]
        ]
    },
    {
        "id": "31ec1d0144ab99ad",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "REACH PICK3 BIT",
        "name": "",
        "x": 1050,
        "y": 600,
        "wires": []
    },
    {
        "id": "47973720200a4de9",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "clear reach step12 bit",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nif (msg.payload.msg_type=='container_reached'&& msg.payload.conveyor_id==a)\n{\nmsg.payload=false;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 700,
        "wires": [
            [
                "3ba653bdd53b4d0f"
            ]
        ]
    },
    {
        "id": "3ba653bdd53b4d0f",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "REACH PICK4 BIT",
        "name": "",
        "x": 1050,
        "y": 700,
        "wires": []
    },
    {
        "id": "667939f7a39d28af",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "PICK1 MOVED",
        "diff": false,
        "name": "",
        "x": 200,
        "y": 1460,
        "wires": [
            [
                "f7357905b9af9624",
                "225e1d588698e31d"
            ]
        ]
    },
    {
        "id": "f7357905b9af9624",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "step9 moved",
        "func": "\nvar container_moved = {};\n\ncontainer_moved.data = {};\n\n\nif (msg.payload ==true)\n\n{\n\n\n\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_moved.task_id = global.get(\"released_c9.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = global.get(\"pick1.step_id\") //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = global.get(\"released_c9.container_id\") //PLC Value\n\nvar data1 = {}\n\ndata1 = global.get(\"released_c9.data\");\n\ncontainer_moved.data = data1 // JSON.parse(data1);//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1460,
        "wires": [
            [
                "c4fd75c0810f2c56",
                "a022877d62e5f2ea",
                "c0fc5c2ebde9db52"
            ]
        ]
    },
    {
        "id": "d6fc84aa13ddacbd",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "step6 moved",
        "func": "if (msg.payload ==true)\n\n{\n\nvar d = new Date()\nvar time = d.getTime()\n\nvar container_moved = {}\n\ncontainer_moved.task_id = global.get(\"released_c10.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = global.get(\"pick2.step_id\") //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = global.get(\"released_c10.container_id\") //PLC Value\n\nvar data1 = global.get(\"released_c10.data\");\n\ncontainer_moved.data = data1;//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1560,
        "wires": [
            [
                "c4fd75c0810f2c56",
                "8ed39e9c3de620fa",
                "01a362e9d13a5117"
            ]
        ]
    },
    {
        "id": "404e7ec92dc8e344",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "step7 moved",
        "func": "if (msg.payload ==true)\n\n{\n\nvar d = new Date()\nvar time = d.getTime()\n\nvar container_moved = {}\n\ncontainer_moved.task_id = global.get(\"released_c11.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = global.get(\"pick3.step_id\") //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = global.get(\"released_c11.container_id\") //PLC Value\n\nvar data1 = global.get(\"released_c11.data\");\n\ncontainer_moved.data = data1;//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1700,
        "wires": [
            [
                "c4fd75c0810f2c56",
                "29d8a9e61e44f5d7",
                "4d9406eda87c9d73"
            ]
        ]
    },
    {
        "id": "8c500d0406289be3",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "step8 moved",
        "func": "if (msg.payload ==true)\n\n{\n\nvar d = new Date()\nvar time = d.getTime()\n\nvar container_moved = {}\n\ncontainer_moved.task_id = global.get(\"released_c12.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = global.get(\"pick4.step_id\") //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = global.get(\"released_c12.container_id\") //PLC Value\n\nvar data1 = global.get(\"released_c12.data\");\n\ncontainer_moved.data = data1;//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1820,
        "wires": [
            [
                "c4fd75c0810f2c56",
                "bb6248764ccf4813",
                "6194e073c389c7cb"
            ]
        ]
    },
    {
        "id": "2b42e8292c36685b",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "PICK2 MOVED",
        "diff": false,
        "name": "",
        "x": 200,
        "y": 1560,
        "wires": [
            [
                "d6fc84aa13ddacbd",
                "486e67e31fe72f3c"
            ]
        ]
    },
    {
        "id": "6211972831b490be",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "PICK3 MOVED",
        "diff": false,
        "name": "",
        "x": 200,
        "y": 1700,
        "wires": [
            [
                "404e7ec92dc8e344",
                "e93651c377f1717b"
            ]
        ]
    },
    {
        "id": "c39dcd547ef95457",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "PICK4 MOVED",
        "diff": false,
        "name": "",
        "x": 200,
        "y": 1820,
        "wires": [
            [
                "8c500d0406289be3",
                "d8cb2196056cc28d"
            ]
        ]
    },
    {
        "id": "ef2e9b6739cd9834",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1190,
        "y": 1460,
        "wires": []
    },
    {
        "id": "574459f6746dd6a7",
        "type": "link in",
        "z": "b65463e5fd9488ee",
        "name": "in broker setting for moved tote",
        "links": [
            "937cce842b747007"
        ],
        "x": 1035,
        "y": 1940,
        "wires": [
            [
                "ef2e9b6739cd9834",
                "5d8184819a5b6808",
                "3200926bda6c04f6",
                "291189c009b164f6"
            ]
        ]
    },
    {
        "id": "5d8184819a5b6808",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1190,
        "y": 1620,
        "wires": []
    },
    {
        "id": "3200926bda6c04f6",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1190,
        "y": 1740,
        "wires": []
    },
    {
        "id": "291189c009b164f6",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1190,
        "y": 1880,
        "wires": []
    },
    {
        "id": "c4fd75c0810f2c56",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1940,
        "wires": []
    },
    {
        "id": "85d7e23ec0c954ca",
        "type": "inject",
        "z": "b65463e5fd9488ee",
        "name": "dummy false",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 570,
        "y": 1400,
        "wires": [
            [
                "f7357905b9af9624"
            ]
        ]
    },
    {
        "id": "225e1d588698e31d",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"release9_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "486e67e31fe72f3c",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"release10_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "e93651c377f1717b",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"release11_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "d8cb2196056cc28d",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"release12_status\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "a022877d62e5f2ea",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "reset step5 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\" )\n{\n    msg.payload = false\n    global.set(\"released_c9\",{})\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1420,
        "wires": [
            [
                "3035631016d43f72"
            ]
        ]
    },
    {
        "id": "3035631016d43f72",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "PICK1 MOVED",
        "name": "",
        "x": 1220,
        "y": 1420,
        "wires": []
    },
    {
        "id": "8ed39e9c3de620fa",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "reset step6 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\")\n{\n    msg.payload = false\n    global.set(\"released_c10\",{})\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1560,
        "wires": [
            [
                "90c56ea1bc912d0e"
            ]
        ]
    },
    {
        "id": "90c56ea1bc912d0e",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "PICK2 MOVED",
        "name": "",
        "x": 1200,
        "y": 1560,
        "wires": []
    },
    {
        "id": "29d8a9e61e44f5d7",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "reset step7 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\")\n{\n    msg.payload = false\n    global.set(\"released_c11\",{})\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1680,
        "wires": [
            [
                "2e252a2c099ec77f"
            ]
        ]
    },
    {
        "id": "2e252a2c099ec77f",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "PICK3 MOVED",
        "name": "",
        "x": 1200,
        "y": 1680,
        "wires": []
    },
    {
        "id": "bb6248764ccf4813",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "reset step8 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\")\n{\n    msg.payload = false\n    global.set(\"released_c12\",{})\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1820,
        "wires": [
            [
                "f9024b886c436436"
            ]
        ]
    },
    {
        "id": "f9024b886c436436",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "PICK4 MOVED",
        "name": "",
        "x": 1200,
        "y": 1820,
        "wires": []
    },
    {
        "id": "c0fc5c2ebde9db52",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 1460,
        "wires": [
            [
                "ef2e9b6739cd9834"
            ]
        ]
    },
    {
        "id": "01a362e9d13a5117",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 1620,
        "wires": [
            [
                "5d8184819a5b6808"
            ]
        ]
    },
    {
        "id": "4d9406eda87c9d73",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 1740,
        "wires": [
            [
                "3200926bda6c04f6"
            ]
        ]
    },
    {
        "id": "6194e073c389c7cb",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 1880,
        "wires": [
            [
                "291189c009b164f6"
            ]
        ]
    },
    {
        "id": "07b870bd555d78fa",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 950,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ea57d3ed1422b76f",
        "type": "link in",
        "z": "b65463e5fd9488ee",
        "name": "in broker setting for cont exit ready",
        "links": [
            "937cce842b747007"
        ],
        "x": 845,
        "y": 1220,
        "wires": [
            [
                "07b870bd555d78fa"
            ]
        ]
    },
    {
        "id": "518a2281824d50e8",
        "type": "comment",
        "z": "b65463e5fd9488ee",
        "name": "tote moved",
        "info": "",
        "x": 180,
        "y": 1360,
        "wires": []
    },
    {
        "id": "ca6b8f45f522ee49",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1270,
        "y": 420,
        "wires": []
    },
    {
        "id": "f2715de3050d9870",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1270,
        "y": 520,
        "wires": []
    },
    {
        "id": "ad4a7bca0886ee88",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1270,
        "y": 620,
        "wires": []
    },
    {
        "id": "9f0d869cc95fcf86",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1270,
        "y": 720,
        "wires": []
    },
    {
        "id": "5d510526d41b69d6",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1270,
        "y": 460,
        "wires": []
    },
    {
        "id": "b373782ce4f5b41e",
        "type": "link in",
        "z": "b65463e5fd9488ee",
        "name": "in broker setting for cont reach",
        "links": [
            "937cce842b747007"
        ],
        "x": 1165,
        "y": 400,
        "wires": [
            [
                "ca6b8f45f522ee49"
            ]
        ]
    },
    {
        "id": "6e90a34c43d8de87",
        "type": "link in",
        "z": "b65463e5fd9488ee",
        "name": "in broker setting for cont reach",
        "links": [
            "937cce842b747007"
        ],
        "x": 1165,
        "y": 500,
        "wires": [
            [
                "f2715de3050d9870"
            ]
        ]
    },
    {
        "id": "fb6f7fc23e0d3b22",
        "type": "link in",
        "z": "b65463e5fd9488ee",
        "name": "in broker setting for cont reach",
        "links": [
            "937cce842b747007"
        ],
        "x": 1165,
        "y": 600,
        "wires": [
            [
                "ad4a7bca0886ee88"
            ]
        ]
    },
    {
        "id": "ecd65cc6ceda5ccf",
        "type": "link in",
        "z": "b65463e5fd9488ee",
        "name": "in broker setting for cont reach",
        "links": [
            "937cce842b747007"
        ],
        "x": 1165,
        "y": 700,
        "wires": [
            [
                "9f0d869cc95fcf86"
            ]
        ]
    },
    {
        "id": "d68685181de5f3aa",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1270,
        "y": 560,
        "wires": []
    },
    {
        "id": "eda29f651392f111",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1270,
        "y": 660,
        "wires": []
    },
    {
        "id": "f68639417226e24c",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1270,
        "y": 760,
        "wires": []
    },
    {
        "id": "19749a6305d645e7",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "pick point1 sensor",
        "diff": false,
        "name": "",
        "x": 630,
        "y": 820,
        "wires": [
            [
                "863005ca901871dc"
            ]
        ]
    },
    {
        "id": "c03a1ce444faeef3",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "pick point2 sensor",
        "diff": false,
        "name": "",
        "x": 630,
        "y": 880,
        "wires": [
            [
                "f1243098dcfa6184"
            ]
        ]
    },
    {
        "id": "87291f254dd6606b",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "pick point3 sensor",
        "diff": false,
        "name": "",
        "x": 630,
        "y": 940,
        "wires": [
            [
                "0bce5f1be89a781d"
            ]
        ]
    },
    {
        "id": "e6a35d44fc83422c",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "pick point4 sensor",
        "diff": false,
        "name": "",
        "x": 630,
        "y": 1000,
        "wires": [
            [
                "db8f16251143b401"
            ]
        ]
    },
    {
        "id": "863005ca901871dc",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "pick1 sensor",
        "func": "\n\nglobal.set(\"pick1.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f1243098dcfa6184",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "pick2 sensor",
        "func": "\n\nglobal.set(\"pick2.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "0bce5f1be89a781d",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "pick3 sensor",
        "func": "\n\nglobal.set(\"pick3.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "db8f16251143b401",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "pick4 sensor",
        "func": "\n\nglobal.set(\"pick4.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "4ea83e5739e8aefe",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STATIONS EXIT MARKED STEP FOR EMPTY",
        "diff": false,
        "name": "",
        "x": 280,
        "y": 2220,
        "wires": [
            [
                "bd243d4cf2804c70"
            ]
        ]
    },
    {
        "id": "90bcec9bebc2f4bb",
        "type": "comment",
        "z": "b65463e5fd9488ee",
        "name": "ONLY FOR TOTE FINAL EXIT",
        "info": "",
        "x": 220,
        "y": 2160,
        "wires": []
    },
    {
        "id": "007cf12126524718",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Local step21 task_id",
        "diff": false,
        "name": "",
        "x": 190,
        "y": 2280,
        "wires": [
            [
                "a3b1c2d0a41f271f"
            ]
        ]
    },
    {
        "id": "f54b7d134f8f7c05",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Local step21 cont_id",
        "diff": false,
        "name": "",
        "x": 190,
        "y": 2340,
        "wires": [
            [
                "a03247a19f7ac212"
            ]
        ]
    },
    {
        "id": "ca36d13d6bb0eb35",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Local step21 data",
        "diff": false,
        "name": "",
        "x": 190,
        "y": 2400,
        "wires": [
            [
                "82b6ca3fdcc27676"
            ]
        ]
    },
    {
        "id": "af588b12dd0f1a68",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"step21.task_id\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "3a1ef1d6135e0a69",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"step21.container_id\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "5e37926db149dfae",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"step21.data\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "bd243d4cf2804c70",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "global.set(\"step21.exit_marked\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "fe56095c6b0b5770",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "FINAL EXIT BIT",
        "diff": false,
        "name": "",
        "x": 80,
        "y": 2480,
        "wires": [
            [
                "aedc7e1911c4d65e"
            ]
        ]
    },
    {
        "id": "103b9e3a4bf1004d",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "final exit ",
        "func": "var final_exit_ready = {}\n\nvar c21 = global.get(\"step21\");\n\nif (msg.payload==true && global.get(\"step21.exit_marked\")==true)\n{\n    \nvar d = new Date()\nvar time = d.getTime()\n  \n  final_exit_ready.task_id = c21.task_id;\n  final_exit_ready.container_id = c21.container_id;  \n  final_exit_ready.data = JSON.parse(c21.data);\n  final_exit_ready.timestamp = JSON.stringify(time)\n  final_exit_ready.msg_type = \"container_exit_ready\"\n  final_exit_ready.conveyor_id = global.get(\"conveyor_id_hmi\")\n  final_exit_ready.step_id = \"21\"\n  \n  global.set(\"final_exit_lifted\",c21)\n  \n  msg.payload = final_exit_ready;\n  msg.topic = global.get(\"send_event_topic\")\n  \n\n  \n  \n  return msg;\n  \n}\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2480,
        "wires": [
            [
                "cf4c05dd20bcab25",
                "cfcbba01a815f459"
            ]
        ]
    },
    {
        "id": "2e97f5d9d9cd1a72",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 750,
        "y": 2480,
        "wires": []
    },
    {
        "id": "edb99957976b3a76",
        "type": "link in",
        "z": "b65463e5fd9488ee",
        "name": "in broker setting for moved tote",
        "links": [
            "937cce842b747007"
        ],
        "x": 555,
        "y": 2560,
        "wires": [
            [
                "2e97f5d9d9cd1a72"
            ]
        ]
    },
    {
        "id": "cf4c05dd20bcab25",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "if (msg.payload.msg_type==\"container_exit_ready\" && msg.payload.step_id == \"21\")\n{\n    msg.payload = false\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 2440,
        "wires": [
            [
                "612e6a776799220f"
            ]
        ]
    },
    {
        "id": "612e6a776799220f",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "FINAL EXIT BIT",
        "name": "",
        "x": 720,
        "y": 2440,
        "wires": []
    },
    {
        "id": "8cf1ae8519a70aae",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2560,
        "wires": []
    },
    {
        "id": "cfcbba01a815f459",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 2480,
        "wires": [
            [
                "2e97f5d9d9cd1a72",
                "8cf1ae8519a70aae"
            ]
        ]
    },
    {
        "id": "ccf1c9e28fdeefc6",
        "type": "s7 in",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Final Lift Bit",
        "diff": false,
        "name": "",
        "x": 170,
        "y": 2700,
        "wires": [
            [
                "b386640445dca4f0"
            ]
        ]
    },
    {
        "id": "b386640445dca4f0",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "final exit ",
        "func": "var final_lifted = {}\n\n\nvar c21 = global.get(\"step21\");\n\nif (msg.payload==true && global.get(\"step21.exit_marked\")==true && c21.task_id !='')\n{\n    \nvar d = new Date()\nvar time = d.getTime()\n  \n  final_lifted.task_id = c21.task_id;\n  final_lifted.container_id = c21.container_id;  \n  final_lifted.data = JSON.parse(c21.data);\n  final_lifted.timestamp = JSON.stringify(time)\n  final_lifted.msg_type = \"container_lifted\";\n  final_lifted.conveyor_id = global.get(\"conveyor_id_hmi\")\n  final_lifted.step_id = \"21\"\n  \n  msg.payload = final_lifted;\n  msg.topic = global.get(\"send_event_topic\")\n  \n  \n  \n  return msg;\n  \n}\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2700,
        "wires": [
            [
                "aaa8e7e572ec11c0",
                "3e5c4e5fb8b68117"
            ]
        ]
    },
    {
        "id": "1babd9b5c6da4bab",
        "type": "mqtt out",
        "z": "b65463e5fd9488ee",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 750,
        "y": 2700,
        "wires": []
    },
    {
        "id": "3d2ddedcc3b6d63a",
        "type": "link in",
        "z": "b65463e5fd9488ee",
        "name": "in broker setting for moved tote",
        "links": [
            "937cce842b747007"
        ],
        "x": 555,
        "y": 2780,
        "wires": [
            [
                "1babd9b5c6da4bab"
            ]
        ]
    },
    {
        "id": "aaa8e7e572ec11c0",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "if (msg.payload.msg_type==\"container_lifted\" && msg.payload.step_id == \"21\")\n{\n    msg.payload = false\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 2660,
        "wires": [
            [
                "9986fd9d469d6a2c"
            ]
        ]
    },
    {
        "id": "9986fd9d469d6a2c",
        "type": "s7 out",
        "z": "b65463e5fd9488ee",
        "endpoint": "519a9c297613d180",
        "variable": "Final Lift Bit",
        "name": "",
        "x": 710,
        "y": 2660,
        "wires": []
    },
    {
        "id": "baa81da5f80bf134",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 2780,
        "wires": []
    },
    {
        "id": "3e5c4e5fb8b68117",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 2700,
        "wires": [
            [
                "1babd9b5c6da4bab",
                "baa81da5f80bf134"
            ]
        ]
    },
    {
        "id": "9b654814337f25d1",
        "type": "comment",
        "z": "b65463e5fd9488ee",
        "name": "ONLY FOR TOTE FINAL LIFTED",
        "info": "",
        "x": 230,
        "y": 2660,
        "wires": []
    },
    {
        "id": "6784e60bf0f16dcc",
        "type": "status",
        "z": "b65463e5fd9488ee",
        "name": "",
        "scope": [
            "ca6b8f45f522ee49"
        ],
        "x": 1440,
        "y": 420,
        "wires": [
            [
                "a21122b807844df4"
            ]
        ]
    },
    {
        "id": "a21122b807844df4",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1510,
        "y": 480,
        "wires": []
    },
    {
        "id": "a3b1c2d0a41f271f",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "if (msg.payload!=\"\")\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2280,
        "wires": [
            [
                "af588b12dd0f1a68"
            ]
        ]
    },
    {
        "id": "a03247a19f7ac212",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "if (msg.payload!=\"\")\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2340,
        "wires": [
            [
                "3a1ef1d6135e0a69"
            ]
        ]
    },
    {
        "id": "82b6ca3fdcc27676",
        "type": "function",
        "z": "b65463e5fd9488ee",
        "name": "",
        "func": "if (msg.payload!=\"\")\n{\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2400,
        "wires": [
            [
                "5e37926db149dfae"
            ]
        ]
    },
    {
        "id": "aedc7e1911c4d65e",
        "type": "delay",
        "z": "b65463e5fd9488ee",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 240,
        "y": 2480,
        "wires": [
            [
                "103b9e3a4bf1004d"
            ]
        ]
    },
    {
        "id": "ba4d271144cefb36",
        "type": "debug",
        "z": "b65463e5fd9488ee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1340,
        "wires": []
    },
    {
        "id": "e9a331d5b1f767f2",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "hearbeat",
        "func": "\n\nif (msg.payload ==true)\n{\n\nvar d = new Date();\nvar time = d.getTime();\n\nvar Heartbeat = {};\n\nHeartbeat.timestamp = JSON.stringify(time);\nHeartbeat.msg_type = \"heartbeat\";\nHeartbeat.data = {};\n\nHeartbeat.data.conveyors =[];\n\nvar conv ={};\nconv.conveyor_id =global.get(\"conveyor_id_hmi\");\nconv.status = \"online\";\nconv.stepStates =[];\n\n\n\n\nvar step1 = {};\nstep1.step_id = \"1\";\nstep1.container_id = global.get(\"C1.container_id\") ? global.get(\"C1.container_id\") : \"\";   //\"tote001\"\n\nvar step2 = {};\nstep2.step_id = \"2\";\nstep2.container_id = global.get(\"C2.container_id\") ? global.get(\"C2.container_id\") : \"\";//c2.container_id//\"tote002\"\n\nvar step3 = {};\nstep3.step_id = \"3\";\nstep3.container_id = global.get(\"C3.container_id\")  ? global.get(\"C3.container_id\") : \"\";//c3.container_id//\"tote001\"\n\nvar step4 = {};\nstep4.step_id = \"4\";\nstep4.container_id = global.get(\"C4.container_id\")  ? global.get(\"C4.container_id\") : \"\";//c4.container_id//\"tote002\"\n\nvar step5 = {};\nstep5.step_id = \"5\";\nstep5.container_id = global.get(\"C5.container_id\")  ? global.get(\"C5.container_id\") : \"\";//c5.container_id//\"tote001\"\n\nvar step6 = {};\nstep6.step_id = \"6\";\nstep6.container_id = global.get(\"C6.container_id\") ? global.get(\"C6.container_id\") : \"\";//c6.container_id//\"tote002\"\n\nvar step7 = {};\nstep7.step_id = \"7\";\nstep7.container_id = global.get(\"C7.container_id\") ? global.get(\"C7.container_id\") : \"\";//c7.container_id//\"tote001\"\n\nvar step8 = {};\nstep8.step_id = \"8\";\nstep8.container_id = global.get(\"C8.container_id\") ? global.get(\"C8.container_id\") : \"\";//c8.container_id//\"tote002\"\n\nvar step9 = {};\nstep9.step_id = \"9\";\nstep9.container_id = global.get(\"C9.container_id\") ? global.get(\"C9.container_id\") : \"\";//c9.container_id//\"tote001\"\n\nvar step10 = {};\nstep10.step_id = \"10\";\nstep10.container_id = global.get(\"C10.container_id\") ? global.get(\"C10.container_id\") : \"\";//c10.container_id//\"tote002\"\n\nvar step11 = {};\nstep11.step_id = \"11\";\nstep11.container_id = global.get(\"C11.container_id\") ? global.get(\"C11.container_id\") : \"\";//c11.container_id//\"tote001\"\n\nvar step12 = {};\nstep12.step_id = \"12\";\nstep12.container_id = global.get(\"C12.container_id\") ? global.get(\"C12.container_id\") : \"\";//c12.container_id//\"tote002\"\n\nvar step13 = {};\nstep13.step_id = \"13\";\nstep13.container_id = global.get(\"C13.container_id\") ? global.get(\"C13.container_id\") : \"\";//c13.container_id//\"tote001\"\n\nvar step14 = {};\nstep14.step_id = \"14\";\nstep14.container_id = global.get(\"C14.container_id\") ? global.get(\"C14.container_id\") : \"\";//c14.container_id//\"tote002\"\n\nvar step15 = {};\nstep15.step_id = \"15\";\nstep15.container_id = global.get(\"C15.container_id\") ? global.get(\"C15.container_id\") : \"\";//c15.container_id//\"tote001\"\n\nvar step16 = {};\nstep16.step_id = \"16\";\nstep16.container_id = global.get(\"C16.container_id\") ? global.get(\"C16.container_id\") : \"\";//c16.container_id//\"tote002\"\n\nvar step17 = {};\nstep17.step_id = \"17\";\nstep17.container_id = global.get(\"C17.container_id\") ? global.get(\"C17.container_id\") : \"\";//c17.container_id//\"tote001\"\n\nvar step18 = {};\nstep18.step_id = \"18\";\nstep18.container_id = global.get(\"C18.container_id\") ? global.get(\"C18.container_id\") : \"\";//c18.container_id//\"tote002\"\n\nvar step19 = {};\nstep19.step_id = \"19\";\nstep19.container_id = global.get(\"C19.container_id\") ? global.get(\"C19.container_id\") : \"\";//c19.container_id//\"tote001\"\n\nvar step20 = {};\nstep20.step_id = \"20\";\nstep20.container_id = global.get(\"C20.container_id\") ? global.get(\"C20.container_id\") : \"\";//c20.container_id//\"tote002\"\n\nvar step21 = {};\nstep21.step_id = \"21\";\nstep21.container_id = global.get(\"C21.container_id\") ? global.get(\"C21.container_id\") : \"\";//c21.container_id//\"tote001\"\n\nvar step22 = {};\nstep22.step_id = \"22\";\nstep22.container_id = global.get(\"C22.container_id\") ? global.get(\"C22.container_id\") : \"\";//c22.container_id//\"tote002\"\n\n\nvar step23 = {};\nstep23.step_id = \"23\";\nstep23.container_id = global.get(\"C23.container_id\") ? global.get(\"C23.container_id\") : \"\";//c22.container_id//\"tote002\"\n\n\nvar step24 = {};\nstep24.step_id = \"24\";\nstep24.container_id = global.get(\"C24.container_id\") ? global.get(\"C24.container_id\") : \"\";//c22.container_id//\"tote002\"\n\nvar step25 = {};\nstep25.step_id = \"25\";\nstep25.container_id = global.get(\"C25.container_id\") ? global.get(\"C25.container_id\") : \"\";//c22.container_id//\"tote002\"\n\nvar step26 = {};\nstep26.step_id = \"26\";\nstep26.container_id = global.get(\"C26.container_id\") ? global.get(\"C26.container_id\") : \"\";//c22.container_id//\"tote002\"\n\n\nconv.stepStates.push(step1)\nconv.stepStates.push(step2)\nconv.stepStates.push(step3)\nconv.stepStates.push(step4)\nconv.stepStates.push(step5)\nconv.stepStates.push(step6)\nconv.stepStates.push(step7)\nconv.stepStates.push(step8)\nconv.stepStates.push(step9)\nconv.stepStates.push(step10)\nconv.stepStates.push(step11)\nconv.stepStates.push(step12)\nconv.stepStates.push(step13)\nconv.stepStates.push(step14)\nconv.stepStates.push(step15)\nconv.stepStates.push(step16)\nconv.stepStates.push(step17)\n conv.stepStates.push(step18)\nconv.stepStates.push(step19)\n//conv.stepStates.push(step20)\nconv.stepStates.push(step21)\nconv.stepStates.push(step22)\nconv.stepStates.push(step23)\nconv.stepStates.push(step24)\n//conv.stepStates.push(step25)\n//conv.stepStates.push(step26)\n\n\n\n\nHeartbeat.data.conveyors.push()\n\n\nHeartbeat.data.conveyors.push(conv)\n\nvar conveyor_id = global.get(\"conveyor_id_hmi\");\nvar tenant_id = global.get(\"tenant_id\");\n\nmsg.topic = tenant_id+ \".conveyor-heartbeat.events\";\nmsg.payload= Heartbeat\n\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 140,
        "wires": [
            [
                "fb08f0b752dc094b",
                "f03091b5d101f570"
            ]
        ]
    },
    {
        "id": "f5862e4fab489ea8",
        "type": "inject",
        "z": "f6a696e993b16c48",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "e9a331d5b1f767f2"
            ]
        ]
    },
    {
        "id": "556386385558415e",
        "type": "link out",
        "z": "f6a696e993b16c48",
        "name": "heartbeat msg publish",
        "mode": "link",
        "links": [
            "761bfab071de6ed6"
        ],
        "x": 585,
        "y": 200,
        "wires": []
    },
    {
        "id": "5275a7c4fb4e9939",
        "type": "http response",
        "z": "f6a696e993b16c48",
        "name": "",
        "statusCode": "201",
        "headers": {},
        "x": 420,
        "y": 280,
        "wires": []
    },
    {
        "id": "ca1dce71e344bb38",
        "type": "http in",
        "z": "f6a696e993b16c48",
        "name": "",
        "url": "/api1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "5275a7c4fb4e9939",
                "5bd14df4be03c57d"
            ]
        ]
    },
    {
        "id": "b1a9c060441826cd",
        "type": "inject",
        "z": "f6a696e993b16c48",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5bd14df4be03c57d",
        "type": "debug",
        "z": "f6a696e993b16c48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 440,
        "y": 360,
        "wires": []
    },
    {
        "id": "bdf6a4e04e41483b",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "STEP1 - STEP8",
        "func": "var heartbeat_step = {}\n\n\n\n// var step1 = msg.payload.s1 ? msg.payload.s1 : \"\";\n// var step2 = msg.payload.s2 ? msg.payload.s2 : \"\";\n// var step3 = msg.payload.s3 ? msg.payload.s3 : \"\";\n// var step4 = msg.payload.s4 ? msg.payload.s4 : \"\";\n// var step5 = msg.payload.s5 ? msg.payload.s5 : \"\";\n// var step6 = msg.payload.s6 ? msg.payload.s6 : \"\";\n// var step7 = msg.payload.s7 ? msg.payload.s7 : \"\";\n// var step8 = msg.payload.s8 ? msg.payload.s8 : \"\";\n\n\n\n\n\n\nglobal.set(\"C1.container_id\",msg.payload.s1) \nglobal.set(\"C2.container_id\",msg.payload.s2) \nglobal.set(\"C3.container_id\",msg.payload.s3) \nglobal.set(\"C4.container_id\",msg.payload.s4) \nglobal.set(\"C5.container_id\",msg.payload.s5) \nglobal.set(\"C6.container_id\",msg.payload.s6) \nglobal.set(\"C7.container_id\",msg.payload.s7) \nglobal.set(\"C8.container_id\",msg.payload.s8) \n\n\n\n// var containerIds = global.get(\"containerIds\") ? global.get(\"containerIds\") : [];\n\n// for(var i = 0; i < Object.keys(msg.payload).length; i++) {\n//     var key = msg.payload[i];\n//     containerIds.push(msg.payload.key);\n// }\n\n// global.set(\"containerIds\", containerIds);\n\n// msg = containerIds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "7ee7601f8142e9d9",
        "type": "debug",
        "z": "f6a696e993b16c48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "fb08f0b752dc094b",
        "type": "json",
        "z": "f6a696e993b16c48",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "7ee7601f8142e9d9"
            ]
        ]
    },
    {
        "id": "f03091b5d101f570",
        "type": "json",
        "z": "f6a696e993b16c48",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "556386385558415e"
            ]
        ]
    },
    {
        "id": "2e50ab97446b0f2a",
        "type": "s7 in",
        "z": "f6a696e993b16c48",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STEP1_STEP4 HB",
        "diff": false,
        "name": "",
        "x": 750,
        "y": 560,
        "wires": [
            [
                "89ef2ccffe527f1a"
            ]
        ]
    },
    {
        "id": "89ef2ccffe527f1a",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "S1-S4",
        "func": "var a = msg.payload\n// var b = msg.payload.length;\n\n// var c= b-2;\n// var d = a.substr(1,c)\n\nvar b = {}\nmsg.payload= JSON.parse(a)\nb = msg.payload;\n\nglobal.set(\"C1.container_id\",b.s1)\nglobal.set(\"C2.container_id\",b.s2)\nglobal.set(\"C3.container_id\",b.s3)\nglobal.set(\"C4.container_id\",b.s4)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b03751ed7329735a",
        "type": "s7 in",
        "z": "f6a696e993b16c48",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STEP5_STEP8 HB",
        "diff": false,
        "name": "",
        "x": 770,
        "y": 640,
        "wires": [
            [
                "c4eda10153bec97b"
            ]
        ]
    },
    {
        "id": "da3e8b374a5e6c4d",
        "type": "s7 in",
        "z": "f6a696e993b16c48",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STEP13_STEP16 HB",
        "diff": false,
        "name": "",
        "x": 780,
        "y": 760,
        "wires": [
            [
                "d7d2ee1d7e1fed62"
            ]
        ]
    },
    {
        "id": "dd275ced2246c165",
        "type": "s7 in",
        "z": "f6a696e993b16c48",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STEP17_STEP20 HB",
        "diff": false,
        "name": "",
        "x": 780,
        "y": 820,
        "wires": [
            [
                "f8582beafe830373"
            ]
        ]
    },
    {
        "id": "292d0c5fcf117a39",
        "type": "s7 in",
        "z": "f6a696e993b16c48",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STEP21_STEP24 HB",
        "diff": false,
        "name": "",
        "x": 780,
        "y": 900,
        "wires": [
            [
                "280dba75b6fe4cb2"
            ]
        ]
    },
    {
        "id": "c4eda10153bec97b",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "S5-S8",
        "func": "var a = msg.payload\n// var b = msg.payload.length;\n\n// var c= b-2;\n// var d = a.substr(1,c)\n\nvar b = {}\nmsg.payload= JSON.parse(a)\nb = msg.payload;\n\nglobal.set(\"C5.container_id\",b.s5)\nglobal.set(\"C6.container_id\",b.s6)\nglobal.set(\"C7.container_id\",b.s7)\nglobal.set(\"C8.container_id\",b.s8)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d7d2ee1d7e1fed62",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "S13-S16",
        "func": "var a = msg.payload\n// var b = msg.payload.length;\n\n// var c= b-2;\n// var d = a.substr(1,c)\n\nvar b = {}\nmsg.payload= JSON.parse(a)\nb = msg.payload;\n\nglobal.set(\"C13.container_id\",b.s13)\nglobal.set(\"C14.container_id\",b.s14)\nglobal.set(\"C15.container_id\",b.s15)\nglobal.set(\"C16.container_id\",b.s16)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f8582beafe830373",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "S17-S20",
        "func": "var a = msg.payload\n// var b = msg.payload.length;\n\n// var c= b-2;\n// var d = a.substr(1,c)\n\nvar b = {}\nmsg.payload= JSON.parse(a)\nb = msg.payload;\n\nglobal.set(\"C17.container_id\",b.s17)\nglobal.set(\"C18.container_id\",b.s18)\nglobal.set(\"C19.container_id\",b.s19)\nglobal.set(\"C20.container_id\",b.s20)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "280dba75b6fe4cb2",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "S21-S24",
        "func": "var a = msg.payload\n// var b = msg.payload.length;\n\n// var c= b-2;\n// var d = a.substr(1,c)\n\nvar b = {}\nmsg.payload= JSON.parse(a)\nb = msg.payload;\n\nglobal.set(\"C21.container_id\",b.s21)\nglobal.set(\"C22.container_id\",b.s22)\nglobal.set(\"C23.container_id\",b.s23)\nglobal.set(\"C24.container_id\",b.s24)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "52b31dcedc2eef87",
        "type": "s7 in",
        "z": "f6a696e993b16c48",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STEP9_STEP12 HB",
        "diff": false,
        "name": "",
        "x": 770,
        "y": 700,
        "wires": [
            [
                "c219b1c43cf49eca"
            ]
        ]
    },
    {
        "id": "c219b1c43cf49eca",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "S9-S12",
        "func": "var a = msg.payload\n// var b = msg.payload.length;\n\n// var c= b-2;\n// var d = a.substr(1,c)\n\nvar b = {}\nmsg.payload= JSON.parse(a)\nb = msg.payload;\n\nglobal.set(\"C9.container_id\",b.s9)\nglobal.set(\"C10.container_id\",b.s10)\nglobal.set(\"C11.container_id\",b.s11)\nglobal.set(\"C12.container_id\",b.s12)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "4feb87bc8ef9c31e",
        "type": "s7 in",
        "z": "f6a696e993b16c48",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "STEP25-STEP26",
        "diff": false,
        "name": "",
        "x": 780,
        "y": 980,
        "wires": [
            [
                "181d9efdc8b4590b"
            ]
        ]
    },
    {
        "id": "181d9efdc8b4590b",
        "type": "function",
        "z": "f6a696e993b16c48",
        "name": "S25-S26",
        "func": "var a = msg.payload\n// var b = msg.payload.length;\n\n// var c= b-2;\n// var d = a.substr(1,c)\n\nvar b = {}\nmsg.payload= JSON.parse(a)\nb = msg.payload;\n\nglobal.set(\"C25.container_id\",b.s25)\nglobal.set(\"C26.container_id\",b.s26)\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "d19d48fe69c6bb0c",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "bottom layer broker in",
        "links": [
            "937cce842b747007"
        ],
        "x": 175,
        "y": 100,
        "wires": [
            [
                "d4f3fd4f43021cc2"
            ]
        ]
    },
    {
        "id": "3a925d089cbc0d86",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "rcv req push in",
        "links": [
            "c6cca3757f81b709"
        ],
        "x": 175,
        "y": 140,
        "wires": [
            [
                "d4f3fd4f43021cc2"
            ]
        ]
    },
    {
        "id": "d4f3fd4f43021cc2",
        "type": "mqtt in",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "17ba2cdcbd29cd4f"
            ]
        ]
    },
    {
        "id": "17ba2cdcbd29cd4f",
        "type": "json",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "a5e80ef8cdbbbd84",
                "1db39a61322f3c88",
                "f08848aa147301c2",
                "2d6c63aa2a7eba58",
                "8a5ecc66d03d3fbf",
                "fe80643eccebf65f",
                "7c97e9df7ac845ad",
                "1559586f0087f39c"
            ]
        ]
    },
    {
        "id": "a5e80ef8cdbbbd84",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step31 release",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar b = msg.payload.msg_type\n\nvar c = msg.payload.step_id\n\n\nif (a== msg.payload.conveyor_id && b== \"container_released\" && c == \"31\" && global.get(\"order1.sensor\")==true)\n{\n\nmsg.payload = true\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 600,
        "wires": [
            [
                "bfe7a3b79e64df00"
            ]
        ]
    },
    {
        "id": "1db39a61322f3c88",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step32 release",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar b = msg.payload.msg_type\n\nvar c = msg.payload.step_id\n\n\nif (a== msg.payload.conveyor_id && b== \"container_released\" && c == \"32\" && global.get(\"order2.sensor\")==true)\n{\n\nmsg.payload = true\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 660,
        "wires": [
            [
                "69ddf01639dadb23"
            ]
        ]
    },
    {
        "id": "f08848aa147301c2",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step33 release",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar b = msg.payload.msg_type\n\nvar c = msg.payload.step_id\n\n\nif (a== msg.payload.conveyor_id && b== \"container_released\" && c == \"33\" && global.get(\"order3.sensor\")==true)\n{\n\nmsg.payload = true\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 720,
        "wires": [
            [
                "d818a460f4a2ad45"
            ]
        ]
    },
    {
        "id": "2d6c63aa2a7eba58",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step34 release",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar b = msg.payload.msg_type\n\nvar c = msg.payload.step_id\n\n\nif (a== msg.payload.conveyor_id && b== \"container_released\" && c == \"34\" && global.get(\"order4.sensor\")==true)\n{\n\nmsg.payload = true\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 780,
        "wires": [
            [
                "147473915fdf9423"
            ]
        ]
    },
    {
        "id": "8a5ecc66d03d3fbf",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step35 release",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar b = msg.payload.msg_type\n\nvar c = msg.payload.step_id\n\n\nif (a== msg.payload.conveyor_id && b== \"container_released\" && c == \"35\" && global.get(\"order5.sensor\")==true)\n{\n\nmsg.payload = true\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 840,
        "wires": [
            [
                "9f6d72236355f079"
            ]
        ]
    },
    {
        "id": "fe80643eccebf65f",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step36 release",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar b = msg.payload.msg_type\n\nvar c = msg.payload.step_id\n\n\nif (a== msg.payload.conveyor_id && b== \"container_released\" && c == \"36\" && global.get(\"order6.sensor\")==true)\n{\n\nmsg.payload = true\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 900,
        "wires": [
            [
                "0ffdecdc112e5c4c"
            ]
        ]
    },
    {
        "id": "bfe7a3b79e64df00",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "RELEASE 31",
        "name": "",
        "x": 820,
        "y": 600,
        "wires": []
    },
    {
        "id": "69ddf01639dadb23",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "RELEASE 32",
        "name": "",
        "x": 820,
        "y": 660,
        "wires": []
    },
    {
        "id": "d818a460f4a2ad45",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "RELEASE 33",
        "name": "",
        "x": 820,
        "y": 720,
        "wires": []
    },
    {
        "id": "147473915fdf9423",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "RELEASE 34",
        "name": "",
        "x": 820,
        "y": 780,
        "wires": []
    },
    {
        "id": "9f6d72236355f079",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "RELEASE 35",
        "name": "",
        "x": 820,
        "y": 840,
        "wires": []
    },
    {
        "id": "0ffdecdc112e5c4c",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "RELEASE 36",
        "name": "",
        "x": 820,
        "y": 900,
        "wires": []
    },
    {
        "id": "c8c92595d30c89a2",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "conveyor_release_ack for step31",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a)\n{\nvar d = new Date()\nvar time = d.getTime()\n\nvar c31 ={};\n\n\nif (msg.payload.step_id=='31')\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id; \ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncontainer_released_ack.step_id = msg.payload.step_id //PLC Valye, although fixed\ncontainer_released_ack.msg_type = \"container_released_ack\" //Fix Value\ncontainer_released_ack.container_id = msg.payload.container_id; //global.get(\"c9.container_id\") //PLC Value\n//var data1 = global.get(\"c9.data\")\ncontainer_released_ack.data = msg.payload.data; //JSON.parse(data1) //PLC Value or safe to drop Value\n\n\nif  (global.get(\"order1.sensor\")==true)\n{\ncontainer_released_ack.status = \"success\" //PLC Value\ncontainer_released_ack.errorCode = \"\" //PLC Value\ncontainer_released_ack.errorMessage = \"\" //PLC Value\n\n}\n\nelse \n{\ncontainer_released_ack.status = \"failed\" //PLC Value\ncontainer_released_ack.errorCode = \"ERR001\" //PLC Value\ncontainer_released_ack.errorMessage = \"NO TOTE PRESENT\" //PLC Value\n\n}\n\n\n\nglobal.set(\"c31\",container_released_ack);\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n\n\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 200,
        "wires": [
            [
                "5f709c1b0d0368ad"
            ]
        ]
    },
    {
        "id": "7c97e9df7ac845ad",
        "type": "delay",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "pauseType": "delay",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 690,
        "y": 100,
        "wires": [
            [
                "c8c92595d30c89a2",
                "d01776aee61b5043",
                "21e49e81ca7c8f76",
                "ef30b5c5c7062052",
                "a6f88308c20a9529",
                "3a85d8cbbfaec3db"
            ]
        ]
    },
    {
        "id": "5f709c1b0d0368ad",
        "type": "mqtt out",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1430,
        "y": 320,
        "wires": []
    },
    {
        "id": "024bb49ada6e5632",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "bottom layer broker in",
        "links": [
            "937cce842b747007"
        ],
        "x": 1075,
        "y": 140,
        "wires": [
            [
                "5f709c1b0d0368ad"
            ]
        ]
    },
    {
        "id": "d01776aee61b5043",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "conveyor_release_ack for step32",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a)\n{\nvar d = new Date()\nvar time = d.getTime()\n\nvar c32 = {};\n\nif (msg.payload.step_id=='32')\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id; \ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncontainer_released_ack.step_id = msg.payload.step_id //PLC Valye, although fixed\ncontainer_released_ack.msg_type = \"container_released_ack\" //Fix Value\ncontainer_released_ack.container_id = msg.payload.container_id; //global.get(\"c9.container_id\") //PLC Value\n//var data1 = global.get(\"c9.data\")\ncontainer_released_ack.data = msg.payload.data; //JSON.parse(data1) //PLC Value or safe to drop Value\n\nif  (global.get(\"order2.sensor\")==true)\n{\ncontainer_released_ack.status = \"success\" //PLC Value\ncontainer_released_ack.errorCode = \"\" //PLC Value\ncontainer_released_ack.errorMessage = \"\" //PLC Value\n\n}\n\nelse \n{\ncontainer_released_ack.status = \"failed\" //PLC Value\ncontainer_released_ack.errorCode = \"ERR001\" //PLC Value\ncontainer_released_ack.errorMessage = \"NO TOTE PRESENT\" //PLC Value\n\n}\n\nglobal.set(\"c32\",container_released_ack);\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n\n\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 260,
        "wires": [
            [
                "5f709c1b0d0368ad"
            ]
        ]
    },
    {
        "id": "21e49e81ca7c8f76",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "conveyor_release_ack for step33",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a)\n{\nvar d = new Date()\nvar time = d.getTime()\n\nvar c33 = {};\n\nif (msg.payload.step_id=='33')\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id; \ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncontainer_released_ack.step_id = msg.payload.step_id //PLC Valye, although fixed\ncontainer_released_ack.msg_type = \"container_released_ack\" //Fix Value\ncontainer_released_ack.container_id = msg.payload.container_id; //global.get(\"c9.container_id\") //PLC Value\n//var data1 = global.get(\"c9.data\")\ncontainer_released_ack.data = msg.payload.data; //JSON.parse(data1) //PLC Value or safe to drop Value\n\nif  (global.get(\"order3.sensor\")==true)\n{\ncontainer_released_ack.status = \"success\" //PLC Value\ncontainer_released_ack.errorCode = \"\" //PLC Value\ncontainer_released_ack.errorMessage = \"\" //PLC Value\n\n}\n\nelse \n{\ncontainer_released_ack.status = \"failed\" //PLC Value\ncontainer_released_ack.errorCode = \"ERR001\" //PLC Value\ncontainer_released_ack.errorMessage = \"NO TOTE PRESENT\" //PLC Value\n\n}\n\nglobal.set(\"c33\",container_released_ack);\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n\n\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 320,
        "wires": [
            [
                "5f709c1b0d0368ad"
            ]
        ]
    },
    {
        "id": "ef30b5c5c7062052",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "conveyor_release_ack for step34",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a)\n{\nvar d = new Date()\nvar time = d.getTime()\n\nvar c34={};\n\nif (msg.payload.step_id=='34')\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id; \ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncontainer_released_ack.step_id = msg.payload.step_id //PLC Valye, although fixed\ncontainer_released_ack.msg_type = \"container_released_ack\" //Fix Value\ncontainer_released_ack.container_id = msg.payload.container_id; //global.get(\"c9.container_id\") //PLC Value\n//var data1 = global.get(\"c9.data\")\ncontainer_released_ack.data = msg.payload.data; //JSON.parse(data1) //PLC Value or safe to drop Value\n\nif  (global.get(\"order4.sensor\")==true)\n{\ncontainer_released_ack.status = \"success\" //PLC Value\ncontainer_released_ack.errorCode = \"\" //PLC Value\ncontainer_released_ack.errorMessage = \"\" //PLC Value\n\n}\n\nelse \n{\ncontainer_released_ack.status = \"failed\" //PLC Value\ncontainer_released_ack.errorCode = \"ERR001\" //PLC Value\ncontainer_released_ack.errorMessage = \"NO TOTE PRESENT\" //PLC Value\n\n}\n\nglobal.set(\"c34\",container_released_ack);\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n\n\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 380,
        "wires": [
            [
                "5f709c1b0d0368ad"
            ]
        ]
    },
    {
        "id": "a6f88308c20a9529",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "conveyor_release_ack for step35",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a)\n{\nvar d = new Date()\nvar time = d.getTime()\n\nvar c35={};\n\nif (msg.payload.step_id=='35')\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id; \ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncontainer_released_ack.step_id = msg.payload.step_id //PLC Valye, although fixed\ncontainer_released_ack.msg_type = \"container_released_ack\" //Fix Value\ncontainer_released_ack.container_id = msg.payload.container_id; //global.get(\"c9.container_id\") //PLC Value\n//var data1 = global.get(\"c9.data\")\ncontainer_released_ack.data = msg.payload.data; //JSON.parse(data1) //PLC Value or safe to drop Value\n\nif  (global.get(\"order5.sensor\")==true)\n{\ncontainer_released_ack.status = \"success\" //PLC Value\ncontainer_released_ack.errorCode = \"\" //PLC Value\ncontainer_released_ack.errorMessage = \"\" //PLC Value\n\n}\n\nelse \n{\ncontainer_released_ack.status = \"failed\" //PLC Value\ncontainer_released_ack.errorCode = \"ERR001\" //PLC Value\ncontainer_released_ack.errorMessage = \"NO TOTE PRESENT\" //PLC Value\n\n}\n\nglobal.set(\"c35\",container_released_ack);\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n\n\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 440,
        "wires": [
            [
                "5f709c1b0d0368ad"
            ]
        ]
    },
    {
        "id": "3a85d8cbbfaec3db",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "conveyor_release_ack for step36",
        "func": "var a = global.get(\"conveyor_id_hmi\")\nvar container_released_ack = {}\n\nif (msg.payload.msg_type=='container_released' && msg.payload.conveyor_id==a)\n{\nvar d = new Date()\nvar time = d.getTime()\n\nvar c36={};\n\nif (msg.payload.step_id=='36')\n{\n\ncontainer_released_ack.task_id = msg.payload.task_id; \ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")//\"1\" //PLC Value\ncontainer_released_ack.step_id = msg.payload.step_id //PLC Valye, although fixed\ncontainer_released_ack.msg_type = \"container_released_ack\" //Fix Value\ncontainer_released_ack.container_id = msg.payload.container_id; //global.get(\"c9.container_id\") //PLC Value\n//var data1 = global.get(\"c9.data\")\ncontainer_released_ack.data = msg.payload.data; //JSON.parse(data1) //PLC Value or safe to drop Value\n\nif  (global.get(\"order6.sensor\")==true)\n{\ncontainer_released_ack.status = \"success\" //PLC Value\ncontainer_released_ack.errorCode = \"\" //PLC Value\ncontainer_released_ack.errorMessage = \"\" //PLC Value\n\n}\n\nelse \n{\ncontainer_released_ack.status = \"failed\" //PLC Value\ncontainer_released_ack.errorCode = \"ERR001\" //PLC Value\ncontainer_released_ack.errorMessage = \"NO TOTE PRESENT\" //PLC Value\n\n}\n\nglobal.set(\"c36\",container_released_ack);\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n\n\n}\n\n\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 520,
        "wires": [
            [
                "5f709c1b0d0368ad"
            ]
        ]
    },
    {
        "id": "9f06f80a337b56ae",
        "type": "mqtt out",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1170,
        "y": 1180,
        "wires": []
    },
    {
        "id": "10089cc4711b76ed",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "bottom layer broker in",
        "links": [
            "937cce842b747007"
        ],
        "x": 1045,
        "y": 1120,
        "wires": [
            [
                "9f06f80a337b56ae"
            ]
        ]
    },
    {
        "id": "e75ca163812477c9",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "MOVED 31",
        "diff": false,
        "name": "",
        "x": 330,
        "y": 1180,
        "wires": [
            [
                "5825bbbc6c12e416"
            ]
        ]
    },
    {
        "id": "5825bbbc6c12e416",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step31 moved",
        "func": "\nvar container_moved = {};\n\ncontainer_moved.data = {};\n\n\n\nif (msg.payload ==true)\n\n{\n\nvar c31 = global.get(\"c31\");\n\n\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_moved.task_id = c31.task_id; //global.get(\"release_c9.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = \"24\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = c31.container_id; //global.get(\"release_c9.container_id\") //PLC Value\n\ncontainer_moved.data = c31.data; // JSON.parse(data1);//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n//global.set(\"release_c9\",{})\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1180,
        "wires": [
            [
                "aeb1664b3dbd596f",
                "816e6658e9038ded"
            ]
        ]
    },
    {
        "id": "816e6658e9038ded",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "reset step31 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\" && msg.payload.step_id == \"24\")\n{\n    msg.payload = false\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1080,
        "wires": [
            [
                "1796e7b943bd938d"
            ]
        ]
    },
    {
        "id": "1796e7b943bd938d",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "MOVED 31",
        "name": "",
        "x": 1150,
        "y": 1080,
        "wires": []
    },
    {
        "id": "aeb1664b3dbd596f",
        "type": "delay",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 1180,
        "wires": [
            [
                "9f06f80a337b56ae"
            ]
        ]
    },
    {
        "id": "b98cf206b97b964b",
        "type": "mqtt out",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1150,
        "y": 1400,
        "wires": []
    },
    {
        "id": "848418041fb55141",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "bottom layer broker in",
        "links": [
            "937cce842b747007"
        ],
        "x": 1025,
        "y": 1340,
        "wires": [
            [
                "b98cf206b97b964b"
            ]
        ]
    },
    {
        "id": "2978154fd80de061",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "MOVED 32",
        "diff": false,
        "name": "",
        "x": 310,
        "y": 1400,
        "wires": [
            [
                "67c567bd19957531"
            ]
        ]
    },
    {
        "id": "67c567bd19957531",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step32 moved",
        "func": "\nvar container_moved = {};\n\ncontainer_moved.data = {};\n\n\nif (msg.payload ==true)\n\n{\n\nvar c32 = global.get(\"c32\");\n\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_moved.task_id = c32.task_id; //global.get(\"release_c9.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = \"25\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = c32.container_id; //global.get(\"release_c9.container_id\") //PLC Value\n\ncontainer_moved.data = c32.data; // JSON.parse(data1);//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n//global.set(\"release_c9\",{})\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1400,
        "wires": [
            [
                "a1102658c62314f5",
                "e263c5d64a7b4d0d"
            ]
        ]
    },
    {
        "id": "e263c5d64a7b4d0d",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "reset step32 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\" && msg.payload.step_id == \"25\")\n{\n    msg.payload = false\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1300,
        "wires": [
            [
                "1c40a4df86715494"
            ]
        ]
    },
    {
        "id": "1c40a4df86715494",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "MOVED 32",
        "name": "",
        "x": 1130,
        "y": 1300,
        "wires": []
    },
    {
        "id": "a1102658c62314f5",
        "type": "delay",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 1400,
        "wires": [
            [
                "b98cf206b97b964b"
            ]
        ]
    },
    {
        "id": "01fabcd44d4e8a9d",
        "type": "mqtt out",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1170,
        "y": 1620,
        "wires": []
    },
    {
        "id": "5b6e80b0828486ec",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "bottom layer broker in",
        "links": [
            "937cce842b747007"
        ],
        "x": 1045,
        "y": 1560,
        "wires": [
            [
                "01fabcd44d4e8a9d"
            ]
        ]
    },
    {
        "id": "828ec4fba1c72bbc",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "MOVED 33",
        "diff": false,
        "name": "",
        "x": 330,
        "y": 1620,
        "wires": [
            [
                "e182424be7e8374d"
            ]
        ]
    },
    {
        "id": "e182424be7e8374d",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step33 moved",
        "func": "\nvar container_moved = {};\n\ncontainer_moved.data = {};\n\n\nif (msg.payload ==true)\n\n{\n\nvar c33 = global.get(\"c33\");\n\n\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_moved.task_id = c33.task_id; //global.get(\"release_c9.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = \"26\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = c33.container_id; //global.get(\"release_c9.container_id\") //PLC Value\n\ncontainer_moved.data = c33.data; // JSON.parse(data1);//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n//global.set(\"release_c9\",{})\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1620,
        "wires": [
            [
                "7b0f40f739b5cb2d",
                "2cfbbb146a291535"
            ]
        ]
    },
    {
        "id": "2cfbbb146a291535",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "reset step33 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\" && msg.payload.step_id == \"26\")\n{\n    msg.payload = false\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1520,
        "wires": [
            [
                "f0de4a8c750c61b1"
            ]
        ]
    },
    {
        "id": "f0de4a8c750c61b1",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "MOVED 33",
        "name": "",
        "x": 1150,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7b0f40f739b5cb2d",
        "type": "delay",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 1620,
        "wires": [
            [
                "01fabcd44d4e8a9d"
            ]
        ]
    },
    {
        "id": "e646af1367f3623b",
        "type": "mqtt out",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1170,
        "y": 1880,
        "wires": []
    },
    {
        "id": "57e16d9e0f4a75a9",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "bottom layer broker in",
        "links": [
            "937cce842b747007"
        ],
        "x": 1045,
        "y": 1820,
        "wires": [
            [
                "e646af1367f3623b"
            ]
        ]
    },
    {
        "id": "75e2a4b5d74b1b96",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "MOVED 34",
        "diff": false,
        "name": "",
        "x": 330,
        "y": 1880,
        "wires": [
            [
                "e16b741c7f40d096"
            ]
        ]
    },
    {
        "id": "e16b741c7f40d096",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step34 moved",
        "func": "\nvar container_moved = {};\n\ncontainer_moved.data = {};\n\n\nif (msg.payload ==true)\n\n{\n\nvar c34 = global.get(\"c34\");\n\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_moved.task_id = c34.task_id; //global.get(\"release_c9.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = \"27\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = c34.container_id; //global.get(\"release_c9.container_id\") //PLC Value\n\ncontainer_moved.data = c34.data; // JSON.parse(data1);//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n//global.set(\"release_c9\",{})\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1880,
        "wires": [
            [
                "3331367c9e14d793",
                "3b9bf9602898b9e5"
            ]
        ]
    },
    {
        "id": "3b9bf9602898b9e5",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "reset step34 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\" && msg.payload.step_id == \"27\")\n{\n    msg.payload = false\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1780,
        "wires": [
            [
                "1c37efa7ca822063"
            ]
        ]
    },
    {
        "id": "1c37efa7ca822063",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "MOVED 34",
        "name": "",
        "x": 1150,
        "y": 1780,
        "wires": []
    },
    {
        "id": "3331367c9e14d793",
        "type": "delay",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 1880,
        "wires": [
            [
                "e646af1367f3623b"
            ]
        ]
    },
    {
        "id": "1019502dcc42a16c",
        "type": "mqtt out",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1150,
        "y": 2140,
        "wires": []
    },
    {
        "id": "1c2de813cdf4b711",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "bottom layer broker in",
        "links": [
            "937cce842b747007"
        ],
        "x": 1025,
        "y": 2080,
        "wires": [
            [
                "1019502dcc42a16c"
            ]
        ]
    },
    {
        "id": "94d66e210512bac0",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "MOVED 35",
        "diff": false,
        "name": "",
        "x": 310,
        "y": 2140,
        "wires": [
            [
                "624d8e473571943a"
            ]
        ]
    },
    {
        "id": "624d8e473571943a",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step35 moved",
        "func": "\nvar container_moved = {};\n\ncontainer_moved.data = {};\n\n\nif (msg.payload ==true)\n\n{\nvar c35 = global.get(\"c35\");\n\n\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_moved.task_id = c35.task_id; //global.get(\"release_c9.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = \"28\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = c35.container_id; //global.get(\"release_c9.container_id\") //PLC Value\n\ncontainer_moved.data = c35.data; // JSON.parse(data1);//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n//global.set(\"release_c9\",{})\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2140,
        "wires": [
            [
                "3e7d7a28643e290c",
                "545a05050ac58052"
            ]
        ]
    },
    {
        "id": "545a05050ac58052",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "reset step35 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\" && msg.payload.step_id == \"28\")\n{\n    msg.payload = false\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2040,
        "wires": [
            [
                "c23feced72e6b1a5"
            ]
        ]
    },
    {
        "id": "c23feced72e6b1a5",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "MOVED 35",
        "name": "",
        "x": 1130,
        "y": 2040,
        "wires": []
    },
    {
        "id": "3e7d7a28643e290c",
        "type": "delay",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 2140,
        "wires": [
            [
                "1019502dcc42a16c"
            ]
        ]
    },
    {
        "id": "87218448ef19a729",
        "type": "mqtt out",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1150,
        "y": 2400,
        "wires": []
    },
    {
        "id": "fce6546ac217ae0a",
        "type": "link in",
        "z": "b1ddcc6619ec652e",
        "name": "bottom layer broker in",
        "links": [
            "937cce842b747007"
        ],
        "x": 1025,
        "y": 2340,
        "wires": [
            [
                "87218448ef19a729"
            ]
        ]
    },
    {
        "id": "ce9ccc54b5798e87",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "MOVED 36",
        "diff": false,
        "name": "",
        "x": 310,
        "y": 2400,
        "wires": [
            [
                "e190976815be1e1e"
            ]
        ]
    },
    {
        "id": "e190976815be1e1e",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "step36 moved",
        "func": "\nvar container_moved = {};\n\ncontainer_moved.data = {};\n\n\nif (msg.payload ==true)\n\n{\nvar c36 = global.get(\"c36\");\n\n\nvar d = new Date()\nvar time = d.getTime()\n\n\n\ncontainer_moved.task_id = c36.task_id; //global.get(\"release_c9.task_id\")\ncontainer_moved.timestamp = JSON.stringify(time)\ncontainer_moved.conveyor_id = global.get(\"conveyor_id_hmi\")//'1'//global.get(\"conveyor_id_hmi\") //PLC Value\ncontainer_moved.step_id = \"29\" //global.get(\"reach_step_id\") //PLC Valye, although fixed\ncontainer_moved.msg_type = \"container_moved\" //Fix Value\ncontainer_moved.container_id = c36.container_id; //global.get(\"release_c9.container_id\") //PLC Value\n\ncontainer_moved.data = c36.data; // JSON.parse(data1);//PLC Value or safe to drop Value\n\n\n    \nmsg.topic = global.get(\"send_event_topic\")  \nmsg.payload=container_moved\n//global.set(\"release_c9\",{})\nreturn msg;\n}\n\n\n// \"{\n//   \"\"task_id\"\":\"\"task001\"\",\n//   \"\"timestamp\"\":\"\"1635402778670\"\",\n//   \"\"conveyor_id\"\":\"\"1\"\",\n//   \"\"step_id\"\":\"\"4\"\",\n//   \"\"container_id\"\":\"\"4543656\"\", \n//   \"\"msg_type\"\":\"\"container_moved\"\",\n//   \"\"data\"\":{  \"\"originating_service\"\":\"\"GMC\"\"  }\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2400,
        "wires": [
            [
                "9e90a2b3bf218260",
                "f46ae531749f7959"
            ]
        ]
    },
    {
        "id": "f46ae531749f7959",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "reset step36 moved",
        "func": "if (msg.payload.msg_type == \"container_moved\" && msg.payload.step_id == \"29\")\n{\n    msg.payload = false\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2300,
        "wires": [
            [
                "c853532ab94e5f14"
            ]
        ]
    },
    {
        "id": "c853532ab94e5f14",
        "type": "s7 out",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "variable": "MOVED 36",
        "name": "",
        "x": 1130,
        "y": 2300,
        "wires": []
    },
    {
        "id": "9e90a2b3bf218260",
        "type": "delay",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 2400,
        "wires": [
            [
                "87218448ef19a729"
            ]
        ]
    },
    {
        "id": "e5e208931a925d84",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "ORDER CONV SENSOR1",
        "diff": false,
        "name": "",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "8351803c70c8d95e"
            ]
        ]
    },
    {
        "id": "30c2b57a081e1b24",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "ORDER CONV SENSOR2",
        "diff": false,
        "name": "",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "006f95823ad16fa9"
            ]
        ]
    },
    {
        "id": "95f6f7405d9214ec",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "ORDER CONV SENSOR3",
        "diff": false,
        "name": "",
        "x": 150,
        "y": 720,
        "wires": [
            [
                "a0b56990a850e115"
            ]
        ]
    },
    {
        "id": "2f887089cfa952e3",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "ORDER CONV SENSOR4",
        "diff": false,
        "name": "",
        "x": 150,
        "y": 780,
        "wires": [
            [
                "038a9e1f07e5197a"
            ]
        ]
    },
    {
        "id": "8351803c70c8d95e",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "sensor order1",
        "func": "\n\nglobal.set(\"order1.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "006f95823ad16fa9",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "sensor order2",
        "func": "\n\nglobal.set(\"order2.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "a0b56990a850e115",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "sensor order3",
        "func": "\n\nglobal.set(\"order3.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "038a9e1f07e5197a",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "sensor order4",
        "func": "\nglobal.set(\"order4.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "33ab150f39bd345b",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "ORDER CONV SENSOR5",
        "diff": false,
        "name": "",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "86329bd721d2cc5e"
            ]
        ]
    },
    {
        "id": "cc624bf853f34108",
        "type": "s7 in",
        "z": "b1ddcc6619ec652e",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "ORDER CONV SENSOR6",
        "diff": false,
        "name": "",
        "x": 150,
        "y": 900,
        "wires": [
            [
                "e84575d46905d54e"
            ]
        ]
    },
    {
        "id": "86329bd721d2cc5e",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "sensor order5",
        "func": "\n\nglobal.set(\"order5.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "e84575d46905d54e",
        "type": "function",
        "z": "b1ddcc6619ec652e",
        "name": "sensor order6",
        "func": "\n\nglobal.set(\"order6.sensor\",msg.payload)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "1559586f0087f39c",
        "type": "debug",
        "z": "b1ddcc6619ec652e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "972edf0691267f14",
        "type": "comment",
        "z": "6f284bd392ced08a",
        "name": "Add Tote data push",
        "info": "",
        "x": 250,
        "y": 160,
        "wires": []
    },
    {
        "id": "4242358d536802ad",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "filtering as per msg_type and cycle stop",
        "func": "var a = global.get(\"conveyor_id_hmi\");\n\nvar b = global.get(\"cycle_run\");\n\nif (msg.payload.conveyor_id == a && b == false && msg.payload.msg_type == \"add_container\")\n{\n//global.set(\"tote_addition_released_msg\", msg.payload)\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            [
                "8cdfa4815371513c",
                "b0ec118a4b05c309",
                "2d84eb2ee5eed50b",
                "3fe2febc6288d068",
                "f584d6145785be0a",
                "509866fd6d937df5",
                "bc06614bcdd6e4fe"
            ]
        ]
    },
    {
        "id": "8cdfa4815371513c",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "write step id",
        "func": "var a = msg.payload.step_id;\n\nmsg.payload = parseInt(a);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 260,
        "wires": [
            [
                "c208016167a214a6"
            ]
        ]
    },
    {
        "id": "b0ec118a4b05c309",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "write task id",
        "func": "msg.payload = msg.payload.task_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 320,
        "wires": [
            [
                "5d11c338f784408e"
            ]
        ]
    },
    {
        "id": "2d84eb2ee5eed50b",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "write container id",
        "func": "msg.payload = msg.payload.container_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 380,
        "wires": [
            [
                "36da0bebd909abe1"
            ]
        ]
    },
    {
        "id": "3fe2febc6288d068",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "write data",
        "func": "msg.payload = msg.payload.data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 440,
        "wires": [
            [
                "5fb557b632108b78"
            ]
        ]
    },
    {
        "id": "c208016167a214a6",
        "type": "s7 out",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "variable": "Add Tote step id",
        "name": "",
        "x": 1140,
        "y": 260,
        "wires": []
    },
    {
        "id": "5d11c338f784408e",
        "type": "s7 out",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "variable": "Add tote task id",
        "name": "",
        "x": 1140,
        "y": 320,
        "wires": []
    },
    {
        "id": "36da0bebd909abe1",
        "type": "s7 out",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "variable": "Add tote cont id",
        "name": "",
        "x": 1140,
        "y": 380,
        "wires": []
    },
    {
        "id": "99e4777661e5f56d",
        "type": "s7 out",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "variable": "Add tote data",
        "name": "",
        "x": 1450,
        "y": 440,
        "wires": []
    },
    {
        "id": "e12474abb7fb08e1",
        "type": "json",
        "z": "6f284bd392ced08a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "4242358d536802ad",
                "6850a4de00266407"
            ]
        ]
    },
    {
        "id": "27492a05047d3353",
        "type": "link in",
        "z": "6f284bd392ced08a",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 115,
        "y": 260,
        "wires": [
            [
                "37baa655eb5d6c6f"
            ]
        ]
    },
    {
        "id": "37baa655eb5d6c6f",
        "type": "mqtt in",
        "z": "6f284bd392ced08a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "e12474abb7fb08e1"
            ]
        ]
    },
    {
        "id": "c91e8a65d35be463",
        "type": "link in",
        "z": "6f284bd392ced08a",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 115,
        "y": 200,
        "wires": [
            [
                "37baa655eb5d6c6f"
            ]
        ]
    },
    {
        "id": "f584d6145785be0a",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "write data",
        "func": "msg.payload = msg.payload.destination_ids;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 500,
        "wires": [
            [
                "1b9a6eaf178e240e"
            ]
        ]
    },
    {
        "id": "80ed38d1d1ab846d",
        "type": "s7 out",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "variable": "Add Tote Destination Id",
        "name": "",
        "x": 1550,
        "y": 500,
        "wires": []
    },
    {
        "id": "f681cd110a61037a",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "code for destination conversion",
        "func": "var a = [];\n\na = msg.payload;\n\n\nvar b = a[0].conveyor_id;\n\nvar c = a[0].step_id;\n\n\n\nif (c==\"26\" ) \n{\n    msg.payload = \"out\" + b;\n    return msg;\n}\n\n\nelse\n{\n  msg.payload = \"in\" + b;  \n  return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 500,
        "wires": [
            [
                "80ed38d1d1ab846d"
            ]
        ]
    },
    {
        "id": "1b9a6eaf178e240e",
        "type": "json",
        "z": "6f284bd392ced08a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "f681cd110a61037a"
            ]
        ]
    },
    {
        "id": "5fb557b632108b78",
        "type": "json",
        "z": "6f284bd392ced08a",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "691c5e65fbc226e4"
            ]
        ]
    },
    {
        "id": "691c5e65fbc226e4",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "",
        "func": "var a = msg.payload.substring(0,210)\nmsg.payload =a ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 440,
        "wires": [
            [
                "99e4777661e5f56d"
            ]
        ]
    },
    {
        "id": "bc06614bcdd6e4fe",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "CONT_ADD_ack FOR SUCCESS",
        "func": "var a = global.get(\"conveyor_id_hmi\")\n\nvar container_released_ack = {}\n\nvar d = new Date()\nvar time = d.getTime()\n\nif (msg.payload.msg_type=='add_container' && msg.payload.conveyor_id==a)\n{\n\n\n\ncontainer_released_ack.task_id = msg.payload.task_id;\ncontainer_released_ack.timestamp = JSON.stringify(time)\ncontainer_released_ack.conveyor_id = global.get(\"conveyor_id_hmi\")\ncontainer_released_ack.step_id = msg.payload.step_id \ncontainer_released_ack.msg_type = \"add_container_ack\" \ncontainer_released_ack.container_id =msg.payload.container_id \ncontainer_released_ack.data = msg.payload.data\n\ncontainer_released_ack.status = \"success\" \ncontainer_released_ack.errorCode = \"\" \ncontainer_released_ack.errorMessage = \"\" \n\n\nmsg.topic=global.get(\"send_event_topic\")\nmsg.payload=container_released_ack\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 580,
        "wires": [
            [
                "128aa7d46d8e7004",
                "49ee9c844ddee222"
            ]
        ]
    },
    {
        "id": "128aa7d46d8e7004",
        "type": "mqtt out",
        "z": "6f284bd392ced08a",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1370,
        "y": 580,
        "wires": []
    },
    {
        "id": "77b1e970a1bb0e81",
        "type": "link in",
        "z": "6f284bd392ced08a",
        "name": "in broker setting for cont reach",
        "links": [
            "937cce842b747007"
        ],
        "x": 1335,
        "y": 660,
        "wires": [
            [
                "128aa7d46d8e7004"
            ]
        ]
    },
    {
        "id": "49ee9c844ddee222",
        "type": "debug",
        "z": "6f284bd392ced08a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1210,
        "y": 620,
        "wires": []
    },
    {
        "id": "4659e0c2db6ff505",
        "type": "comment",
        "z": "6f284bd392ced08a",
        "name": "Add Tote release ack",
        "info": "",
        "x": 920,
        "y": 540,
        "wires": []
    },
    {
        "id": "6850a4de00266407",
        "type": "debug",
        "z": "6f284bd392ced08a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "509866fd6d937df5",
        "type": "debug",
        "z": "6f284bd392ced08a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "956387d620022927",
        "type": "json",
        "z": "6f284bd392ced08a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 410,
        "y": 1080,
        "wires": [
            [
                "3dedb0bb3f457919"
            ]
        ]
    },
    {
        "id": "d1f2247b06f5347e",
        "type": "link in",
        "z": "6f284bd392ced08a",
        "name": "in broker setting",
        "links": [
            "937cce842b747007"
        ],
        "x": 125,
        "y": 1100,
        "wires": [
            [
                "389278afc5597fbc"
            ]
        ]
    },
    {
        "id": "389278afc5597fbc",
        "type": "mqtt in",
        "z": "6f284bd392ced08a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "dae8e0f240545747",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "956387d620022927"
            ]
        ]
    },
    {
        "id": "5776052d66120dab",
        "type": "link in",
        "z": "6f284bd392ced08a",
        "name": "CONT DROPPED RCV REQ PUSH IN",
        "links": [
            "903a9a5597df95ab"
        ],
        "x": 125,
        "y": 1060,
        "wires": [
            [
                "389278afc5597fbc"
            ]
        ]
    },
    {
        "id": "884f027d193be09e",
        "type": "inject",
        "z": "6f284bd392ced08a",
        "name": "dummy push",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task002\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"4\",\"step_id\":\"9\",\"msg_type\":\"container_released\",\"container_id\":\"tote001\",\"destination_ids\":[{\"conveyor_id\":\"10\",\"step_id\":\"10\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "str",
        "x": 250,
        "y": 1020,
        "wires": [
            [
                "956387d620022927"
            ]
        ]
    },
    {
        "id": "8a0996fb4233aa22",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "check cycle stop and step id match",
        "func": "\n\nif (global.get(\"cycle_run\")==false && msg.payload.msg_type==\"remove_container\" && msg.payload.conveyor_id==global.get(\"conveyor_id_hmi\") )//&& msg.payload.container_id == global.get(\"deleted.container_id\")\n{\nglobal.set(\"delete_data_received\",msg.payload)\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1080,
        "wires": [
            [
                "1c57dd42c04f26a8"
            ]
        ]
    },
    {
        "id": "3dedb0bb3f457919",
        "type": "delay",
        "z": "6f284bd392ced08a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 1080,
        "wires": [
            [
                "8a0996fb4233aa22",
                "283953b98e09e2dd",
                "38ec25fe8b3868a9"
            ]
        ]
    },
    {
        "id": "161c2bc639372a4d",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "removed_ack",
        "func": "var step_id = global.get(\"deleted.step_id\")\n\n\n\nvar removed_ack={}\n\n\nif ( msg.payload==true)\n{\n    var data1 = global.get(\"deleted.data\");\n    removed_ack.task_id = global.get(\"delete_data_received.task_id\");// global.get(\"deleted.task_id\") ? global.get(\"deleted.task_id\"):\"\";\n    removed_ack.container_id = global.get(\"deleted.container_id\") ? global.get(\"deleted.container_id\"):\"\";\n    removed_ack.data = global.get(\"delete_data_received.data\");\n    removed_ack.conveyor_id = global.get(\"conveyor_id_hmi\");\n    removed_ack.step_id = global.get(\"deleted.step_id\");\n    removed_ack.msg_type = \"remove_container_ack\";\n    removed_ack.status = \"success\";\n    removed_ack.errorCode = \"\";\n    removed_ack.errorMessage = \"\";\n    msg.topic = global.get(\"send_event_topic\")\n    msg.payload = removed_ack;\n    \n    return msg;\n    \n }\n \n\n\n\n// \"{ \n//   \"\"task_id\"\":\"\"task001\"\", \n//   \"\"timestamp\"\":\"\"1635402778670\"\", \n//   \"\"status\"\":\"\"success/failed\"\", \n//   \"\"errorCode\"\":\"\"ER001\"\", \n//   \"\"errorMessage\"\":\"\"errorreason\"\", \n//   \"\"conveyor_id\"\":\"\"1\"\", \n//   \"\"step_id\"\":\"\"10\"\", \n//   \"\"msg_type\"\":\"\"remove_container_ack\"\", \n//   \"\"container_id\"\":\"\"tote001\"\", \n//   \"\"data\"\":{}\n// }\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1300,
        "wires": [
            [
                "313a9c81358a2654",
                "1c93a3324115a7b8"
            ]
        ]
    },
    {
        "id": "21f764d61eea995b",
        "type": "mqtt out",
        "z": "6f284bd392ced08a",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "dae8e0f240545747",
        "x": 1430,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f039691b8ef8d195",
        "type": "link in",
        "z": "6f284bd392ced08a",
        "name": "in broker setting for cont reach",
        "links": [
            "937cce842b747007"
        ],
        "x": 1315,
        "y": 1220,
        "wires": [
            [
                "21f764d61eea995b"
            ]
        ]
    },
    {
        "id": "283953b98e09e2dd",
        "type": "debug",
        "z": "6f284bd392ced08a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1020,
        "wires": []
    },
    {
        "id": "313a9c81358a2654",
        "type": "delay",
        "z": "6f284bd392ced08a",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1020,
        "y": 1300,
        "wires": [
            [
                "21f764d61eea995b",
                "80bd63ad04d7b9e8"
            ]
        ]
    },
    {
        "id": "df1a3b4578bc96e0",
        "type": "s7 in",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Deleted STEP",
        "diff": false,
        "name": "",
        "x": 670,
        "y": 900,
        "wires": [
            [
                "3955cbd343c45c27"
            ]
        ]
    },
    {
        "id": "3955cbd343c45c27",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "",
        "func": "global.set(\"deleted.step_id\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "80bd63ad04d7b9e8",
        "type": "debug",
        "z": "6f284bd392ced08a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 1360,
        "wires": []
    },
    {
        "id": "cabdbd169540aad2",
        "type": "s7 out",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "variable": "Delete msg pushed",
        "name": "",
        "x": 1150,
        "y": 1160,
        "wires": []
    },
    {
        "id": "38ec25fe8b3868a9",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "check cycle stop and match conveyor_id and push true",
        "func": "\n\nif (global.get(\"cycle_run\")==false && msg.payload.msg_type==\"remove_container\" && msg.payload.conveyor_id==global.get(\"conveyor_id_hmi\") )//&& msg.payload.container_id == global.get(\"deleted.container_id\")\n{\nmsg.payload= true;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1160,
        "wires": [
            [
                "cabdbd169540aad2"
            ]
        ]
    },
    {
        "id": "9dc78fbb6eda844d",
        "type": "s7 out",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "variable": "Deleted STEP",
        "name": "",
        "x": 1200,
        "y": 1080,
        "wires": []
    },
    {
        "id": "1c57dd42c04f26a8",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "",
        "func": "var a = msg.payload.step_id;\n\nmsg.payload = parseInt(a)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1080,
        "wires": [
            [
                "9dc78fbb6eda844d"
            ]
        ]
    },
    {
        "id": "9de3eaf1ac561e9f",
        "type": "inject",
        "z": "6f284bd392ced08a",
        "name": "step10 remove",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task001\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"23\",\"step_id\":\"24\",\"container_id\":\"tote001\",\"msg_type\":\"remove_container\",\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 220,
        "y": 960,
        "wires": [
            [
                "956387d620022927"
            ]
        ]
    },
    {
        "id": "6f8aadc45b9bccfe",
        "type": "s7 in",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "null msg push",
        "diff": false,
        "name": "",
        "x": 210,
        "y": 1300,
        "wires": [
            [
                "6bdc457989979d74"
            ]
        ]
    },
    {
        "id": "6bdc457989979d74",
        "type": "delay",
        "z": "6f284bd392ced08a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 1300,
        "wires": [
            [
                "161c2bc639372a4d"
            ]
        ]
    },
    {
        "id": "32b6057c7ffa9a87",
        "type": "inject",
        "z": "6f284bd392ced08a",
        "name": "step10 add",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"task_id\":\"task001\",\"timestamp\":\"1635402778670\",\"conveyor_id\":\"23\",\"step_id\":\"24\",\"container_id\":\"tote001\",\"msg_type\":\"add_container\",\"destination_ids\":[{\"conveyor_id\":\"23\",\"step_id\":\"26\"}],\"data\":{\"originating_service\":\"GMC\"}}",
        "payloadType": "json",
        "x": 340,
        "y": 340,
        "wires": [
            [
                "4242358d536802ad"
            ]
        ]
    },
    {
        "id": "f6dcb9a699948c5f",
        "type": "s7 out",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "variable": "Delete process status",
        "name": "",
        "x": 980,
        "y": 1440,
        "wires": []
    },
    {
        "id": "1c93a3324115a7b8",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": " push 2",
        "func": "\nmsg.payload= 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1440,
        "wires": [
            [
                "321690fc6f9980c8"
            ]
        ]
    },
    {
        "id": "2fa9f19dcf7334f4",
        "type": "s7 in",
        "z": "6f284bd392ced08a",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "Delete Cont ID",
        "diff": false,
        "name": "",
        "x": 220,
        "y": 900,
        "wires": [
            [
                "09aa138ff6627c1d"
            ]
        ]
    },
    {
        "id": "09aa138ff6627c1d",
        "type": "function",
        "z": "6f284bd392ced08a",
        "name": "",
        "func": "if (msg.payload!=\"\")\n{\nglobal.set(\"deleted.container_id\",msg.payload)\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "321690fc6f9980c8",
        "type": "delay",
        "z": "6f284bd392ced08a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 1440,
        "wires": [
            [
                "f6dcb9a699948c5f"
            ]
        ]
    },
    {
        "id": "2fa81ba750c5dcd9",
        "type": "comment",
        "z": "6f284bd392ced08a",
        "name": "delete Tote ack",
        "info": "",
        "x": 220,
        "y": 1260,
        "wires": []
    },
    {
        "id": "31ecab6e7ba38b75",
        "type": "comment",
        "z": "6f284bd392ced08a",
        "name": "delete Tote",
        "info": "",
        "x": 200,
        "y": 840,
        "wires": []
    },
    {
        "id": "40c342c7734aa469",
        "type": "exec",
        "z": "c03b9138cbeb5616",
        "command": ">",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1370,
        "y": 580,
        "wires": [
            [
                "9cba9989bd7ed84b"
            ],
            [
                "889a36df94c405cf"
            ],
            [
                "99def4be881b550c"
            ]
        ]
    },
    {
        "id": "9cba9989bd7ed84b",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1530,
        "y": 560,
        "wires": []
    },
    {
        "id": "889a36df94c405cf",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1530,
        "y": 600,
        "wires": []
    },
    {
        "id": "99def4be881b550c",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1530,
        "y": 640,
        "wires": []
    },
    {
        "id": "f6807b68cf5cadb8",
        "type": "inject",
        "z": "c03b9138cbeb5616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/var/log/daemon.log",
        "payloadType": "str",
        "x": 1170,
        "y": 540,
        "wires": [
            [
                "40c342c7734aa469"
            ]
        ]
    },
    {
        "id": "d7e41e5c83758ad1",
        "type": "inject",
        "z": "c03b9138cbeb5616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/var/log/syslog",
        "payloadType": "str",
        "x": 1150,
        "y": 660,
        "wires": [
            [
                "40c342c7734aa469"
            ]
        ]
    },
    {
        "id": "a05ce7c8e12d9723",
        "type": "inject",
        "z": "c03b9138cbeb5616",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "1caa6d60a449a8c7"
            ]
        ]
    },
    {
        "id": "1caa6d60a449a8c7",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "if true deploy",
        "func": "\nmsg.headers = {\n  \"Node-RED-Deployment-Type\":\"reload\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 640,
        "wires": [
            [
                "f92f8136a9aaf645"
            ]
        ]
    },
    {
        "id": "f92f8136a9aaf645",
        "type": "http request",
        "z": "c03b9138cbeb5616",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/flows",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 640,
        "wires": [
            [
                "8dc2f1ec07b45591"
            ]
        ]
    },
    {
        "id": "8dc2f1ec07b45591",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 670,
        "y": 640,
        "wires": []
    },
    {
        "id": "cdb67e32e5f2b75d",
        "type": "s7 in",
        "z": "c03b9138cbeb5616",
        "endpoint": "519a9c297613d180",
        "mode": "single",
        "variable": "ReDeploy Push",
        "diff": true,
        "name": "",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "bd192ebfc9f2c267"
            ]
        ]
    },
    {
        "id": "bd192ebfc9f2c267",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "",
        "func": "if (msg.payload==true)\n{\n    msg.topic = \"\"\n    msg.payload = \"\"\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 740,
        "wires": [
            [
                "1caa6d60a449a8c7"
            ]
        ]
    },
    {
        "id": "994ddbd551d16b32",
        "type": "http request",
        "z": "c03b9138cbeb5616",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "/container_dropped",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 800,
        "wires": [
            [
                "bb18f2499b5232ae"
            ]
        ]
    },
    {
        "id": "bb18f2499b5232ae",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 790,
        "y": 820,
        "wires": []
    },
    {
        "id": "0bb238bd448d1f56",
        "type": "http in",
        "z": "c03b9138cbeb5616",
        "name": "",
        "url": "/container_dropped",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 550,
        "y": 860,
        "wires": [
            [
                "bb18f2499b5232ae"
            ]
        ]
    },
    {
        "id": "5b6e0621690f8ce3",
        "type": "exec",
        "z": "c03b9138cbeb5616",
        "command": "du -h /var/log/daemon.log",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "acbf16b551e9fe3d"
            ],
            [],
            []
        ]
    },
    {
        "id": "1731f4c0f390c957",
        "type": "inject",
        "z": "c03b9138cbeb5616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/var/log",
        "payloadType": "str",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "5b6e0621690f8ce3",
                "005053019397c363"
            ]
        ]
    },
    {
        "id": "c2ee435533a3b8ad",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "acbf16b551e9fe3d",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 200,
        "wires": [
            [
                "c2ee435533a3b8ad",
                "a5a746871ebd1c23"
            ]
        ]
    },
    {
        "id": "e91933406f184420",
        "type": "exec",
        "z": "c03b9138cbeb5616",
        "command": ">",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1330,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6ae47ac3063e0c9f",
        "type": "inject",
        "z": "c03b9138cbeb5616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/var/log/daemon.log",
        "payloadType": "str",
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "e91933406f184420"
            ]
        ]
    },
    {
        "id": "2247b1fd6d7f99c2",
        "type": "inject",
        "z": "c03b9138cbeb5616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/var/log/syslog",
        "payloadType": "str",
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "e91933406f184420"
            ]
        ]
    },
    {
        "id": "ce41cca1f84fe786",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "a5a746871ebd1c23",
        "type": "json",
        "z": "c03b9138cbeb5616",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "7a6925335c525356"
            ]
        ]
    },
    {
        "id": "005053019397c363",
        "type": "exec",
        "z": "c03b9138cbeb5616",
        "command": "du -h /var/log/syslog",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 460,
        "wires": [
            [
                "1fce11db31772f63"
            ],
            [],
            []
        ]
    },
    {
        "id": "aa32cd0ad741998c",
        "type": "inject",
        "z": "c03b9138cbeb5616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/var/log",
        "payloadType": "str",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "005053019397c363"
            ]
        ]
    },
    {
        "id": "b593a5502bd7459c",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 690,
        "y": 400,
        "wires": []
    },
    {
        "id": "1fce11db31772f63",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 400,
        "wires": [
            [
                "b593a5502bd7459c",
                "ade1201340d6048a"
            ]
        ]
    },
    {
        "id": "e96e8febd0b62dd8",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 980,
        "y": 480,
        "wires": []
    },
    {
        "id": "ade1201340d6048a",
        "type": "json",
        "z": "c03b9138cbeb5616",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 630,
        "y": 480,
        "wires": [
            [
                "1ee88d91f3042a33"
            ]
        ]
    },
    {
        "id": "7a6925335c525356",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "",
        "func": "var a = msg.payload\n\nlet result = a.indexOf(\"G\");\n\n\nlet result1 = a.substring(0, result);\n\nmsg.payload = parseInt(result1)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 140,
        "wires": [
            [
                "ce41cca1f84fe786",
                "03b9a4df2152a1fd"
            ]
        ]
    },
    {
        "id": "1ee88d91f3042a33",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "",
        "func": "var a = msg.payload\n\nlet result = a.indexOf(\"G\");\n\n\nlet result1 = a.substring(0, result);\n\nmsg.payload = parseInt(result1)\n\nglobal.set(\"syslog_memory\",msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 480,
        "wires": [
            [
                "e96e8febd0b62dd8"
            ]
        ]
    },
    {
        "id": "03b9a4df2152a1fd",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "",
        "func": "if (msg.payload>1)\n{\nmsg.payload='/var/log/daemon.log'\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 80,
        "wires": [
            [
                "e91933406f184420",
                "ab7b99d3301ac647"
            ]
        ]
    },
    {
        "id": "ab7b99d3301ac647",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 80,
        "wires": []
    },
    {
        "id": "cd2a18ec816de43a",
        "type": "inject",
        "z": "c03b9138cbeb5616",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 630,
        "y": 320,
        "wires": [
            [
                "6c6f015de4347f7b"
            ]
        ]
    },
    {
        "id": "6c6f015de4347f7b",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "",
        "func": "\nvar d = new Date();\nvar hour = d.getHours();\n//msg.payload=hour\n\nif (hour>7 && global.get(\"syslog_memory\")>1)\n{\nmsg.payload=true\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 320,
        "wires": [
            [
                "93e53ee9a0809836",
                "f64d8529de4108aa"
            ]
        ]
    },
    {
        "id": "93e53ee9a0809836",
        "type": "debug",
        "z": "c03b9138cbeb5616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 260,
        "wires": []
    },
    {
        "id": "f64d8529de4108aa",
        "type": "function",
        "z": "c03b9138cbeb5616",
        "name": "",
        "func": "if (msg.payload==true)\n{\nmsg.payload='/var/log/syslog'\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "e91933406f184420"
            ]
        ]
    }
]